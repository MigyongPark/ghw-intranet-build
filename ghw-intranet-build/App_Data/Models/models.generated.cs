//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.4.0
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

[assembly: PureLiveAssembly]
[assembly:ModelsBuilderAssembly(PureLive = true, SourceHash = "409db0b6575bcd47")]
[assembly:System.Reflection.AssemblyVersion("0.0.0.2")]

namespace Umbraco.Web.PublishedContentModels
{
	/// <summary>Advanced Component Master</summary>
	[PublishedContentModel("USNAdvancedComponentMaster")]
	public partial class UsnadvancedComponentMaster : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNAdvancedComponentMaster";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnadvancedComponentMaster(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnadvancedComponentMaster, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public object DisableDelete
		{
			get { return this.GetPropertyValue("disableDelete"); }
		}
	}

	/// <summary>Advanced Page Components Folder</summary>
	[PublishedContentModel("USNAdvancedPageComponents")]
	public partial class UsnadvancedPageComponents : UsnadvancedComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNAdvancedPageComponents";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnadvancedPageComponents(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnadvancedPageComponents, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Page Components{i class="icon sprTree icon-folder-outline color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}Add components below this folder to organise the layout and content of your page.{/p}{p}The order of your components within this folder directly relates to the order your components will be displayed on this page. Use {strong}Actions } Sort{/strong} to reorder your components.{p}{strong}DO NOT{/strong} delete or rename this folder.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}
	}

	/// <summary>Banner</summary>
	[PublishedContentModel("USN_AC_Banner")]
	public partial class Usn_Ac_Banner : UsnadvancedComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_Banner";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_Banner(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_Banner, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("animate")]
		public object Animate
		{
			get { return this.GetPropertyValue("animate"); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.  {br}{br} If the banner contains an image, use the color that works best for the text over the image.
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public object BackgroundColor
		{
			get { return this.GetPropertyValue("backgroundColor"); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("bannerHeading")]
		public USN.Heading.Umbraco.Models.USNHeading BannerHeading
		{
			get { return this.GetPropertyValue<USN.Heading.Umbraco.Models.USNHeading>("bannerHeading"); }
		}

		///<summary>
		/// Image: For all Parallax and Takeover banners, your image will be cropped to 1600px by 1600px.  {br}{br} If you choose a 'Medium' banner style without the Parallax effect your image will be cropped to 1600px by 700px. {br}{br} If you choose a 'Short' banner style without the Parallax effect your image will be cropped to 1600px by 500px. {br}{br} Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("bannerImage")]
		public string BannerImage
		{
			get { return this.GetPropertyValue<string>("bannerImage"); }
		}

		///<summary>
		/// Image alt text
		///</summary>
		[ImplementPropertyType("bannerImageAltText")]
		public string BannerImageAltText
		{
			get { return this.GetPropertyValue<string>("bannerImageAltText"); }
		}

		///<summary>
		/// Link: Use the 'Caption' field to override the default link text.  {br}{br}  The tab that is open will be used.
		///</summary>
		[ImplementPropertyType("bannerLink")]
		public USN.UrlPicker.Umbraco.Models.UrlPicker BannerLink
		{
			get { return this.GetPropertyValue<USN.UrlPicker.Umbraco.Models.UrlPicker>("bannerLink"); }
		}

		///<summary>
		/// Banner style
		///</summary>
		[ImplementPropertyType("bannerStyle")]
		public object BannerStyle
		{
			get { return this.GetPropertyValue("bannerStyle"); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("bannerText")]
		public IHtmlString BannerText
		{
			get { return this.GetPropertyValue<IHtmlString>("bannerText"); }
		}

		///<summary>
		/// Text alignment
		///</summary>
		[ImplementPropertyType("bannerTextAlignment")]
		public object BannerTextAlignment
		{
			get { return this.GetPropertyValue("bannerTextAlignment"); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("buttonColor")]
		public object ButtonColor
		{
			get { return this.GetPropertyValue("buttonColor"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Banner{i class="icon sprTree icon-picture color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Parallax
		///</summary>
		[ImplementPropertyType("parallax")]
		public object Parallax
		{
			get { return this.GetPropertyValue("parallax"); }
		}

		///<summary>
		/// Scroll prompt
		///</summary>
		[ImplementPropertyType("scrollPrompt")]
		public object ScrollPrompt
		{
			get { return this.GetPropertyValue("scrollPrompt"); }
		}
	}

	/// <summary>Banner Section</summary>
	[PublishedContentModel("USN_AC_BannerSection_AN")]
	public partial class Usn_Ac_BannerSection_AN : UsnadvancedComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_BannerSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_BannerSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_BannerSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Banner Section{i class="icon sprTree icon-folder-outline color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{p}You must add at least one "Banner" below this folder.{/p}{p}The order of your "Banners" within this folder directly relates to the order your "Banners" will be displayed on this page. Use  {strong}Actions } Sort{/strong} to reorder your "Banners".{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}
	}

	/// <summary>Blog Master</summary>
	[PublishedContentModel("USNBlogMaster")]
	public partial class UsnblogMaster : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNBlogMaster";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnblogMaster(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnblogMaster, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public object DisableDelete
		{
			get { return this.GetPropertyValue("disableDelete"); }
		}
	}

	/// <summary>Blog Author</summary>
	[PublishedContentModel("USNBlogAuthor")]
	public partial class UsnblogAuthor : UsnblogMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNBlogAuthor";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnblogAuthor(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnblogAuthor, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Author bio: The author bio will appear below every blog post associated with this author and should contain a short snippet about the author.
		///</summary>
		[ImplementPropertyType("authorBio")]
		public IHtmlString AuthorBio
		{
			get { return this.GetPropertyValue<IHtmlString>("authorBio"); }
		}

		///<summary>
		/// Author page: Use this to link to the authors page which could be an external blog or a page on this website. If something is entered here the authors name on blog listings and blog post pages will link to this page.  {br}{br}  The tab that is open will be used.
		///</summary>
		[ImplementPropertyType("authorPage")]
		public USN.UrlPicker.Umbraco.Models.UrlPicker AuthorPage
		{
			get { return this.GetPropertyValue<USN.UrlPicker.Umbraco.Models.UrlPicker>("authorPage"); }
		}

		///<summary>
		/// Behance link
		///</summary>
		[ImplementPropertyType("behanceLink")]
		public string BehanceLink
		{
			get { return this.GetPropertyValue<string>("behanceLink"); }
		}

		///<summary>
		/// Facebook link
		///</summary>
		[ImplementPropertyType("facebookLink")]
		public string FacebookLink
		{
			get { return this.GetPropertyValue<string>("facebookLink"); }
		}

		///<summary>
		/// Flickr link
		///</summary>
		[ImplementPropertyType("flickrLink")]
		public string FlickrLink
		{
			get { return this.GetPropertyValue<string>("flickrLink"); }
		}

		///<summary>
		/// Google+ link
		///</summary>
		[ImplementPropertyType("googleLink")]
		public string GoogleLink
		{
			get { return this.GetPropertyValue<string>("googleLink"); }
		}

		///<summary>
		/// Instagram link
		///</summary>
		[ImplementPropertyType("instagramLink")]
		public string InstagramLink
		{
			get { return this.GetPropertyValue<string>("instagramLink"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Blog Author{i class="icon sprTree icon-user-glasses color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above will be used for the "Author Name" displayed on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("insttructions")]
		public object Insttructions
		{
			get { return this.GetPropertyValue("insttructions"); }
		}

		///<summary>
		/// LinkedIn link
		///</summary>
		[ImplementPropertyType("linkedInLink")]
		public string LinkedInLink
		{
			get { return this.GetPropertyValue<string>("linkedInLink"); }
		}

		///<summary>
		/// Pinterest link
		///</summary>
		[ImplementPropertyType("pinterestLink")]
		public string PinterestLink
		{
			get { return this.GetPropertyValue<string>("pinterestLink"); }
		}

		///<summary>
		/// SoundCloud link
		///</summary>
		[ImplementPropertyType("soundCloudLink")]
		public string SoundCloudLink
		{
			get { return this.GetPropertyValue<string>("soundCloudLink"); }
		}

		///<summary>
		/// Tumblr link
		///</summary>
		[ImplementPropertyType("tumblrLink")]
		public string TumblrLink
		{
			get { return this.GetPropertyValue<string>("tumblrLink"); }
		}

		///<summary>
		/// Twitter link
		///</summary>
		[ImplementPropertyType("twitterLink")]
		public string TwitterLink
		{
			get { return this.GetPropertyValue<string>("twitterLink"); }
		}

		///<summary>
		/// Vimeo link
		///</summary>
		[ImplementPropertyType("vimeoLink")]
		public string VimeoLink
		{
			get { return this.GetPropertyValue<string>("vimeoLink"); }
		}

		///<summary>
		/// YouTube link
		///</summary>
		[ImplementPropertyType("youTubeLink")]
		public string YouTubeLink
		{
			get { return this.GetPropertyValue<string>("youTubeLink"); }
		}
	}

	/// <summary>Blog Authors Folder</summary>
	[PublishedContentModel("USNBlogAuthors")]
	public partial class UsnblogAuthors : UsnblogMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNBlogAuthors";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnblogAuthors(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnblogAuthors, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Blog Authors{i class="icon sprTree icon-folder-outline color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}Create items below this folder to add new "Blog Authors".{/p} {p}{strong}DO NOT{/strong} delete or rename this folder.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}
	}

	/// <summary>Blog Categories Folder</summary>
	[PublishedContentModel("USNBlogCategories")]
	public partial class UsnblogCategories : UsnblogMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNBlogCategories";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnblogCategories(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnblogCategories, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Blog Categories{i class="icon sprTree icon-folder-outline color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}Create items below this folder to add new "Blog Categories".{/p} {p}{strong}DO NOT{/strong} delete or rename this folder.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}
	}

	/// <summary>Blog Category</summary>
	[PublishedContentModel("USNBlogCategory")]
	public partial class UsnblogCategory : UsnblogMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNBlogCategory";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnblogCategory(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnblogCategory, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Introduction: Displayed only on page one of the "Blog Landing Page" when this category is selected.
		///</summary>
		[ImplementPropertyType("categoryIntroduction")]
		public IHtmlString CategoryIntroduction
		{
			get { return this.GetPropertyValue<IHtmlString>("categoryIntroduction"); }
		}

		///<summary>
		/// Category page title: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("categoryPageTitle")]
		public string CategoryPageTitle
		{
			get { return this.GetPropertyValue<string>("categoryPageTitle"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Blog Category{i class="icon sprTree icon-categories color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above will be used for the "Category Name" displayed on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Meta description: Use this field to enter a description for your category listing page. This is the information that is displayed by search engines when your website appears in a search listing. Try and keep this below 155 characters.
		///</summary>
		[ImplementPropertyType("metaDescription")]
		public string MetaDescription
		{
			get { return this.GetPropertyValue<string>("metaDescription"); }
		}

		///<summary>
		/// Open Graph description: A detailed description of the piece of content, usually between 2 and 4 sentences. This tag is technically optional, but can improve the rate at which links are read and shared.
		///</summary>
		[ImplementPropertyType("openGraphDescription")]
		public string OpenGraphDescription
		{
			get { return this.GetPropertyValue<string>("openGraphDescription"); }
		}

		///<summary>
		/// Open Graph image: This is an image associated with your media. We suggest that you use an image of at least 1200x630 pixels. If nothing is uploaded here the "Default Open Graph image" from your "Global Settings" will be used.
		///</summary>
		[ImplementPropertyType("openGraphImage")]
		public string OpenGraphImage
		{
			get { return this.GetPropertyValue<string>("openGraphImage"); }
		}

		///<summary>
		/// Open Graph title: Use this field to override the default Open Graph title of your category listing page. The default Open Graph title will be a combination of the category name, blog landing page node name and the website name defined in "Global Settings".
		///</summary>
		[ImplementPropertyType("openGraphTitle")]
		public string OpenGraphTitle
		{
			get { return this.GetPropertyValue<string>("openGraphTitle"); }
		}

		///<summary>
		/// Web page header title: Use this field to override the default page title of your category listing page. The default page title will be a combination of the category name, blog landing page node name and the website name defined in "Global Settings".
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}
	}

	/// <summary>Blog Month Folder</summary>
	[PublishedContentModel("USNBlogMonthFolder")]
	public partial class UsnblogMonthFolder : UsnblogMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNBlogMonthFolder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnblogMonthFolder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnblogMonthFolder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Blog Month Folder{i class="icon sprTree icon-calendar-alt color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}Use this folder as a container to organise your "Blog Posts" into a month. {/p} {p} It is recommended to name these January, February etc {/p}{p}Add your "Blog Posts"below this folder.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}
	}

	/// <summary>Blog Posts Folder</summary>
	[PublishedContentModel("USNBlogPostsFolder")]
	public partial class UsnblogPostsFolder : UsnblogMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNBlogPostsFolder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnblogPostsFolder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnblogPostsFolder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Blog Posts Folder{i class="icon sprTree icon-folder-outline color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}Add "Year" folders below this folder to organise your "Blog Posts".{/p} {p}{strong}DO NOT{/strong} delete or rename this folder.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}
	}

	/// <summary>Blog RSS</summary>
	[PublishedContentModel("USNBlogRSS")]
	public partial class UsnblogRss : UsnblogMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNBlogRSS";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnblogRss(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnblogRss, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Blog RSS{i class="icon sprTree icon-rss color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}This page will display the RSS feed for your blog posts.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Copyright
		///</summary>
		[ImplementPropertyType("rssCopyright")]
		public string RssCopyright
		{
			get { return this.GetPropertyValue<string>("rssCopyright"); }
		}

		///<summary>
		/// Description
		///</summary>
		[ImplementPropertyType("rssDescription")]
		public string RssDescription
		{
			get { return this.GetPropertyValue<string>("rssDescription"); }
		}

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("rssTitle")]
		public string RssTitle
		{
			get { return this.GetPropertyValue<string>("rssTitle"); }
		}
	}

	/// <summary>Blog Year Folder</summary>
	[PublishedContentModel("USNBlogYearFolder")]
	public partial class UsnblogYearFolder : UsnblogMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNBlogYearFolder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnblogYearFolder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnblogYearFolder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Blog Year Folder{i class="icon sprTree icon-folder-outline color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}Use this folder as a container to organise your "Blog Posts" into a year. {/p} {p} It is recommended to name these 2016, 2017 etc.  {/p} {p}Add "Month" folders below this folder to organise your "Blog Posts".{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}
	}

	/// <summary>Call to Action Strip</summary>
	[PublishedContentModel("USN_AC_CTAStrip_AN")]
	public partial class Usn_Ac_Ctastrip_AN : UsnadvancedComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_CTAStrip_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_Ctastrip_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_Ctastrip_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("animate")]
		public object Animate
		{
			get { return this.GetPropertyValue("animate"); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public object BackgroundColor
		{
			get { return this.GetPropertyValue("backgroundColor"); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("buttonColor")]
		public object ButtonColor
		{
			get { return this.GetPropertyValue("buttonColor"); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("heading")]
		public USN.Heading.Umbraco.Models.USNHeading Heading
		{
			get { return this.GetPropertyValue<USN.Heading.Umbraco.Models.USNHeading>("heading"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Call to Action Strip{i class="icon sprTree icon-megaphone color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Link: Use the 'Caption' field to override the default link text. {br}{br} The tab that is open will be used.
		///</summary>
		[ImplementPropertyType("link")]
		public USN.UrlPicker.Umbraco.Models.UrlPicker Link
		{
			get { return this.GetPropertyValue<USN.UrlPicker.Umbraco.Models.UrlPicker>("link"); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("text")]
		public IHtmlString Text
		{
			get { return this.GetPropertyValue<IHtmlString>("text"); }
		}
	}

	/// <summary>Content Master</summary>
	[PublishedContentModel("USNContentMaster")]
	public partial class UsncontentMaster : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNContentMaster";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsncontentMaster(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsncontentMaster, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public object DisableDelete
		{
			get { return this.GetPropertyValue("disableDelete"); }
		}

		///<summary>
		/// Hide outro strip section: Select "Yes" to hide the outro strip section if content has been added to "Global Settings" or above.
		///</summary>
		[ImplementPropertyType("hideOutroStripSection")]
		public object HideOutroStripSection
		{
			get { return this.GetPropertyValue("hideOutroStripSection"); }
		}

		///<summary>
		/// Meta description: Use this field to enter a description for your webpage. This is the information that is displayed by search engines when your website appears in a search listing. Try and keep this below 155 characters.
		///</summary>
		[ImplementPropertyType("metaDescription")]
		public string MetaDescription
		{
			get { return this.GetPropertyValue<string>("metaDescription"); }
		}

		///<summary>
		/// Open Graph description: A detailed description of the piece of content, usually between 2 and 4 sentences. This tag is technically optional, but can improve the rate at which links are read and shared.
		///</summary>
		[ImplementPropertyType("openGraphDescription")]
		public string OpenGraphDescription
		{
			get { return this.GetPropertyValue<string>("openGraphDescription"); }
		}

		///<summary>
		/// Open Graph image: This is an image associated with your media. We suggest that you use an image of at least 1200x630 pixels. If nothing is uploaded here the "Default Open Graph image" from your "Global Settings" will be used.
		///</summary>
		[ImplementPropertyType("openGraphImage")]
		public string OpenGraphImage
		{
			get { return this.GetPropertyValue<string>("openGraphImage"); }
		}

		///<summary>
		/// Open Graph title: Use this field to override the default Open Graph title of your webpage. The default Open Graph title will be a combination of the current page node name and the website name defined in "Global Settings".
		///</summary>
		[ImplementPropertyType("openGraphTitle")]
		public string OpenGraphTitle
		{
			get { return this.GetPropertyValue<string>("openGraphTitle"); }
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("outroAnimate")]
		public object OutroAnimate
		{
			get { return this.GetPropertyValue("outroAnimate"); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.
		///</summary>
		[ImplementPropertyType("outroBackgroundColor")]
		public object OutroBackgroundColor
		{
			get { return this.GetPropertyValue("outroBackgroundColor"); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("outroButtonColor")]
		public object OutroButtonColor
		{
			get { return this.GetPropertyValue("outroButtonColor"); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("outroHeading")]
		public USN.Heading.Umbraco.Models.USNHeading OutroHeading
		{
			get { return this.GetPropertyValue<USN.Heading.Umbraco.Models.USNHeading>("outroHeading"); }
		}

		///<summary>
		/// Link: If a link is added here it will override the default link added in "Global Settings".  {br}{br}  Use the 'Caption' field to override the default link text.  {br}{br}  The tab that is open will be used.
		///</summary>
		[ImplementPropertyType("outroLink")]
		public USN.UrlPicker.Umbraco.Models.UrlPicker OutroLink
		{
			get { return this.GetPropertyValue<USN.UrlPicker.Umbraco.Models.UrlPicker>("outroLink"); }
		}

		///<summary>
		/// Text: If text is added here it will override the default text added in "Global Settings"
		///</summary>
		[ImplementPropertyType("outroText")]
		public IHtmlString OutroText
		{
			get { return this.GetPropertyValue<IHtmlString>("outroText"); }
		}

		///<summary>
		/// Override default outro strip section: Select "Yes" to override the default outro stip section if content has been added to "Global Settings".
		///</summary>
		[ImplementPropertyType("overrideDefaultOutroStripSection")]
		public object OverrideDefaultOutroStripSection
		{
			get { return this.GetPropertyValue("overrideDefaultOutroStripSection"); }
		}

		///<summary>
		/// Web page header title: Use this field to override the default page title of your webpage. The default page title will be a combination of the current page node name and the website name defined in "Global Settings".
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// Hide from all navigation
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public object UmbracoNaviHide
		{
			get { return this.GetPropertyValue("umbracoNaviHide"); }
		}

		///<summary>
		/// Alternative URL: Use this field to provide multiple URLs for a content node.  {br}{br}  For example if you were to enter "examplepage1,examplepage2/this-is-a-test", this would resolve the following URLs to the same page.  {br}{br}  /examplepage1/  /examplepage2/this-is-a-test/  {br}{br}  Please note that the values you use must be lowercase, not use a leading slash and not use a trailing ".aspx".
		///</summary>
		[ImplementPropertyType("umbracoUrlAlias")]
		public string UmbracoUrlAlias
		{
			get { return this.GetPropertyValue<string>("umbracoUrlAlias"); }
		}
	}

	/// <summary>Advanced Page Master</summary>
	[PublishedContentModel("USNAdvancedPageMaster")]
	public partial class UsnadvancedPageMaster : UsncontentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNAdvancedPageMaster";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnadvancedPageMaster(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnadvancedPageMaster, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Advanced Page</summary>
	[PublishedContentModel("USNAdvancedPage")]
	public partial class UsnadvancedPage : UsnadvancedPageMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNAdvancedPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnadvancedPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnadvancedPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Breadcrumb link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("breadcrumbLinkText")]
		public string BreadcrumbLinkText
		{
			get { return this.GetPropertyValue<string>("breadcrumbLinkText"); }
		}

		///<summary>
		/// Hide breadcrumb
		///</summary>
		[ImplementPropertyType("hideBreadcrumb")]
		public object HideBreadcrumb
		{
			get { return this.GetPropertyValue("hideBreadcrumb"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Advanced Page{i class="icon umb-tree-icon sprTree icon-layout pull-right"}{/h3}{/div}{div class="panel-body"}{p}To add content to this page you are required to add components to the "Page Components" folder directly below this page.{/p}{p}By adding new components you will be able to organise the layout and content of this page.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Listing image: Listing image is only displayed if this page appears on a "Sub Page Listing". {br}{br} Image will be cropped to 400px x 300px. {br}{br} Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("pageListingImage")]
		public string PageListingImage
		{
			get { return this.GetPropertyValue<string>("pageListingImage"); }
		}

		///<summary>
		/// Listing image alt text
		///</summary>
		[ImplementPropertyType("pageListingImageAltText")]
		public string PageListingImageAltText
		{
			get { return this.GetPropertyValue<string>("pageListingImageAltText"); }
		}

		///<summary>
		/// Page summary: Summary text is only displayed if this page appears on a "Subpage Listing".
		///</summary>
		[ImplementPropertyType("pageSummary")]
		public IHtmlString PageSummary
		{
			get { return this.GetPropertyValue<IHtmlString>("pageSummary"); }
		}

		///<summary>
		/// Sitemap link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("sitemapLinkText")]
		public string SitemapLinkText
		{
			get { return this.GetPropertyValue<string>("sitemapLinkText"); }
		}

		///<summary>
		/// Sub navigation link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("subNavigationLinkText")]
		public string SubNavigationLinkText
		{
			get { return this.GetPropertyValue<string>("subNavigationLinkText"); }
		}

		///<summary>
		/// Subpage listing link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("subpageListingLinkText")]
		public string SubpageListingLinkText
		{
			get { return this.GetPropertyValue<string>("subpageListingLinkText"); }
		}
	}

	/// <summary>Advanced Page Blog Post</summary>
	[PublishedContentModel("USNAdvancedPageBlogPost")]
	public partial class UsnadvancedPageBlogPost : UsnadvancedPageMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNAdvancedPageBlogPost";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnadvancedPageBlogPost(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnadvancedPageBlogPost, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Breadcrumb link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("breadcrumbLinkText")]
		public string BreadcrumbLinkText
		{
			get { return this.GetPropertyValue<string>("breadcrumbLinkText"); }
		}

		///<summary>
		/// Disable comments: Tick this box to disable commenting for this post. This is only relevant if you have entered a "Disqus username" on your "Blog Landing Page".
		///</summary>
		[ImplementPropertyType("disableComments")]
		public bool DisableComments
		{
			get { return this.GetPropertyValue<bool>("disableComments"); }
		}

		///<summary>
		/// Hide breadcrumb
		///</summary>
		[ImplementPropertyType("hideBreadcrumb")]
		public object HideBreadcrumb
		{
			get { return this.GetPropertyValue("hideBreadcrumb"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Advanced Page Blog Post{i class="icon umb-tree-icon sprTree icon-layout pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}To add content to this page you are required to add components to the "Page Components" folder directly below this page.{/p}{p}By adding new components you will be able to organise the layout and content of this page.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Listing image: Image will be cropped to 1140px x 550px. {br}{br} Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("pageListingImage")]
		public string PageListingImage
		{
			get { return this.GetPropertyValue<string>("pageListingImage"); }
		}

		///<summary>
		/// Listing image alt text
		///</summary>
		[ImplementPropertyType("pageListingImageAltText")]
		public string PageListingImageAltText
		{
			get { return this.GetPropertyValue<string>("pageListingImageAltText"); }
		}

		///<summary>
		/// Post summary
		///</summary>
		[ImplementPropertyType("pageSummary")]
		public IHtmlString PageSummary
		{
			get { return this.GetPropertyValue<IHtmlString>("pageSummary"); }
		}

		///<summary>
		/// Author
		///</summary>
		[ImplementPropertyType("postAuthor")]
		public string PostAuthor
		{
			get { return this.GetPropertyValue<string>("postAuthor"); }
		}

		///<summary>
		/// Categories: If selecting a child category make sure you also select the parent categories.
		///</summary>
		[ImplementPropertyType("postCategories")]
		public string PostCategories
		{
			get { return this.GetPropertyValue<string>("postCategories"); }
		}

		///<summary>
		/// Post date
		///</summary>
		[ImplementPropertyType("postDate")]
		public DateTime PostDate
		{
			get { return this.GetPropertyValue<DateTime>("postDate"); }
		}
	}

	/// <summary>Global Settings</summary>
	[PublishedContentModel("USNGlobalSettings")]
	public partial class UsnglobalSettings : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNGlobalSettings";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnglobalSettings(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnglobalSettings, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Behance link
		///</summary>
		[ImplementPropertyType("behanceLink")]
		public string BehanceLink
		{
			get { return this.GetPropertyValue<string>("behanceLink"); }
		}

		///<summary>
		/// Subscriber List ID: Newsletter Signup will only be available if a Subscriber List ID is available. Individual signup forms can have there own Subscriber List ID however the one entered here will be used as the default.
		///</summary>
		[ImplementPropertyType("defaultNewsletterSubscriberListID")]
		public string DefaultNewsletterSubscriberListID
		{
			get { return this.GetPropertyValue<string>("defaultNewsletterSubscriberListID"); }
		}

		///<summary>
		/// Default standard page layout: If 'Content full width' is selected sub navigation will be hidden.
		///</summary>
		[ImplementPropertyType("defaultPageLayout")]
		public object DefaultPageLayout
		{
			get { return this.GetPropertyValue("defaultPageLayout"); }
		}

		///<summary>
		/// Default sitewide pods: Select the default pods you would like to appear on the Standard Pages of your website.
		///</summary>
		[ImplementPropertyType("defaultSitewidePods")]
		public string DefaultSitewidePods
		{
			get { return this.GetPropertyValue<string>("defaultSitewidePods"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public object DisableDelete
		{
			get { return this.GetPropertyValue("disableDelete"); }
		}

		///<summary>
		/// Email Marketing Platform: If nothing is selected Newsletter Signup will not be available.
		///</summary>
		[ImplementPropertyType("emailMarketingPlatform")]
		public object EmailMarketingPlatform
		{
			get { return this.GetPropertyValue("emailMarketingPlatform"); }
		}

		///<summary>
		/// Examine search provider name: Enter the name of your Examine search provider defined in /Config/ExamineSettings.config  {br}{br}  If nothing is entered the search form will not appear.
		///</summary>
		[ImplementPropertyType("examineSearchProviderName")]
		public string ExamineSearchProviderName
		{
			get { return this.GetPropertyValue<string>("examineSearchProviderName"); }
		}

		///<summary>
		/// Facebook link
		///</summary>
		[ImplementPropertyType("facebookLink")]
		public string FacebookLink
		{
			get { return this.GetPropertyValue<string>("facebookLink"); }
		}

		///<summary>
		/// Favicon and touch icons: This image will be used for your website favicon and device bookmarks. We suggest that you use an image of at least 310x310 pixels.
		///</summary>
		[ImplementPropertyType("faviconAndTouchIcons")]
		public string FaviconAndTouchIcons
		{
			get { return this.GetPropertyValue<string>("faviconAndTouchIcons"); }
		}

		///<summary>
		/// Flickr link
		///</summary>
		[ImplementPropertyType("flickrLink")]
		public string FlickrLink
		{
			get { return this.GetPropertyValue<string>("flickrLink"); }
		}

		///<summary>
		/// Address
		///</summary>
		[ImplementPropertyType("footerAddress")]
		public IHtmlString FooterAddress
		{
			get { return this.GetPropertyValue<IHtmlString>("footerAddress"); }
		}

		///<summary>
		/// Company name
		///</summary>
		[ImplementPropertyType("footerCompanyName")]
		public string FooterCompanyName
		{
			get { return this.GetPropertyValue<string>("footerCompanyName"); }
		}

		///<summary>
		/// Other contact information
		///</summary>
		[ImplementPropertyType("footerOtherContactInformation")]
		public IHtmlString FooterOtherContactInformation
		{
			get { return this.GetPropertyValue<IHtmlString>("footerOtherContactInformation"); }
		}

		///<summary>
		/// Footer scripts: Anything you enter here will be placed before the closing &lt;/body&gt; tag on every page of your website.
		///</summary>
		[ImplementPropertyType("footerScripts")]
		public string FooterScripts
		{
			get { return this.GetPropertyValue<string>("footerScripts"); }
		}

		///<summary>
		/// Google business link: This must be a business page, not a user page.
		///</summary>
		[ImplementPropertyType("googleBusinessLink")]
		public string GoogleBusinessLink
		{
			get { return this.GetPropertyValue<string>("googleBusinessLink"); }
		}

		///<summary>
		/// Google+ link
		///</summary>
		[ImplementPropertyType("googleLink")]
		public string GoogleLink
		{
			get { return this.GetPropertyValue<string>("googleLink"); }
		}

		///<summary>
		/// Header scripts: Example usage would be for entering Google Analytics Script code.  {br}{br}  Anything you enter here will be placed before the closing &lt;/head&gt; tag on every page of your website.
		///</summary>
		[ImplementPropertyType("headerScripts")]
		public string HeaderScripts
		{
			get { return this.GetPropertyValue<string>("headerScripts"); }
		}

		///<summary>
		/// Instagram link
		///</summary>
		[ImplementPropertyType("instagramLink")]
		public string InstagramLink
		{
			get { return this.GetPropertyValue<string>("instagramLink"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Global Settings{i class="icon sprTree icon-globe-inverted-europe-africa color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}This item controls global settings that relate to your website as a whole.{/p} {p}{strong}DO NOT{/strong} delete or rename this item.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// LinkedIn link
		///</summary>
		[ImplementPropertyType("linkedInLink")]
		public string LinkedInLink
		{
			get { return this.GetPropertyValue<string>("linkedInLink"); }
		}

		///<summary>
		/// API Key: If nothing is entered Newsletter Signup will not be available.
		///</summary>
		[ImplementPropertyType("newsletterAPIKey")]
		public string NewsletterApikey
		{
			get { return this.GetPropertyValue<string>("newsletterAPIKey"); }
		}

		///<summary>
		/// Default Open Graph image: This is the default Open Graph image associated with your media. We suggest that you use an image of at least 1200x630 pixels.
		///</summary>
		[ImplementPropertyType("openGraphDefaultImage")]
		public string OpenGraphDefaultImage
		{
			get { return this.GetPropertyValue<string>("openGraphDefaultImage"); }
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("outroDefaultAnimate")]
		public object OutroDefaultAnimate
		{
			get { return this.GetPropertyValue("outroDefaultAnimate"); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.
		///</summary>
		[ImplementPropertyType("outroDefaultBackgroundColor")]
		public object OutroDefaultBackgroundColor
		{
			get { return this.GetPropertyValue("outroDefaultBackgroundColor"); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("outroDefaultButtonColor")]
		public object OutroDefaultButtonColor
		{
			get { return this.GetPropertyValue("outroDefaultButtonColor"); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("outroDefaultHeading")]
		public USN.Heading.Umbraco.Models.USNHeading OutroDefaultHeading
		{
			get { return this.GetPropertyValue<USN.Heading.Umbraco.Models.USNHeading>("outroDefaultHeading"); }
		}

		///<summary>
		/// Link: Use the 'Caption' field to override the default link text.  {br}{br}  The tab that is open will be used.
		///</summary>
		[ImplementPropertyType("outroDefaultLink")]
		public USN.UrlPicker.Umbraco.Models.UrlPicker OutroDefaultLink
		{
			get { return this.GetPropertyValue<USN.UrlPicker.Umbraco.Models.UrlPicker>("outroDefaultLink"); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("outroDefaultText")]
		public IHtmlString OutroDefaultText
		{
			get { return this.GetPropertyValue<IHtmlString>("outroDefaultText"); }
		}

		///<summary>
		/// Pinterest link
		///</summary>
		[ImplementPropertyType("pinterestLink")]
		public string PinterestLink
		{
			get { return this.GetPropertyValue<string>("pinterestLink"); }
		}

		///<summary>
		/// RSS Feed
		///</summary>
		[ImplementPropertyType("rssFeedLink")]
		public object RssFeedLink
		{
			get { return this.GetPropertyValue("rssFeedLink"); }
		}

		///<summary>
		/// Search results page: If no page is selected the search form will not appear.
		///</summary>
		[ImplementPropertyType("searchResultsPage")]
		public object SearchResultsPage
		{
			get { return this.GetPropertyValue("searchResultsPage"); }
		}

		///<summary>
		/// Heading
		///</summary>
		[ImplementPropertyType("socialHeading")]
		public string SocialHeading
		{
			get { return this.GetPropertyValue<string>("socialHeading"); }
		}

		///<summary>
		/// SoundCloud link
		///</summary>
		[ImplementPropertyType("soundCloudLink")]
		public string SoundCloudLink
		{
			get { return this.GetPropertyValue<string>("soundCloudLink"); }
		}

		///<summary>
		/// Tumblr link
		///</summary>
		[ImplementPropertyType("tumblrLink")]
		public string TumblrLink
		{
			get { return this.GetPropertyValue<string>("tumblrLink"); }
		}

		///<summary>
		/// Twitter link
		///</summary>
		[ImplementPropertyType("twitterLink")]
		public string TwitterLink
		{
			get { return this.GetPropertyValue<string>("twitterLink"); }
		}

		///<summary>
		/// Vimeo link
		///</summary>
		[ImplementPropertyType("vimeoLink")]
		public string VimeoLink
		{
			get { return this.GetPropertyValue<string>("vimeoLink"); }
		}

		///<summary>
		/// Website logo: We suggest that you use an image of at least 240 pixels in height. This is to ensure your logo is ready for both retina and non-retina displays.
		///</summary>
		[ImplementPropertyType("websiteLogo")]
		public string WebsiteLogo
		{
			get { return this.GetPropertyValue<string>("websiteLogo"); }
		}

		///<summary>
		/// Website name: The text entered here will be be added to the default Meta title of your webpages and used for the hidden text behind your website logo.
		///</summary>
		[ImplementPropertyType("websiteName")]
		public string WebsiteName
		{
			get { return this.GetPropertyValue<string>("websiteName"); }
		}

		///<summary>
		/// YouTube link
		///</summary>
		[ImplementPropertyType("youTubeLink")]
		public string YouTubeLink
		{
			get { return this.GetPropertyValue<string>("youTubeLink"); }
		}
	}

	/// <summary>Grid Layout Section</summary>
	[PublishedContentModel("USN_AC_GridLayoutSection_AN")]
	public partial class Usn_Ac_GridLayoutSection_AN : UsnadvancedComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_GridLayoutSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_GridLayoutSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_GridLayoutSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("animate")]
		public object Animate
		{
			get { return this.GetPropertyValue("animate"); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public object BackgroundColor
		{
			get { return this.GetPropertyValue("backgroundColor"); }
		}

		///<summary>
		/// Grid
		///</summary>
		[ImplementPropertyType("grid")]
		public Newtonsoft.Json.Linq.JToken Grid
		{
			get { return this.GetPropertyValue<Newtonsoft.Json.Linq.JToken>("grid"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Grid Layout Section{i class="icon sprTree icon-grid color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}
	}

	/// <summary>Homepage</summary>
	[PublishedContentModel("USNHomepage")]
	public partial class Usnhomepage : UsncontentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNHomepage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usnhomepage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usnhomepage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Breadcrumb link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("breadcrumbLinkText")]
		public string BreadcrumbLinkText
		{
			get { return this.GetPropertyValue<string>("breadcrumbLinkText"); }
		}

		///<summary>
		/// Hide breadcrumb
		///</summary>
		[ImplementPropertyType("hideBreadcrumb")]
		public object HideBreadcrumb
		{
			get { return this.GetPropertyValue("hideBreadcrumb"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Homepage{i class="icon umb-tree-icon sprTree icon-home pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}To add content to this page you are required to add components to the "Page Components" folder directly below this page.{/p}{p}By adding new components you will be able to organise the layout and content of this page.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// opelStatus
		///</summary>
		[ImplementPropertyType("opelStatus")]
		public string OpelStatus
		{
			get { return this.GetPropertyValue<string>("opelStatus"); }
		}

		///<summary>
		/// Sitemap link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("sitemapLinkText")]
		public string SitemapLinkText
		{
			get { return this.GetPropertyValue<string>("sitemapLinkText"); }
		}

		///<summary>
		/// Website configuration node: Select the 'Website Configuration' node that will control the global properties of this website.
		///</summary>
		[ImplementPropertyType("websiteConfigurationNode")]
		public object WebsiteConfigurationNode
		{
			get { return this.GetPropertyValue("websiteConfigurationNode"); }
		}
	}

	/// <summary>Navigation</summary>
	[PublishedContentModel("USNNavigation")]
	public partial class Usnnavigation : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNNavigation";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usnnavigation(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usnnavigation, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public object DisableDelete
		{
			get { return this.GetPropertyValue("disableDelete"); }
		}

		///<summary>
		/// Display sub pages: Tick this box to include sub pages in the "Main Navigation".
		///</summary>
		[ImplementPropertyType("displaySubPages")]
		public object DisplaySubPages
		{
			get { return this.GetPropertyValue("displaySubPages"); }
		}

		///<summary>
		/// Footer navigation: Select the links you would like to appear on the "Footer Navigation" of your website.  {br}{br}  The "Caption" field is used for your link text.
		///</summary>
		[ImplementPropertyType("footerNavigation")]
		public Newtonsoft.Json.Linq.JArray FooterNavigation
		{
			get { return this.GetPropertyValue<Newtonsoft.Json.Linq.JArray>("footerNavigation"); }
		}

		///<summary>
		/// Quick links: Select the links you would like to appear on the "Quick links" section of your website.  {br}{br}  The "Caption" field is used for your link text.
		///</summary>
		[ImplementPropertyType("footerQuickLinks")]
		public Newtonsoft.Json.Linq.JArray FooterQuickLinks
		{
			get { return this.GetPropertyValue<Newtonsoft.Json.Linq.JArray>("footerQuickLinks"); }
		}

		///<summary>
		/// Heading
		///</summary>
		[ImplementPropertyType("footerQuickLinksHeading")]
		public string FooterQuickLinksHeading
		{
			get { return this.GetPropertyValue<string>("footerQuickLinksHeading"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Navigation{i class="icon sprTree icon-link color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}This item controls the navigation elements available on your website.{/p} {p}{strong}DO NOT{/strong} delete or rename this item.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Logged in members navigation: Select the pages you would like to appear on the "Logged in Members Navigation" of your website.  The "Caption" field is used for your link text.
		///</summary>
		[ImplementPropertyType("loggedInMembersNavigation")]
		public Newtonsoft.Json.Linq.JArray LoggedInMembersNavigation
		{
			get { return this.GetPropertyValue<Newtonsoft.Json.Linq.JArray>("loggedInMembersNavigation"); }
		}

		///<summary>
		/// Login page: If nothing is selected the "Members Navigation" will be hidden.
		///</summary>
		[ImplementPropertyType("loginPage")]
		public object LoginPage
		{
			get { return this.GetPropertyValue("loginPage"); }
		}

		///<summary>
		/// Main navigation: Select the links you would like to appear on the "Main Navigation" of your website.  {br}{br}  The "Caption" field is used for your link text.
		///</summary>
		[ImplementPropertyType("mainNavigation")]
		public Newtonsoft.Json.Linq.JArray MainNavigation
		{
			get { return this.GetPropertyValue<Newtonsoft.Json.Linq.JArray>("mainNavigation"); }
		}

		///<summary>
		/// Navigation heading: This will override the default heading defined in the Dictionary Section of Umbraco.
		///</summary>
		[ImplementPropertyType("membersNavigationHeading")]
		public string MembersNavigationHeading
		{
			get { return this.GetPropertyValue<string>("membersNavigationHeading"); }
		}

		///<summary>
		/// Top navigation: Select the links you would like to appear on the "Top Navigation" of your website.  {br}{br}  The "Caption" field is used for your link text.
		///</summary>
		[ImplementPropertyType("topNavigation")]
		public Newtonsoft.Json.Linq.JArray TopNavigation
		{
			get { return this.GetPropertyValue<Newtonsoft.Json.Linq.JArray>("topNavigation"); }
		}
	}

	/// <summary>Pod</summary>
	[PublishedContentModel("USN_AC_Pod")]
	public partial class Usn_Ac_Pod : UsnadvancedComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_Pod";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_Pod(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_Pod, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Pod{i class="icon sprTree icon-disc color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Image: Image will be cropped to 400px x 300px. {br}{br} Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("podImage")]
		public string PodImage
		{
			get { return this.GetPropertyValue<string>("podImage"); }
		}

		///<summary>
		/// Image alt text
		///</summary>
		[ImplementPropertyType("podImageAltText")]
		public string PodImageAltText
		{
			get { return this.GetPropertyValue<string>("podImageAltText"); }
		}

		///<summary>
		/// Link: Use the 'Caption' field to override the default link text.  {br}{br}  The tab that is open will be used.
		///</summary>
		[ImplementPropertyType("podLink")]
		public USN.UrlPicker.Umbraco.Models.UrlPicker PodLink
		{
			get { return this.GetPropertyValue<USN.UrlPicker.Umbraco.Models.UrlPicker>("podLink"); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("podText")]
		public IHtmlString PodText
		{
			get { return this.GetPropertyValue<IHtmlString>("podText"); }
		}

		///<summary>
		/// Heading
		///</summary>
		[ImplementPropertyType("podTitle")]
		public string PodTitle
		{
			get { return this.GetPropertyValue<string>("podTitle"); }
		}
	}

	/// <summary>Pods Section</summary>
	[PublishedContentModel("USN_AC_PodsSection_AN")]
	public partial class Usn_Ac_PodsSection_AN : UsnadvancedComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_PodsSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_PodsSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_PodsSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("animate")]
		public object Animate
		{
			get { return this.GetPropertyValue("animate"); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public object BackgroundColor
		{
			get { return this.GetPropertyValue("backgroundColor"); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("buttonColor")]
		public object ButtonColor
		{
			get { return this.GetPropertyValue("buttonColor"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Pod Section{i class="icon sprTree icon-folder-outline color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{p}You must add at least one "Pod" below this folder.{/p}{p}The order of your "Pods" within this folder directly relates to the order your "Pods" will be displayed on this page. Use  {strong}Actions } Sort{/strong} to reorder your "Pods".{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("introductionHeading")]
		public USN.Heading.Umbraco.Models.USNHeading IntroductionHeading
		{
			get { return this.GetPropertyValue<USN.Heading.Umbraco.Models.USNHeading>("introductionHeading"); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("introductionText")]
		public IHtmlString IntroductionText
		{
			get { return this.GetPropertyValue<IHtmlString>("introductionText"); }
		}

		///<summary>
		/// Links: Select the links you would like to appear in the "Outro" section of this component. {br}{br} The "Caption" field is used for your link text.
		///</summary>
		[ImplementPropertyType("outroLinks")]
		public Newtonsoft.Json.Linq.JArray OutroLinks
		{
			get { return this.GetPropertyValue<Newtonsoft.Json.Linq.JArray>("outroLinks"); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("outroText")]
		public IHtmlString OutroText
		{
			get { return this.GetPropertyValue<IHtmlString>("outroText"); }
		}
	}

	/// <summary>Signup/Subpage Listing Section</summary>
	[PublishedContentModel("USN_AC_SignupSubpageListingSection_AN")]
	public partial class Usn_Ac_SignupSubpageListingSection_AN : UsnadvancedComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_SignupSubpageListingSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_SignupSubpageListingSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_SignupSubpageListingSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("animate")]
		public object Animate
		{
			get { return this.GetPropertyValue("animate"); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public object BackgroundColor
		{
			get { return this.GetPropertyValue("backgroundColor"); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("buttonColor")]
		public object ButtonColor
		{
			get { return this.GetPropertyValue("buttonColor"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Signup/Subpage Listing Section{i class="icon sprTree icon-circle-dotted-active color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Link to listing: Link this to a page that contains sub pages. Sub pages will be listed.    Use the 'Caption' field to override the default link text.
		///</summary>
		[ImplementPropertyType("linkToListing")]
		public USN.UrlPicker.Umbraco.Models.UrlPicker LinkToListing
		{
			get { return this.GetPropertyValue<USN.UrlPicker.Umbraco.Models.UrlPicker>("linkToListing"); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("listingSectionHeading")]
		public USN.Heading.Umbraco.Models.USNHeading ListingSectionHeading
		{
			get { return this.GetPropertyValue<USN.Heading.Umbraco.Models.USNHeading>("listingSectionHeading"); }
		}

		///<summary>
		/// Button text
		///</summary>
		[ImplementPropertyType("newsletterButtonText")]
		public string NewsletterButtonText
		{
			get { return this.GetPropertyValue<string>("newsletterButtonText"); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("newsletterHeading")]
		public USN.Heading.Umbraco.Models.USNHeading NewsletterHeading
		{
			get { return this.GetPropertyValue<USN.Heading.Umbraco.Models.USNHeading>("newsletterHeading"); }
		}

		///<summary>
		/// Introduction
		///</summary>
		[ImplementPropertyType("newsletterIntroduction")]
		public IHtmlString NewsletterIntroduction
		{
			get { return this.GetPropertyValue<IHtmlString>("newsletterIntroduction"); }
		}

		///<summary>
		/// Newsletter section position: Display newsletter section to the left or right of the listing section.
		///</summary>
		[ImplementPropertyType("newsletterSectionPosition")]
		public object NewsletterSectionPosition
		{
			get { return this.GetPropertyValue("newsletterSectionPosition"); }
		}

		///<summary>
		/// Subscriber List ID: Newsletter Signup will only be available if a Subscriber List ID is available.  {br}{br}  Use this field to override the default Subscriber List ID in "Global Settings" if present.
		///</summary>
		[ImplementPropertyType("newsletterSubscriberListID")]
		public string NewsletterSubscriberListID
		{
			get { return this.GetPropertyValue<string>("newsletterSubscriberListID"); }
		}

		///<summary>
		/// Pages to display: If nothing is entered, this section will be hidden.
		///</summary>
		[ImplementPropertyType("pagesToDisplay")]
		public string PagesToDisplay
		{
			get { return this.GetPropertyValue<string>("pagesToDisplay"); }
		}

		///<summary>
		/// Submission message
		///</summary>
		[ImplementPropertyType("submissionMessage")]
		public IHtmlString SubmissionMessage
		{
			get { return this.GetPropertyValue<IHtmlString>("submissionMessage"); }
		}

		///<summary>
		/// Summary text character count: Enter the number of characters you would like displayed from the beginning of each page (General pages and Blog posts).   {br}{br}  If summary text has been entered this will be used instead. Summary text must be entered on Advanced pages for this to be displayed. If nothing is entered, no summary text will be displayed.
		///</summary>
		[ImplementPropertyType("summaryTextCharacterCount")]
		public string SummaryTextCharacterCount
		{
			get { return this.GetPropertyValue<string>("summaryTextCharacterCount"); }
		}
	}

	/// <summary>Sitewide Pods Master</summary>
	[PublishedContentModel("USNSitewidePodsMaster")]
	public partial class UsnsitewidePodsMaster : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNSitewidePodsMaster";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnsitewidePodsMaster(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnsitewidePodsMaster, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public object DisableDelete
		{
			get { return this.GetPropertyValue("disableDelete"); }
		}
	}

	/// <summary>Blockquote Pod</summary>
	[PublishedContentModel("USN_SWP_BlockquotePod")]
	public partial class Usn_Swp_BlockquotePod : UsnsitewidePodsMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SWP_BlockquotePod";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Swp_BlockquotePod(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Swp_BlockquotePod, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Cite
		///</summary>
		[ImplementPropertyType("cite")]
		public string Cite
		{
			get { return this.GetPropertyValue<string>("cite"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Blockquote Pod{i class="icon sprTree icon-quote color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Quote
		///</summary>
		[ImplementPropertyType("quote")]
		public string Quote
		{
			get { return this.GetPropertyValue<string>("quote"); }
		}
	}

	/// <summary>Code Pod</summary>
	[PublishedContentModel("USN_SWP_CodePod")]
	public partial class Usn_Swp_CodePod : UsnsitewidePodsMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SWP_CodePod";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Swp_CodePod(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Swp_CodePod, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Code: Enter your raw code here. This can be JavaScript, HTML etc.
		///</summary>
		[ImplementPropertyType("code")]
		public string Code
		{
			get { return this.GetPropertyValue<string>("code"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Code Pod{i class="icon sprTree icon-code color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}
	}

	/// <summary>General Pod</summary>
	[PublishedContentModel("USN_SWP_GeneralPod")]
	public partial class Usn_Swp_GeneralPod : UsnsitewidePodsMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SWP_GeneralPod";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Swp_GeneralPod(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Swp_GeneralPod, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}General Pod{i class="icon sprTree icon-disc color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Heading
		///</summary>
		[ImplementPropertyType("podHeading")]
		public string PodHeading
		{
			get { return this.GetPropertyValue<string>("podHeading"); }
		}

		///<summary>
		/// Link: Use the 'Caption' field to override the default link text.  {br}{br}  The tab that is open will be used.
		///</summary>
		[ImplementPropertyType("podLink")]
		public USN.UrlPicker.Umbraco.Models.UrlPicker PodLink
		{
			get { return this.GetPropertyValue<USN.UrlPicker.Umbraco.Models.UrlPicker>("podLink"); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("podText")]
		public IHtmlString PodText
		{
			get { return this.GetPropertyValue<IHtmlString>("podText"); }
		}
	}

	/// <summary>Image Pod</summary>
	[PublishedContentModel("USN_SWP_ImagePod")]
	public partial class Usn_Swp_ImagePod : UsnsitewidePodsMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SWP_ImagePod";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Swp_ImagePod(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Swp_ImagePod, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Disable light window
		///</summary>
		[ImplementPropertyType("disableLightWindow")]
		public object DisableLightWindow
		{
			get { return this.GetPropertyValue("disableLightWindow"); }
		}

		///<summary>
		/// Image link: Link will only be used if light window is disabled.
		///</summary>
		[ImplementPropertyType("imageLink")]
		public USN.UrlPicker.Umbraco.Models.UrlPicker ImageLink
		{
			get { return this.GetPropertyValue<USN.UrlPicker.Umbraco.Models.UrlPicker>("imageLink"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Image Pod{i class="icon sprTree icon-picture color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Light window footer: This text will be displayed below your image within the light window.
		///</summary>
		[ImplementPropertyType("lightWindowFooter")]
		public string LightWindowFooter
		{
			get { return this.GetPropertyValue<string>("lightWindowFooter"); }
		}

		///<summary>
		/// Light window image: Image will be cropped to 400px x 300px and displayed as the thumbnail. {br}{br} Focal point of the image is defined within your "Media" section.  {br}{br} The original image you upload will be displayed within the light window uncropped.
		///</summary>
		[ImplementPropertyType("lightWindowImage")]
		public string LightWindowImage
		{
			get { return this.GetPropertyValue<string>("lightWindowImage"); }
		}

		///<summary>
		/// Light window title: This text will be displayed above your image within the light window.
		///</summary>
		[ImplementPropertyType("lightWindowTitle")]
		public string LightWindowTitle
		{
			get { return this.GetPropertyValue<string>("lightWindowTitle"); }
		}

		///<summary>
		/// Thumbnail image alt text
		///</summary>
		[ImplementPropertyType("thumbnailImageAltText")]
		public string ThumbnailImageAltText
		{
			get { return this.GetPropertyValue<string>("thumbnailImageAltText"); }
		}
	}

	/// <summary>Listing Pod</summary>
	[PublishedContentModel("USN_SWP_ListingPod")]
	public partial class Usn_Swp_ListingPod : UsnsitewidePodsMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SWP_ListingPod";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Swp_ListingPod(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Swp_ListingPod, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Listing Pod{i class="icon sprTree icon-bulleted-list color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Link to listing: Link this to a page that contains sub pages. Sub pages will be listed.  {br}{br}  Use the 'Caption' field to override the default link text.  {br}{br}  The tab that is open will be used.
		///</summary>
		[ImplementPropertyType("linkToListing")]
		public USN.UrlPicker.Umbraco.Models.UrlPicker LinkToListing
		{
			get { return this.GetPropertyValue<USN.UrlPicker.Umbraco.Models.UrlPicker>("linkToListing"); }
		}

		///<summary>
		/// Pages to display
		///</summary>
		[ImplementPropertyType("pagesToDisplay")]
		public string PagesToDisplay
		{
			get { return this.GetPropertyValue<string>("pagesToDisplay"); }
		}

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("podTitle")]
		public string PodTitle
		{
			get { return this.GetPropertyValue<string>("podTitle"); }
		}
	}

	/// <summary>Newsletter Signup Pod</summary>
	[PublishedContentModel("USN_SWP_NewsletterSignupPod")]
	public partial class Usn_Swp_NewsletterSignupPod : UsnsitewidePodsMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SWP_NewsletterSignupPod";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Swp_NewsletterSignupPod(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Swp_NewsletterSignupPod, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Newsletter Signup Pod{i class="icon sprTree icon-circle-dotted-active color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Button text
		///</summary>
		[ImplementPropertyType("newsletterButtonText")]
		public string NewsletterButtonText
		{
			get { return this.GetPropertyValue<string>("newsletterButtonText"); }
		}

		///<summary>
		/// Heading
		///</summary>
		[ImplementPropertyType("newsletterHeading")]
		public string NewsletterHeading
		{
			get { return this.GetPropertyValue<string>("newsletterHeading"); }
		}

		///<summary>
		/// Introduction
		///</summary>
		[ImplementPropertyType("newsletterIntroduction")]
		public IHtmlString NewsletterIntroduction
		{
			get { return this.GetPropertyValue<IHtmlString>("newsletterIntroduction"); }
		}

		///<summary>
		/// Subscriber List ID: Newsletter Signup will only be available if a Subscriber List ID is available. Use this field to override the default Subscriber List ID in "Global Settings" if present.
		///</summary>
		[ImplementPropertyType("newsletterSubscriberListID")]
		public string NewsletterSubscriberListID
		{
			get { return this.GetPropertyValue<string>("newsletterSubscriberListID"); }
		}

		///<summary>
		/// Submission message
		///</summary>
		[ImplementPropertyType("submissionMessage")]
		public IHtmlString SubmissionMessage
		{
			get { return this.GetPropertyValue<IHtmlString>("submissionMessage"); }
		}
	}

	/// <summary>Sitewide Pods Folder</summary>
	[PublishedContentModel("USNSitewidePods")]
	public partial class UsnsitewidePods : UsnsitewidePodsMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNSitewidePods";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnsitewidePods(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnsitewidePods, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Sitewide Pods{i class="icon sprTree icon-folder-outline color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}Add items below this folder to create "Sitewide pods" that will be available for display on "Standard Pages" and "Standard Page Blog Posts".{/p}{p}The "Pods" tab within "Global Settings" is used to control the default pods that will be added to "Standard Pages" and "Standard Page Blog Posts".{/p}{p}The "Pods" tab on each "Standard Page" and "Standard Page Blog Post" can be used to override the default pods that have been selected.{/p}{p}{strong}DO NOT{/strong} delete or rename this folder.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}
	}

	/// <summary>Standard Component Master</summary>
	[PublishedContentModel("USNStandardComponentMaster")]
	public partial class UsnstandardComponentMaster : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNStandardComponentMaster";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnstandardComponentMaster(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnstandardComponentMaster, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public object DisableDelete
		{
			get { return this.GetPropertyValue("disableDelete"); }
		}
	}

	/// <summary>Accordion/Tab Item</summary>
	[PublishedContentModel("USN_SC_AccordionTabItem")]
	public partial class Usn_Sc_AccordionTabItem : UsnstandardComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_AccordionTabItem";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_AccordionTabItem(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_AccordionTabItem, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Accordion/Tab Item{i class="icon sprTree icon-repeat color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above will be displayed as the "Item Heading".{/p}{p}For example, if using this for a Question/Answer the name you enter will be displayed as the "Question". If you have chosen the "Tabbed" style the name will be used as the "Tab Heading".{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("repeaterText")]
		public IHtmlString RepeaterText
		{
			get { return this.GetPropertyValue<IHtmlString>("repeaterText"); }
		}
	}

	/// <summary>Accordion/Tabbed Section</summary>
	[PublishedContentModel("USN_SC_AccordionTabSection_AN")]
	public partial class Usn_Sc_AccordionTabSection_AN : UsnstandardComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_AccordionTabSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_AccordionTabSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_AccordionTabSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Accordion/Tabbed Section{i class="icon sprTree icon-folder-outline color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{p}You must add at least one "Accordion/Tab Item" below this folder.{/p}{p}The order of your "Accordion/Tab Items" within this folder directly relates to the order your "Accordion/Tab Items" will be displayed on this page. Use {strong}Actions } Sort{/strong} to reorder your "Accordion/Tab Items".{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Layout
		///</summary>
		[ImplementPropertyType("repeaterStyle")]
		public object RepeaterStyle
		{
			get { return this.GetPropertyValue("repeaterStyle"); }
		}

		///<summary>
		/// Width: This setting only applies if this component is added to the "Homepage" or an "Advanced Page".
		///</summary>
		[ImplementPropertyType("width")]
		public object Width
		{
			get { return this.GetPropertyValue("width"); }
		}
	}

	/// <summary>Alert Box</summary>
	[PublishedContentModel("USN_SC_Alert_AN")]
	public partial class Usn_Sc_Alert_AN : UsnstandardComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_Alert_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_Alert_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_Alert_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Colour
		///</summary>
		[ImplementPropertyType("alertColour")]
		public object AlertColour
		{
			get { return this.GetPropertyValue("alertColour"); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("alertText")]
		public IHtmlString AlertText
		{
			get { return this.GetPropertyValue<IHtmlString>("alertText"); }
		}

		///<summary>
		/// Hide close option
		///</summary>
		[ImplementPropertyType("hideCloseOption")]
		public bool HideCloseOption
		{
			get { return this.GetPropertyValue<bool>("hideCloseOption"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Alert Box{i class="icon sprTree icon-alert-alt color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Width: This setting only applies if this component is added to the "Homepage" or an "Advanced Page".
		///</summary>
		[ImplementPropertyType("width")]
		public object Width
		{
			get { return this.GetPropertyValue("width"); }
		}
	}

	/// <summary>Blockquote</summary>
	[PublishedContentModel("USN_SC_Blockquote_AN")]
	public partial class Usn_Sc_Blockquote_AN : UsnstandardComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_Blockquote_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_Blockquote_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_Blockquote_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Cite
		///</summary>
		[ImplementPropertyType("cite")]
		public string Cite
		{
			get { return this.GetPropertyValue<string>("cite"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Blockquote{i class="icon sprTree icon-quote color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Quote
		///</summary>
		[ImplementPropertyType("quote")]
		public string Quote
		{
			get { return this.GetPropertyValue<string>("quote"); }
		}

		///<summary>
		/// Width: This setting only applies if this component is added to the "Homepage" or an "Advanced Page".
		///</summary>
		[ImplementPropertyType("width")]
		public object Width
		{
			get { return this.GetPropertyValue("width"); }
		}
	}

	/// <summary>Code Section</summary>
	[PublishedContentModel("USN_SC_CodeSection_AN")]
	public partial class Usn_Sc_CodeSection_AN : UsnstandardComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_CodeSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_CodeSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_CodeSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Code: Enter your raw code here. This can be JavaScript, HTML etc.
		///</summary>
		[ImplementPropertyType("code")]
		public string Code
		{
			get { return this.GetPropertyValue<string>("code"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Code Section{i class="icon sprTree icon-code color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Width: This setting only applies if this component is added to the "Homepage" or an "Advanced Page".
		///</summary>
		[ImplementPropertyType("width")]
		public object Width
		{
			get { return this.GetPropertyValue("width"); }
		}
	}

	/// <summary>Contact Form</summary>
	[PublishedContentModel("USN_SC_ContactForm_AN")]
	public partial class Usn_Sc_ContactForm_AN : UsnstandardComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_ContactForm_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_ContactForm_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_ContactForm_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Button text
		///</summary>
		[ImplementPropertyType("contactFormButtonText")]
		public string ContactFormButtonText
		{
			get { return this.GetPropertyValue<string>("contactFormButtonText"); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("contactFormHeading")]
		public USN.Heading.Umbraco.Models.USNHeading ContactFormHeading
		{
			get { return this.GetPropertyValue<USN.Heading.Umbraco.Models.USNHeading>("contactFormHeading"); }
		}

		///<summary>
		/// Introduction
		///</summary>
		[ImplementPropertyType("contactFormIntroduction")]
		public IHtmlString ContactFormIntroduction
		{
			get { return this.GetPropertyValue<IHtmlString>("contactFormIntroduction"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Contact Form{i class="icon sprTree icon-paper-plane-alt color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Subscriber List ID: Newsletter Signup will only be available if a Subscriber List ID is available. Use this field to override the default Subscriber List ID in "Global Settings" if present.
		///</summary>
		[ImplementPropertyType("newsletterSubscriberListID")]
		public string NewsletterSubscriberListID
		{
			get { return this.GetPropertyValue<string>("newsletterSubscriberListID"); }
		}

		///<summary>
		/// Recipient Email address
		///</summary>
		[ImplementPropertyType("recipientEmailAddress")]
		public string RecipientEmailAddress
		{
			get { return this.GetPropertyValue<string>("recipientEmailAddress"); }
		}

		///<summary>
		/// Submission message
		///</summary>
		[ImplementPropertyType("submissionMessage")]
		public IHtmlString SubmissionMessage
		{
			get { return this.GetPropertyValue<IHtmlString>("submissionMessage"); }
		}

		///<summary>
		/// Width: This setting only applies if this component is added to the "Homepage" or an "Advanced Page".
		///</summary>
		[ImplementPropertyType("width")]
		public object Width
		{
			get { return this.GetPropertyValue("width"); }
		}
	}

	/// <summary>Gallery Image</summary>
	[PublishedContentModel("USN_SC_GalleryImage")]
	public partial class Usn_Sc_GalleryImage : UsnstandardComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_GalleryImage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_GalleryImage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_GalleryImage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Disable light window
		///</summary>
		[ImplementPropertyType("disableLightWindow")]
		public object DisableLightWindow
		{
			get { return this.GetPropertyValue("disableLightWindow"); }
		}

		///<summary>
		/// Image link: Link will only be used if light window is disabled.  {br}{br}  The tab that is open will be used.
		///</summary>
		[ImplementPropertyType("imageLink")]
		public USN.UrlPicker.Umbraco.Models.UrlPicker ImageLink
		{
			get { return this.GetPropertyValue<USN.UrlPicker.Umbraco.Models.UrlPicker>("imageLink"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Gallery Image{i class="icon sprTree icon-picture color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Light window footer: This text will be displayed below your image within the light window.
		///</summary>
		[ImplementPropertyType("lightWindowFooter")]
		public string LightWindowFooter
		{
			get { return this.GetPropertyValue<string>("lightWindowFooter"); }
		}

		///<summary>
		/// Light window image: Image will be cropped to 400px x 300px and displayed as the gallery thumbnail. {br}{br} Focal point of the image is defined within your "Media" section.  {br}{br} The original image you upload will be displayed within the light window uncropped.
		///</summary>
		[ImplementPropertyType("lightWindowImage")]
		public string LightWindowImage
		{
			get { return this.GetPropertyValue<string>("lightWindowImage"); }
		}

		///<summary>
		/// Light window title: This text will be displayed above your image within the light window.
		///</summary>
		[ImplementPropertyType("lightWindowTitle")]
		public string LightWindowTitle
		{
			get { return this.GetPropertyValue<string>("lightWindowTitle"); }
		}

		///<summary>
		/// Thumbnail image alt text
		///</summary>
		[ImplementPropertyType("thumbnailImageAltText")]
		public string ThumbnailImageAltText
		{
			get { return this.GetPropertyValue<string>("thumbnailImageAltText"); }
		}
	}

	/// <summary>Gallery Section</summary>
	[PublishedContentModel("USN_SC_GallerySection_AN")]
	public partial class Usn_Sc_GallerySection_AN : UsnstandardComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_GallerySection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_GallerySection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_GallerySection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Gallery Section{i class="icon sprTree icon-folder-outline color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{p}You must add at least one "Gallery Image" or "Gallery Video" below this folder.{/p}{p}The order of your items within this folder directly relates to the order your items will be displayed on this page. Use  {strong}Actions } Sort{/strong} to reorder your items.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Width: This setting only applies if this component is added to the "Homepage" or an "Advanced Page".
		///</summary>
		[ImplementPropertyType("width")]
		public object Width
		{
			get { return this.GetPropertyValue("width"); }
		}
	}

	/// <summary>Gallery Video</summary>
	[PublishedContentModel("USN_SC_GalleryVideo")]
	public partial class Usn_Sc_GalleryVideo : UsnstandardComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_GalleryVideo";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_GalleryVideo(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_GalleryVideo, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Thumbnail image: This image is optional. If you do not upload an image, a thumbnail image will be automatically generated for you from the associated video.  {br}{br}  Image will be cropped to 345px x 260px.  {br}{br}  Focal point of the image is defined within your "Media" section. 
		///</summary>
		[ImplementPropertyType("galleryThumbnailImage")]
		public string GalleryThumbnailImage
		{
			get { return this.GetPropertyValue<string>("galleryThumbnailImage"); }
		}

		///<summary>
		/// Video: Copy the full URL for your video from the address bar or share link provided. (YouTube or Vimeo only)
		///</summary>
		[ImplementPropertyType("galleryVideo")]
		public string GalleryVideo
		{
			get { return this.GetPropertyValue<string>("galleryVideo"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Gallery Video{i class="icon sprTree icon-video color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Light window footer: This text will be displayed below your image within the light window.
		///</summary>
		[ImplementPropertyType("lightWindowFooter")]
		public string LightWindowFooter
		{
			get { return this.GetPropertyValue<string>("lightWindowFooter"); }
		}

		///<summary>
		/// Light window title: This text will be displayed above your image within the light window.
		///</summary>
		[ImplementPropertyType("lightWindowTitle")]
		public string LightWindowTitle
		{
			get { return this.GetPropertyValue<string>("lightWindowTitle"); }
		}

		///<summary>
		/// Thumbnail image alt text
		///</summary>
		[ImplementPropertyType("thumbnailImageAltText")]
		public string ThumbnailImageAltText
		{
			get { return this.GetPropertyValue<string>("thumbnailImageAltText"); }
		}
	}

	/// <summary>Links Section</summary>
	[PublishedContentModel("USN_SC_LinksSection_AN")]
	public partial class Usn_Sc_LinksSection_AN : UsnstandardComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_LinksSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_LinksSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_LinksSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Links: The "Caption" field is used for your link text.
		///</summary>
		[ImplementPropertyType("groupLinks")]
		public Newtonsoft.Json.Linq.JArray GroupLinks
		{
			get { return this.GetPropertyValue<Newtonsoft.Json.Linq.JArray>("groupLinks"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Links Section{i class="icon sprTree icon-link color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Width: This setting only applies if this component is added to the "Homepage" or an "Advanced Page".
		///</summary>
		[ImplementPropertyType("width")]
		public object Width
		{
			get { return this.GetPropertyValue("width"); }
		}
	}

	/// <summary>Newsletter Signup Form</summary>
	[PublishedContentModel("USN_NewsletterSignup_AN")]
	public partial class Usn_NewsletterSignup_AN : UsnstandardComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_NewsletterSignup_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_NewsletterSignup_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_NewsletterSignup_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Newsletter Signup Form{i class="icon sprTree icon-circle-dotted-active color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Button text
		///</summary>
		[ImplementPropertyType("newsletterButtonText")]
		public string NewsletterButtonText
		{
			get { return this.GetPropertyValue<string>("newsletterButtonText"); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("newsletterHeading")]
		public USN.Heading.Umbraco.Models.USNHeading NewsletterHeading
		{
			get { return this.GetPropertyValue<USN.Heading.Umbraco.Models.USNHeading>("newsletterHeading"); }
		}

		///<summary>
		/// Introduction
		///</summary>
		[ImplementPropertyType("newsletterIntroduction")]
		public IHtmlString NewsletterIntroduction
		{
			get { return this.GetPropertyValue<IHtmlString>("newsletterIntroduction"); }
		}

		///<summary>
		/// Subscriber List ID: Newsletter Signup will only be available if a Subscriber List ID is available. Use this field to override the default Subscriber List ID in "Global Settings" if present.
		///</summary>
		[ImplementPropertyType("newsletterSubscriberListID")]
		public string NewsletterSubscriberListID
		{
			get { return this.GetPropertyValue<string>("newsletterSubscriberListID"); }
		}

		///<summary>
		/// Submission message
		///</summary>
		[ImplementPropertyType("submissionMessage")]
		public IHtmlString SubmissionMessage
		{
			get { return this.GetPropertyValue<IHtmlString>("submissionMessage"); }
		}

		///<summary>
		/// Width: This setting only applies if this component is added to the "Homepage" or an "Advanced Page".
		///</summary>
		[ImplementPropertyType("width")]
		public object Width
		{
			get { return this.GetPropertyValue("width"); }
		}
	}

	/// <summary>Resource Item</summary>
	[PublishedContentModel("USN_SC_ResourceItem")]
	public partial class Usn_Sc_ResourceItem : UsnstandardComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_ResourceItem";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_ResourceItem(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_ResourceItem, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Attachment: The tab that is open will be used.
		///</summary>
		[ImplementPropertyType("attachement")]
		public USN.UrlPicker.Umbraco.Models.UrlPicker Attachement
		{
			get { return this.GetPropertyValue<USN.UrlPicker.Umbraco.Models.UrlPicker>("attachement"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Resource Item{i class="icon sprTree icon-link color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above will be displayed as the "Resource Name".{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Optional additional information
		///</summary>
		[ImplementPropertyType("optionalAdditionalInformation")]
		public IHtmlString OptionalAdditionalInformation
		{
			get { return this.GetPropertyValue<IHtmlString>("optionalAdditionalInformation"); }
		}
	}

	/// <summary>Resources Section</summary>
	[PublishedContentModel("USN_SC_ResourcesSection_AN")]
	public partial class Usn_Sc_ResourcesSection_AN : UsnstandardComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_ResourcesSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_ResourcesSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_ResourcesSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Resources Section{i class="icon sprTree icon-folder-outline color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{p}You must add at least one "Resource Item" below this folder.{/p}{p}The order of your "Resource Items" within this folder directly relates to the order your "Resource Items" will be displayed on this page.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Width: This setting only applies if this component is added to the "Homepage" or an "Advanced Page".
		///</summary>
		[ImplementPropertyType("width")]
		public object Width
		{
			get { return this.GetPropertyValue("width"); }
		}
	}

	/// <summary>Slideshow Image</summary>
	[PublishedContentModel("USN_SC_SlideshowImage")]
	public partial class Usn_Sc_SlideshowImage : UsnstandardComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_SlideshowImage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_SlideshowImage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_SlideshowImage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Slideshow Image{i class="icon sprTree icon-picture color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Image: Image will be cropped to 1140px x 550px.  {br}{br}  Focal point of the image is defined within your "Media" section. 
		///</summary>
		[ImplementPropertyType("slideshowImage")]
		public string SlideshowImage
		{
			get { return this.GetPropertyValue<string>("slideshowImage"); }
		}

		///<summary>
		/// Image alt text
		///</summary>
		[ImplementPropertyType("slideshowImageAltText")]
		public string SlideshowImageAltText
		{
			get { return this.GetPropertyValue<string>("slideshowImageAltText"); }
		}

		///<summary>
		/// Image caption
		///</summary>
		[ImplementPropertyType("slideshowImageCaption")]
		public string SlideshowImageCaption
		{
			get { return this.GetPropertyValue<string>("slideshowImageCaption"); }
		}
	}

	/// <summary>Slideshow Section</summary>
	[PublishedContentModel("USN_SC_SlideshowSection_AN")]
	public partial class Usn_Sc_SlideshowSection_AN : UsnstandardComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_SlideshowSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_SlideshowSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_SlideshowSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Slideshow Section{i class="icon sprTree icon-folder-outline color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{p}You must add at least one "Slideshow Image" below this folder.{/p}{p}The order of your "Slideshow Images" within this folder directly relates to the order your "Slideshow Images" will be displayed on this page. Use {strong}Actions } Sort{/strong} to reorder your "Accordion/Tab Items".{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Width: This setting only applies if this component is added to the "Homepage" or an "Advanced Page".
		///</summary>
		[ImplementPropertyType("width")]
		public object Width
		{
			get { return this.GetPropertyValue("width"); }
		}
	}

	/// <summary>Standard Page Components Folder</summary>
	[PublishedContentModel("USNStandardPageComponents")]
	public partial class UsnstandardPageComponents : UsnstandardComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNStandardPageComponents";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnstandardPageComponents(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnstandardPageComponents, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Page Components{i class="icon sprTree icon-folder-outline color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}Add components below this folder to organise the layout and content of your page.{/p}{p}The order of your components within this folder directly relates to the order your components will be displayed on this page. Use {strong}Actions } Sort{/strong} to reorder your components.{p}{strong}DO NOT{/strong} delete or rename this folder.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}
	}

	/// <summary>Standard Page Master</summary>
	[PublishedContentModel("USNStandardPageMaster")]
	public partial class UsnstandardPageMaster : UsncontentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNStandardPageMaster";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnstandardPageMaster(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnstandardPageMaster, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Main content
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Display header image section
		///</summary>
		[ImplementPropertyType("displayHeaderImageSection")]
		public object DisplayHeaderImageSection
		{
			get { return this.GetPropertyValue("displayHeaderImageSection"); }
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("headerAnimate")]
		public object HeaderAnimate
		{
			get { return this.GetPropertyValue("headerAnimate"); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.  {br}{br} If the banner contains an image, use the color that works best for the text over the image.
		///</summary>
		[ImplementPropertyType("headerBackgroundColor")]
		public object HeaderBackgroundColor
		{
			get { return this.GetPropertyValue("headerBackgroundColor"); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("headerButtonColor")]
		public object HeaderButtonColor
		{
			get { return this.GetPropertyValue("headerButtonColor"); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("headerHeading")]
		public USN.Heading.Umbraco.Models.USNHeading HeaderHeading
		{
			get { return this.GetPropertyValue<USN.Heading.Umbraco.Models.USNHeading>("headerHeading"); }
		}

		///<summary>
		/// Image: For all Parallax and Takeover banners, your image will be cropped to 1600px by 1600px.  {br}{br} If you choose a 'Medium' banner style without the Parallax effect your image will be cropped to 1600px by 700px. {br}{br} If you choose a 'Short' banner style without the Parallax effect your image will be cropped to 1600px by 500px. {br}{br} Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("headerImage")]
		public string HeaderImage
		{
			get { return this.GetPropertyValue<string>("headerImage"); }
		}

		///<summary>
		/// Image alt text
		///</summary>
		[ImplementPropertyType("headerImageAltText")]
		public string HeaderImageAltText
		{
			get { return this.GetPropertyValue<string>("headerImageAltText"); }
		}

		///<summary>
		/// Link: Use the 'Caption' field to override the default link text. {br}{br} The tab that is open will be used.
		///</summary>
		[ImplementPropertyType("headerLink")]
		public USN.UrlPicker.Umbraco.Models.UrlPicker HeaderLink
		{
			get { return this.GetPropertyValue<USN.UrlPicker.Umbraco.Models.UrlPicker>("headerLink"); }
		}

		///<summary>
		/// Parallax
		///</summary>
		[ImplementPropertyType("headerParallax")]
		public object HeaderParallax
		{
			get { return this.GetPropertyValue("headerParallax"); }
		}

		///<summary>
		/// Scroll prompt
		///</summary>
		[ImplementPropertyType("headerScrollPrompt")]
		public object HeaderScrollPrompt
		{
			get { return this.GetPropertyValue("headerScrollPrompt"); }
		}

		///<summary>
		/// Header style
		///</summary>
		[ImplementPropertyType("headerStyle")]
		public object HeaderStyle
		{
			get { return this.GetPropertyValue("headerStyle"); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("headerText")]
		public IHtmlString HeaderText
		{
			get { return this.GetPropertyValue<IHtmlString>("headerText"); }
		}

		///<summary>
		/// Text alignment
		///</summary>
		[ImplementPropertyType("headerTextAlignment")]
		public object HeaderTextAlignment
		{
			get { return this.GetPropertyValue("headerTextAlignment"); }
		}

		///<summary>
		/// Main image: Image will be cropped to 1140px x 550px.  {br}{br}  Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("mainImage")]
		public string MainImage
		{
			get { return this.GetPropertyValue<string>("mainImage"); }
		}

		///<summary>
		/// Main image alt text
		///</summary>
		[ImplementPropertyType("mainImageAltText")]
		public string MainImageAltText
		{
			get { return this.GetPropertyValue<string>("mainImageAltText"); }
		}

		///<summary>
		/// Main image caption
		///</summary>
		[ImplementPropertyType("mainImageCaption")]
		public string MainImageCaption
		{
			get { return this.GetPropertyValue<string>("mainImageCaption"); }
		}

		///<summary>
		/// Page title: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("onPageTitle")]
		public string OnPageTitle
		{
			get { return this.GetPropertyValue<string>("onPageTitle"); }
		}

		///<summary>
		/// Override default pods: Select "Yes" to override the default pods selected within "Global Settings".
		///</summary>
		[ImplementPropertyType("overrideDefaultPods")]
		public object OverrideDefaultPods
		{
			get { return this.GetPropertyValue("overrideDefaultPods"); }
		}

		///<summary>
		/// Pods: Select the pods you would like to appear on this page. The pods selected will only be displayed if "Yes" is selected above.
		///</summary>
		[ImplementPropertyType("pagePods")]
		public string PagePods
		{
			get { return this.GetPropertyValue<string>("pagePods"); }
		}
	}

	/// <summary>Blog Landing Page</summary>
	[PublishedContentModel("USNBlogLandingPage")]
	public partial class UsnblogLandingPage : UsnstandardPageMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNBlogLandingPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnblogLandingPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnblogLandingPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Blog listing page size: Enter the number of articles you would like to appear per page.
		///</summary>
		[ImplementPropertyType("blogListingPageSize")]
		public string BlogListingPageSize
		{
			get { return this.GetPropertyValue<string>("blogListingPageSize"); }
		}

		///<summary>
		/// Summary text character count: Enter the number of characters of text you would like displayed from the beginning of each blog article. If nothing is entered, no summary text will be displayed.
		///</summary>
		[ImplementPropertyType("blogSummaryTextCharacterCount")]
		public string BlogSummaryTextCharacterCount
		{
			get { return this.GetPropertyValue<string>("blogSummaryTextCharacterCount"); }
		}

		///<summary>
		/// Breadcrumb link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("breadcrumbLinkText")]
		public string BreadcrumbLinkText
		{
			get { return this.GetPropertyValue<string>("breadcrumbLinkText"); }
		}

		///<summary>
		/// Default author: Select the default author that will be applied to all blog posts.
		///</summary>
		[ImplementPropertyType("defaultAuthor")]
		public string DefaultAuthor
		{
			get { return this.GetPropertyValue<string>("defaultAuthor"); }
		}

		///<summary>
		/// Disqus username: If nothing is entered, blog commenting will be disabled.
		///</summary>
		[ImplementPropertyType("disqusUsername")]
		public string DisqusUsername
		{
			get { return this.GetPropertyValue<string>("disqusUsername"); }
		}

		///<summary>
		/// Hide breadcrumb
		///</summary>
		[ImplementPropertyType("hideBreadcrumb")]
		public object HideBreadcrumb
		{
			get { return this.GetPropertyValue("hideBreadcrumb"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Blog Landing Page{i class="icon umb-tree-icon sprTree icon-newspaper pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}This page will list your blog posts. Blog posts are added to this section via the "Posts" folder directly below this page.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Page layout: Default page layout will be displayed if nothing is selected. If 'Content full width' is selected sub navigation will be hidden.
		///</summary>
		[ImplementPropertyType("pageLayout")]
		public object PageLayout
		{
			get { return this.GetPropertyValue("pageLayout"); }
		}

		///<summary>
		/// Sitemap link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("sitemapLinkText")]
		public string SitemapLinkText
		{
			get { return this.GetPropertyValue<string>("sitemapLinkText"); }
		}
	}

	/// <summary>Login Page</summary>
	[PublishedContentModel("USNLoginPage")]
	public partial class UsnloginPage : UsnstandardPageMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNLoginPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnloginPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnloginPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Breadcrumb link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("breadcrumbLinkText")]
		public string BreadcrumbLinkText
		{
			get { return this.GetPropertyValue<string>("breadcrumbLinkText"); }
		}

		///<summary>
		/// Hide breadcrumb
		///</summary>
		[ImplementPropertyType("hideBreadcrumb")]
		public object HideBreadcrumb
		{
			get { return this.GetPropertyValue("hideBreadcrumb"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Login Page{i class="icon umb-tree-icon sprTree icon-arrow-right pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}This page displays a login form for gaining access to password protected areas of your website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Login form button text
		///</summary>
		[ImplementPropertyType("loginFormButtonText")]
		public string LoginFormButtonText
		{
			get { return this.GetPropertyValue<string>("loginFormButtonText"); }
		}

		///<summary>
		/// Login success page: Select the page to go to when login is successful.
		///</summary>
		[ImplementPropertyType("loginSuccessPage")]
		public object LoginSuccessPage
		{
			get { return this.GetPropertyValue("loginSuccessPage"); }
		}

		///<summary>
		/// Page layout: Default page layout will be displayed if nothing is selected. If 'Content full width' is selected sub navigation will be hidden.
		///</summary>
		[ImplementPropertyType("pageLayout")]
		public object PageLayout
		{
			get { return this.GetPropertyValue("pageLayout"); }
		}

		///<summary>
		/// Sitemap link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("sitemapLinkText")]
		public string SitemapLinkText
		{
			get { return this.GetPropertyValue<string>("sitemapLinkText"); }
		}
	}

	/// <summary>Search Results Page</summary>
	[PublishedContentModel("USNSearchResultsPage")]
	public partial class UsnsearchResultsPage : UsnstandardPageMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNSearchResultsPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnsearchResultsPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnsearchResultsPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Breadcrumb link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("breadcrumbLinkText")]
		public string BreadcrumbLinkText
		{
			get { return this.GetPropertyValue<string>("breadcrumbLinkText"); }
		}

		///<summary>
		/// Hide breadcrumb
		///</summary>
		[ImplementPropertyType("hideBreadcrumb")]
		public object HideBreadcrumb
		{
			get { return this.GetPropertyValue("hideBreadcrumb"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Search Results Page{i class="icon umb-tree-icon sprTree icon-search pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}This page displays a listing of your search results.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Page layout: Default page layout will be displayed if nothing is selected. If 'Content full width' is selected sub navigation will be hidden.
		///</summary>
		[ImplementPropertyType("pageLayout")]
		public object PageLayout
		{
			get { return this.GetPropertyValue("pageLayout"); }
		}

		///<summary>
		/// Search results page size: Enter the number of search results you would like to appear per page.
		///</summary>
		[ImplementPropertyType("searchResultsPageSize")]
		public string SearchResultsPageSize
		{
			get { return this.GetPropertyValue<string>("searchResultsPageSize"); }
		}

		///<summary>
		/// Sitemap link text
		///</summary>
		[ImplementPropertyType("sitemapLinkText")]
		public string SitemapLinkText
		{
			get { return this.GetPropertyValue<string>("sitemapLinkText"); }
		}
	}

	/// <summary>Sitemap Page</summary>
	[PublishedContentModel("USNSitemapPage")]
	public partial class UsnsitemapPage : UsnstandardPageMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNSitemapPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnsitemapPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnsitemapPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Breadcrumb link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("breadcrumbLinkText")]
		public string BreadcrumbLinkText
		{
			get { return this.GetPropertyValue<string>("breadcrumbLinkText"); }
		}

		///<summary>
		/// Hide breadcrumb
		///</summary>
		[ImplementPropertyType("hideBreadcrumb")]
		public object HideBreadcrumb
		{
			get { return this.GetPropertyValue("hideBreadcrumb"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Sitemap Page{i class="icon umb-tree-icon sprTree icon-sitemap pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}This page displays your website sitemap.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Page layout: Default page layout will be displayed if nothing is selected. If 'Content full width' is selected sub navigation will be hidden.
		///</summary>
		[ImplementPropertyType("pageLayout")]
		public object PageLayout
		{
			get { return this.GetPropertyValue("pageLayout"); }
		}

		///<summary>
		/// Sitemap link text
		///</summary>
		[ImplementPropertyType("sitemapLinkText")]
		public string SitemapLinkText
		{
			get { return this.GetPropertyValue<string>("sitemapLinkText"); }
		}
	}

	/// <summary>Standard Page</summary>
	[PublishedContentModel("USNStandardPage")]
	public partial class UsnstandardPage : UsnstandardPageMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNStandardPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnstandardPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnstandardPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Breadcrumb link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("breadcrumbLinkText")]
		public string BreadcrumbLinkText
		{
			get { return this.GetPropertyValue<string>("breadcrumbLinkText"); }
		}

		///<summary>
		/// Display subpage listing: Select "Yes" to display a listing of any subpages that sit below this page.
		///</summary>
		[ImplementPropertyType("displaySubpageListing")]
		public object DisplaySubpageListing
		{
			get { return this.GetPropertyValue("displaySubpageListing"); }
		}

		///<summary>
		/// Hide breadcrumb
		///</summary>
		[ImplementPropertyType("hideBreadcrumb")]
		public object HideBreadcrumb
		{
			get { return this.GetPropertyValue("hideBreadcrumb"); }
		}

		///<summary>
		/// Hide sub navigation: Select "Yes" to hide the sub navigation menu from this page.
		///</summary>
		[ImplementPropertyType("hideSubNavigation")]
		public object HideSubNavigation
		{
			get { return this.GetPropertyValue("hideSubNavigation"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Standard Page{i class="icon umb-tree-icon sprTree icon-article pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The majority of your content will be added to this page via the "Content" tab.{p}Additional layout options are available which can be added via  the "Page Components" folder directly below this page.{/p}{p}By adding new components you will be able to add more advanced layout options to this page.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Page layout: Default page layout will be displayed if nothing is selected. If "Content full width" is selected sub navigation will be hidden.
		///</summary>
		[ImplementPropertyType("pageLayout")]
		public object PageLayout
		{
			get { return this.GetPropertyValue("pageLayout"); }
		}

		///<summary>
		/// Listing image: Listing image is only displayed if this page appears on a "Sub Page Listing". {br}{br} Image will be cropped to 400px x 300px. {br}{br} Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("pageListingImage")]
		public string PageListingImage
		{
			get { return this.GetPropertyValue<string>("pageListingImage"); }
		}

		///<summary>
		/// Listing image alt text
		///</summary>
		[ImplementPropertyType("pageListingImageAltText")]
		public string PageListingImageAltText
		{
			get { return this.GetPropertyValue<string>("pageListingImageAltText"); }
		}

		///<summary>
		/// Page summary: Summary text is only displayed if this page appears on a "Subpage Listing". {br}{br} If nothing is entered here the summary will be extracted from the beginning of the "Main content" of this page and the character count will be based on the settings defined on this pages parent page.
		///</summary>
		[ImplementPropertyType("pageSummary")]
		public IHtmlString PageSummary
		{
			get { return this.GetPropertyValue<IHtmlString>("pageSummary"); }
		}

		///<summary>
		/// Summary text character count: Enter the number of characters you would like displayed from the beginning of each page. If summary text has been entered this will be used instead. If nothing is entered, no summary text will be displayed.
		///</summary>
		[ImplementPropertyType("pageSummaryTextCharacterCount")]
		public string PageSummaryTextCharacterCount
		{
			get { return this.GetPropertyValue<string>("pageSummaryTextCharacterCount"); }
		}

		///<summary>
		/// Sitemap link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("sitemapLinkText")]
		public string SitemapLinkText
		{
			get { return this.GetPropertyValue<string>("sitemapLinkText"); }
		}

		///<summary>
		/// Sub navigation link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("subNavigationLinkText")]
		public string SubNavigationLinkText
		{
			get { return this.GetPropertyValue<string>("subNavigationLinkText"); }
		}

		///<summary>
		/// Subpage listing layout: Layout will default to 'Vertical' if nothing is selected.
		///</summary>
		[ImplementPropertyType("subpageListingLayout")]
		public object SubpageListingLayout
		{
			get { return this.GetPropertyValue("subpageListingLayout"); }
		}

		///<summary>
		/// Subpage listing link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("subpageListingLinkText")]
		public string SubpageListingLinkText
		{
			get { return this.GetPropertyValue<string>("subpageListingLinkText"); }
		}
	}

	/// <summary>News item</summary>
	[PublishedContentModel("USNStandardPageBlogPost")]
	public partial class UsnstandardPageBlogPost : UsnstandardPageMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNStandardPageBlogPost";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnstandardPageBlogPost(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnstandardPageBlogPost, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Listing image: Image will be cropped to 132x80 pixels, but better to upload exactly that size in the first place.
		///</summary>
		[ImplementPropertyType("pageListingImage")]
		public string PageListingImage
		{
			get { return this.GetPropertyValue<string>("pageListingImage"); }
		}

		///<summary>
		/// Listing image alt text
		///</summary>
		[ImplementPropertyType("pageListingImageAltText")]
		public string PageListingImageAltText
		{
			get { return this.GetPropertyValue<string>("pageListingImageAltText"); }
		}

		///<summary>
		/// Post summary: If nothing is entered here the summary will be extracted from the beginning of the "Main Content" of your post and the character count will be based on the settings defined on your "Blog Landing Page".
		///</summary>
		[ImplementPropertyType("pageSummary")]
		public IHtmlString PageSummary
		{
			get { return this.GetPropertyValue<IHtmlString>("pageSummary"); }
		}

		///<summary>
		/// Post date
		///</summary>
		[ImplementPropertyType("postDate")]
		public DateTime PostDate
		{
			get { return this.GetPropertyValue<DateTime>("postDate"); }
		}
	}

	/// <summary>Text Section</summary>
	[PublishedContentModel("USN_SC_TextSection_AN")]
	public partial class Usn_Sc_TextSection_AN : UsnstandardComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_TextSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_TextSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_TextSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Text Section{i class="icon sprTree icon-notepad-alt color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{p}Use this item to add text between other components you have added to the page.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("textSection")]
		public IHtmlString TextSection
		{
			get { return this.GetPropertyValue<IHtmlString>("textSection"); }
		}

		///<summary>
		/// Width: This setting only applies if this component is added to the "Homepage" or an "Advanced Page".
		///</summary>
		[ImplementPropertyType("width")]
		public object Width
		{
			get { return this.GetPropertyValue("width"); }
		}
	}

	/// <summary>Text/Signup Section</summary>
	[PublishedContentModel("USN_AC_TextSignupSection_AN")]
	public partial class Usn_Ac_TextSignupSection_AN : UsnadvancedComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_TextSignupSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_TextSignupSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_TextSignupSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("animate")]
		public object Animate
		{
			get { return this.GetPropertyValue("animate"); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public object BackgroundColor
		{
			get { return this.GetPropertyValue("backgroundColor"); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("buttonColor")]
		public object ButtonColor
		{
			get { return this.GetPropertyValue("buttonColor"); }
		}

		///<summary>
		/// Campaign Monitor Subscriber List ID: Newsletter Signup will only be available if a Subscriber List ID is available.  {br}{br}  Use this field to override the default Subscriber List ID in "Global Settings" if present.
		///</summary>
		[ImplementPropertyType("campaignMonitorSubscriberListID")]
		public string CampaignMonitorSubscriberListID
		{
			get { return this.GetPropertyValue<string>("campaignMonitorSubscriberListID"); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("heading")]
		public USN.Heading.Umbraco.Models.USNHeading Heading
		{
			get { return this.GetPropertyValue<USN.Heading.Umbraco.Models.USNHeading>("heading"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Text/Signup Section{i class="icon sprTree icon-article color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Link: Use the 'Caption' field to override the default link text. {br}{br} The tab that is open will be used.
		///</summary>
		[ImplementPropertyType("link")]
		public USN.UrlPicker.Umbraco.Models.UrlPicker Link
		{
			get { return this.GetPropertyValue<USN.UrlPicker.Umbraco.Models.UrlPicker>("link"); }
		}

		///<summary>
		/// Button text
		///</summary>
		[ImplementPropertyType("NewsletterbuttonText")]
		public string NewsletterbuttonText
		{
			get { return this.GetPropertyValue<string>("NewsletterbuttonText"); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("newsletterHeading")]
		public USN.Heading.Umbraco.Models.USNHeading NewsletterHeading
		{
			get { return this.GetPropertyValue<USN.Heading.Umbraco.Models.USNHeading>("newsletterHeading"); }
		}

		///<summary>
		/// Introduction
		///</summary>
		[ImplementPropertyType("newsletterIntroduction")]
		public IHtmlString NewsletterIntroduction
		{
			get { return this.GetPropertyValue<IHtmlString>("newsletterIntroduction"); }
		}

		///<summary>
		/// Submission message
		///</summary>
		[ImplementPropertyType("submissionMessage")]
		public IHtmlString SubmissionMessage
		{
			get { return this.GetPropertyValue<IHtmlString>("submissionMessage"); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("text")]
		public IHtmlString Text
		{
			get { return this.GetPropertyValue<IHtmlString>("text"); }
		}

		///<summary>
		/// Text section position: Display text section to the left or right of the newsletter signup form.
		///</summary>
		[ImplementPropertyType("textSectionPosition")]
		public object TextSectionPosition
		{
			get { return this.GetPropertyValue("textSectionPosition"); }
		}
	}

	/// <summary>Text/Video or Image Section</summary>
	[PublishedContentModel("USN_AC_TextVideoOrImageSection_AN")]
	public partial class Usn_Ac_TextVideoOrImageSection_AN : UsnadvancedComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_TextVideoOrImageSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_TextVideoOrImageSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_TextVideoOrImageSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add spacing around image
		///</summary>
		[ImplementPropertyType("addSpacingAroundImage")]
		public object AddSpacingAroundImage
		{
			get { return this.GetPropertyValue("addSpacingAroundImage"); }
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("animate")]
		public object Animate
		{
			get { return this.GetPropertyValue("animate"); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public object BackgroundColor
		{
			get { return this.GetPropertyValue("backgroundColor"); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("buttonColor")]
		public object ButtonColor
		{
			get { return this.GetPropertyValue("buttonColor"); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("heading")]
		public USN.Heading.Umbraco.Models.USNHeading Heading
		{
			get { return this.GetPropertyValue<USN.Heading.Umbraco.Models.USNHeading>("heading"); }
		}

		///<summary>
		/// Image: This image is optional. If you do not upload an image and a video URL has been added, a thumbnail image will be automatically generated for you from the associated video. {br}{br} Image will be cropped to 800px x 600px. {br}{br} Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("image")]
		public string Image
		{
			get { return this.GetPropertyValue<string>("image"); }
		}

		///<summary>
		/// Image alt text
		///</summary>
		[ImplementPropertyType("imageAltText")]
		public string ImageAltText
		{
			get { return this.GetPropertyValue<string>("imageAltText"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Text/Video or Image Section{i class="icon sprTree icon-article color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Light window text: This text will be displayed along with your video within the light window.
		///</summary>
		[ImplementPropertyType("lightWindowText")]
		public string LightWindowText
		{
			get { return this.GetPropertyValue<string>("lightWindowText"); }
		}

		///<summary>
		/// Link: Use the 'Caption' field to override the default link text. {br}{br} The tab that is open will be used.
		///</summary>
		[ImplementPropertyType("link")]
		public USN.UrlPicker.Umbraco.Models.UrlPicker Link
		{
			get { return this.GetPropertyValue<USN.UrlPicker.Umbraco.Models.UrlPicker>("link"); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("text")]
		public IHtmlString Text
		{
			get { return this.GetPropertyValue<IHtmlString>("text"); }
		}

		///<summary>
		/// Text section position: Display text section to the left or right of the video or image.
		///</summary>
		[ImplementPropertyType("textSectionPosition")]
		public object TextSectionPosition
		{
			get { return this.GetPropertyValue("textSectionPosition"); }
		}

		///<summary>
		/// Video: Copy the full URL for your video from the address bar or share link provided. (YouTube or Vimeo only)
		///</summary>
		[ImplementPropertyType("video")]
		public string Video
		{
			get { return this.GetPropertyValue<string>("video"); }
		}
	}

	/// <summary>Video Pod</summary>
	[PublishedContentModel("USN_SWP_VideoPod")]
	public partial class Usn_Swp_VideoPod : UsnsitewidePodsMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SWP_VideoPod";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Swp_VideoPod(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Swp_VideoPod, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Video Pod{i class="icon sprTree icon-video color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Light window footer: This text will be displayed below your video within the light window.
		///</summary>
		[ImplementPropertyType("lightWindowFooter")]
		public string LightWindowFooter
		{
			get { return this.GetPropertyValue<string>("lightWindowFooter"); }
		}

		///<summary>
		/// Light window title: This text will be displayed above your video within the light window.
		///</summary>
		[ImplementPropertyType("lightWindowTitle")]
		public string LightWindowTitle
		{
			get { return this.GetPropertyValue<string>("lightWindowTitle"); }
		}

		///<summary>
		/// Thumbnail image: This image is optional. If you do not upload an image, a thumbnail image will be automatically generated for you from the associated video. {br}{br} Image will be cropped to 400px x 300px. {br}{br} Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("podThumbnailImage")]
		public string PodThumbnailImage
		{
			get { return this.GetPropertyValue<string>("podThumbnailImage"); }
		}

		///<summary>
		/// Video: Copy the full URL for your video from the address bar or share link provided. (YouTube or Vimeo only)
		///</summary>
		[ImplementPropertyType("podVideo")]
		public string PodVideo
		{
			get { return this.GetPropertyValue<string>("podVideo"); }
		}

		///<summary>
		/// Thumbnail image alt text
		///</summary>
		[ImplementPropertyType("thumbnailImageAltText")]
		public string ThumbnailImageAltText
		{
			get { return this.GetPropertyValue<string>("thumbnailImageAltText"); }
		}
	}

	/// <summary>Website Configuration Section</summary>
	[PublishedContentModel("USNWebsiteConfigurationSection")]
	public partial class UsnwebsiteConfigurationSection : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNWebsiteConfigurationSection";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnwebsiteConfigurationSection(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnwebsiteConfigurationSection, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public object DisableDelete
		{
			get { return this.GetPropertyValue("disableDelete"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Website Configuration{i class="icon sprTree icon-settings color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}Items below this node manage your website configuration settings.{/p} {p}{strong}DO NOT{/strong} delete or rename this item.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}
	}

	/// <summary>New home page</summary>
	[PublishedContentModel("newHomePage")]
	public partial class NewHomePage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "newHomePage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public NewHomePage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<NewHomePage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Last month: Choose the previous month in the News section. (This is necessary for when there are fewer than six items in the current month, and so it has to show the previous month's articles to make up the six.)
		///</summary>
		[ImplementPropertyType("lastMonth")]
		public RJP.MultiUrlPicker.Models.MultiUrls LastMonth
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.MultiUrls>("lastMonth"); }
		}

		///<summary>
		/// Last Month ID
		///</summary>
		[ImplementPropertyType("lastMonthID")]
		public int LastMonthID
		{
			get { return this.GetPropertyValue<int>("lastMonthID"); }
		}

		///<summary>
		/// opelStatus: Hover over the image below and click on the 'x'. Then click on the '+' and choose the appropriate image.
		///</summary>
		[ImplementPropertyType("opelStatusImage")]
		public string OpelStatusImage
		{
			get { return this.GetPropertyValue<string>("opelStatusImage"); }
		}

		///<summary>
		/// Start node ID
		///</summary>
		[ImplementPropertyType("startNodeID")]
		public int StartNodeID
		{
			get { return this.GetPropertyValue<int>("startNodeID"); }
		}

		///<summary>
		/// This month: Choose the current month in the News section.
		///</summary>
		[ImplementPropertyType("thisMonth")]
		public RJP.MultiUrlPicker.Models.MultiUrls ThisMonth
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.MultiUrls>("thisMonth"); }
		}

		///<summary>
		/// This Month ID
		///</summary>
		[ImplementPropertyType("thisMonthID")]
		public int ThisMonthID
		{
			get { return this.GetPropertyValue<int>("thisMonthID"); }
		}

		///<summary>
		/// Top story folder
		///</summary>
		[ImplementPropertyType("topStoryFolder")]
		public int TopStoryFolder
		{
			get { return this.GetPropertyValue<int>("topStoryFolder"); }
		}
	}

	/// <summary>Department home page</summary>
	[PublishedContentModel("departmentHomePage")]
	public partial class DepartmentHomePage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "departmentHomePage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public DepartmentHomePage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<DepartmentHomePage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Additional information
		///</summary>
		[ImplementPropertyType("additionalInformation")]
		public IHtmlString AdditionalInformation
		{
			get { return this.GetPropertyValue<IHtmlString>("additionalInformation"); }
		}

		///<summary>
		/// Add a 'See also' section: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return this.GetPropertyValue<bool>("addSeeAlsoSection"); }
		}

		///<summary>
		/// What we do: A VERY BRIEF description of the services this department provides.
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Hide this section: Tick here to hide the whole Additional information section.
		///</summary>
		[ImplementPropertyType("hideAdditionalInformation")]
		public bool HideAdditionalInformation
		{
			get { return this.GetPropertyValue<bool>("hideAdditionalInformation"); }
		}

		///<summary>
		/// How to access our services
		///</summary>
		[ImplementPropertyType("howToAccessOurServices")]
		public IHtmlString HowToAccessOurServices
		{
			get { return this.GetPropertyValue<IHtmlString>("howToAccessOurServices"); }
		}

		///<summary>
		/// Location details
		///</summary>
		[ImplementPropertyType("locationDetails")]
		public IHtmlString LocationDetails
		{
			get { return this.GetPropertyValue<IHtmlString>("locationDetails"); }
		}

		///<summary>
		/// Location map
		///</summary>
		[ImplementPropertyType("locationMap")]
		public string LocationMap
		{
			get { return this.GetPropertyValue<string>("locationMap"); }
		}

		///<summary>
		/// Page owner: The person ultimately responsible for the content on this page.
		///</summary>
		[ImplementPropertyType("pageOwner")]
		public string PageOwner
		{
			get { return this.GetPropertyValue<string>("pageOwner"); }
		}

		///<summary>
		/// Page owner's position
		///</summary>
		[ImplementPropertyType("pageOwnersPosition")]
		public string PageOwnersPosition
		{
			get { return this.GetPropertyValue<string>("pageOwnersPosition"); }
		}

		///<summary>
		/// Page title: This is what shows as the heading in the actual page.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// See also
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.MultiUrls>("seeAlso"); }
		}

		///<summary>
		/// Show location details?: Tick here to add a Location section
		///</summary>
		[ImplementPropertyType("showLocationDetails")]
		public bool ShowLocationDetails
		{
			get { return this.GetPropertyValue<bool>("showLocationDetails"); }
		}

		///<summary>
		/// Show location map?: Tick here to show a location map
		///</summary>
		[ImplementPropertyType("showLocationMap")]
		public bool ShowLocationMap
		{
			get { return this.GetPropertyValue<bool>("showLocationMap"); }
		}

		///<summary>
		/// Sub-editor: Sub-editor's email address.
		///</summary>
		[ImplementPropertyType("subEditor")]
		public string SubEditor
		{
			get { return this.GetPropertyValue<string>("subEditor"); }
		}
	}

	/// <summary>Departments index</summary>
	[PublishedContentModel("departmentsIndex")]
	public partial class DepartmentsIndex : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "departmentsIndex";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public DepartmentsIndex(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<DepartmentsIndex, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Departments letter</summary>
	[PublishedContentModel("departmentsLetter")]
	public partial class DepartmentsLetter : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "departmentsLetter";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public DepartmentsLetter(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<DepartmentsLetter, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Page Title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}
	}

	/// <summary>OPEL Status</summary>
	[PublishedContentModel("oPELStatus")]
	public partial class OPelstatus : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "oPELStatus";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public OPelstatus(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<OPelstatus, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// opelStatusImage2
		///</summary>
		[ImplementPropertyType("opelStatusImage2")]
		public string OpelStatusImage2
		{
			get { return this.GetPropertyValue<string>("opelStatusImage2"); }
		}
	}

	/// <summary>Department child page</summary>
	[PublishedContentModel("departmentChildPage")]
	public partial class DepartmentChildPage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "departmentChildPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public DepartmentChildPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<DepartmentChildPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add a 'See also' section: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return this.GetPropertyValue<bool>("addSeeAlsoSection"); }
		}

		///<summary>
		/// Department child page content: Add the main content for the page here.
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Change to landing page: Tick this box If there is no proper content to display - i.e. the page's only function is to provide links to its children. The children will then be shown automatically in a grid display.
		///</summary>
		[ImplementPropertyType("changeToLandingPage")]
		public bool ChangeToLandingPage
		{
			get { return this.GetPropertyValue<bool>("changeToLandingPage"); }
		}

		///<summary>
		/// Limit navigation: Tick this box to restrict the left-hand navigation. This was set up for the Cancer Services section, because it wasn't necessary to have navigation to sibling pages once the user had chosen their path from 'Tumour site-specific information'. It can be used for other departments, but check that it works as intended on lower level pages!
		///</summary>
		[ImplementPropertyType("limitNavigation")]
		public bool LimitNavigation
		{
			get { return this.GetPropertyValue<bool>("limitNavigation"); }
		}

		///<summary>
		/// Page title: This is what shows as the heading in the actual page. It must be unique, and must be descriptive enough so that users will understand its function, even if they arrive here via a search.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// See also: Add links here to appear in a 'See also' section at the bottom of the page.
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.MultiUrls>("seeAlso"); }
		}
	}

	/// <summary>A to Z page</summary>
	[PublishedContentModel("atozA")]
	public partial class AtozA : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "atozA";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public AtozA(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<AtozA, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// atozHTMLletters: W A R N I N G ! This is hard-coded HTML. Do not amend unless you know what you're doing!
		///</summary>
		[ImplementPropertyType("atozHTMLletters")]
		public string AtozHtmlletters
		{
			get { return this.GetPropertyValue<string>("atozHTMLletters"); }
		}

		///<summary>
		/// Number of columns
		///</summary>
		[ImplementPropertyType("numberOfColumns")]
		public object NumberOfColumns
		{
			get { return this.GetPropertyValue("numberOfColumns"); }
		}
	}

	/// <summary>Trust alert list</summary>
	[PublishedContentModel("trustAlertList")]
	public partial class TrustAlertList : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "trustAlertList";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public TrustAlertList(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<TrustAlertList, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Page title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}
	}

	/// <summary>Trust alert item</summary>
	[PublishedContentModel("trustAlertItem")]
	public partial class TrustAlertItem : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "trustAlertItem";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public TrustAlertItem(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<TrustAlertItem, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Date of issue: Choose the date shown on the alert.
		///</summary>
		[ImplementPropertyType("alertItemDate")]
		public DateTime AlertItemDate
		{
			get { return this.GetPropertyValue<DateTime>("alertItemDate"); }
		}

		///<summary>
		/// Alert item image: Choose an image depending on the type of alert.
		///</summary>
		[ImplementPropertyType("alertItemImage")]
		public string AlertItemImage
		{
			get { return this.GetPropertyValue<string>("alertItemImage"); }
		}

		///<summary>
		/// Alert item link: Choose which alert file to link to.
		///</summary>
		[ImplementPropertyType("alertItemLink")]
		public string AlertItemLink
		{
			get { return this.GetPropertyValue<string>("alertItemLink"); }
		}

		///<summary>
		/// Alert item title: Type of the name of the alert (as it appears in the document).
		///</summary>
		[ImplementPropertyType("alertItemTitle")]
		public string AlertItemTitle
		{
			get { return this.GetPropertyValue<string>("alertItemTitle"); }
		}
	}

	/// <summary>Test page</summary>
	[PublishedContentModel("testPage")]
	public partial class TestPage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "testPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public TestPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<TestPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Page title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// Page using picker
		///</summary>
		[ImplementPropertyType("pageUsingPicker")]
		public RJP.MultiUrlPicker.Models.MultiUrls PageUsingPicker
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.MultiUrls>("pageUsingPicker"); }
		}
	}

	/// <summary>News listing</summary>
	[PublishedContentModel("newsListing")]
	public partial class NewsListing : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "newsListing";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public NewsListing(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<NewsListing, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Content folder</summary>
	[PublishedContentModel("contentFolder")]
	public partial class ContentFolder : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "contentFolder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ContentFolder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ContentFolder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Useful links list</summary>
	[PublishedContentModel("usefulLinksList")]
	public partial class UsefulLinksList : PublishedContentModel, ISeeAlsoSection
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "usefulLinksList";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsefulLinksList(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsefulLinksList, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add an Introduction: Tick this box and add content below if you need the page to have an introduction.
		///</summary>
		[ImplementPropertyType("addUsefulLinksIntroduction")]
		public bool AddUsefulLinksIntroduction
		{
			get { return this.GetPropertyValue<bool>("addUsefulLinksIntroduction"); }
		}

		///<summary>
		/// Introduction: Enter your introductory text here. IMPORTANT: this will be visible only if the box above is ticked.
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Limit navigation: Tick this box to restrict the left-hand navigation. This was set up for the Cancer Services section, because it wasn't necessary to have navigation to sibling pages once the user had chosen their path from 'Tumour site-specific information'. It can be used for other departments, but check that it works as intended on lower level pages!
		///</summary>
		[ImplementPropertyType("limitNavigation")]
		public bool LimitNavigation
		{
			get { return this.GetPropertyValue<bool>("limitNavigation"); }
		}

		///<summary>
		/// Page title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// Add a see also section?: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return SeeAlsoSection.GetAddSeeAlsoSection(this); }
		}

		///<summary>
		/// Add the links here: Add links here to appear in a 'See also' section at the bottom of the page. IMPORTANT: these only show if you've ticked the box above.
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return SeeAlsoSection.GetSeeAlso(this); }
		}
	}

	/// <summary>Essential support services index</summary>
	[PublishedContentModel("essentialSupportServicesIndex")]
	public partial class EssentialSupportServicesIndex : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "essentialSupportServicesIndex";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public EssentialSupportServicesIndex(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<EssentialSupportServicesIndex, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Page title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}
	}

	/// <summary>Careers home page</summary>
	[PublishedContentModel("careersHomePage")]
	public partial class CareersHomePage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "careersHomePage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public CareersHomePage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<CareersHomePage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Page owner: The person ultimately responsible for the content on this page.
		///</summary>
		[ImplementPropertyType("pageOwner")]
		public string PageOwner
		{
			get { return this.GetPropertyValue<string>("pageOwner"); }
		}

		///<summary>
		/// Page owner's position
		///</summary>
		[ImplementPropertyType("pageOwnersPosition")]
		public string PageOwnersPosition
		{
			get { return this.GetPropertyValue<string>("pageOwnersPosition"); }
		}

		///<summary>
		/// Page title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// Sub-editor: Sub-editor's email address.
		///</summary>
		[ImplementPropertyType("subEditor")]
		public string SubEditor
		{
			get { return this.GetPropertyValue<string>("subEditor"); }
		}
	}

	/// <summary>Find a colleague</summary>
	[PublishedContentModel("findAColleague")]
	public partial class FindAcolleague : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "findAColleague";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public FindAcolleague(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<FindAcolleague, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Clinical resources</summary>
	[PublishedContentModel("clinicalResources")]
	public partial class ClinicalResources : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "clinicalResources";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ClinicalResources(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ClinicalResources, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>StaffRoom home page</summary>
	[PublishedContentModel("staffRoomHomePage")]
	public partial class StaffRoomHomePage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "staffRoomHomePage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public StaffRoomHomePage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<StaffRoomHomePage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Trust-wide documents</summary>
	[PublishedContentModel("trustWideDocuments")]
	public partial class TrustWideDocuments : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "trustWideDocuments";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public TrustWideDocuments(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<TrustWideDocuments, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Incidents, risks, emergencies</summary>
	[PublishedContentModel("incidentsRisksEmergencies")]
	public partial class IncidentsRisksEmergencies : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "incidentsRisksEmergencies";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public IncidentsRisksEmergencies(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<IncidentsRisksEmergencies, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Five Hundred Lives page</summary>
	[PublishedContentModel("fiveHundredLivesPage")]
	public partial class FiveHundredLivesPage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "fiveHundredLivesPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public FiveHundredLivesPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<FiveHundredLivesPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add a 'See also' section: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return this.GetPropertyValue<bool>("addSeeAlsoSection"); }
		}

		///<summary>
		/// Content
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Page title: This is what shows as the heading for the page.
		///</summary>
		[ImplementPropertyType("fiveHundredLivesPageTitle")]
		public string FiveHundredLivesPageTitle
		{
			get { return this.GetPropertyValue<string>("fiveHundredLivesPageTitle"); }
		}

		///<summary>
		/// Page title: This is what shows as the heading for the page.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// See also links: Add links here to appear in a 'See also' section at the bottom of the page.
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.MultiUrls>("seeAlso"); }
		}
	}

	/// <summary>Five Hundred Lives home page</summary>
	[PublishedContentModel("fiveHundredLivesHomePage")]
	public partial class FiveHundredLivesHomePage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "fiveHundredLivesHomePage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public FiveHundredLivesHomePage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<FiveHundredLivesHomePage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Page owner
		///</summary>
		[ImplementPropertyType("pageOwner")]
		public string PageOwner
		{
			get { return this.GetPropertyValue<string>("pageOwner"); }
		}

		///<summary>
		/// Page owner's position
		///</summary>
		[ImplementPropertyType("pageOwnersPosition")]
		public string PageOwnersPosition
		{
			get { return this.GetPropertyValue<string>("pageOwnersPosition"); }
		}

		///<summary>
		/// Sub-editor
		///</summary>
		[ImplementPropertyType("subEditor")]
		public string SubEditor
		{
			get { return this.GetPropertyValue<string>("subEditor"); }
		}
	}

	/// <summary>FAQ item</summary>
	[PublishedContentModel("fAQItem")]
	public partial class FAqitem : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "fAQItem";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public FAqitem(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<FAqitem, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// FAQ answer
		///</summary>
		[ImplementPropertyType("fAQAnswer")]
		public IHtmlString FAqanswer
		{
			get { return this.GetPropertyValue<IHtmlString>("fAQAnswer"); }
		}

		///<summary>
		/// FAQ question
		///</summary>
		[ImplementPropertyType("fAQQuestion")]
		public string FAqquestion
		{
			get { return this.GetPropertyValue<string>("fAQQuestion"); }
		}
	}

	/// <summary>Team contact page</summary>
	[PublishedContentModel("teamContactPage")]
	public partial class TeamContactPage : PublishedContentModel, ISeeAlsoSection
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "teamContactPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public TeamContactPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<TeamContactPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Limit navigation: Tick this box to restrict the left-hand navigation. This was set up for the Cancer Services section, because it wasn't necessary to have navigation to sibling pages once the user had chosen their path from 'Tumour site-specific information'. It can be used for other departments, but check that it works as intended on lower level pages!
		///</summary>
		[ImplementPropertyType("limitNavigation")]
		public bool LimitNavigation
		{
			get { return this.GetPropertyValue<bool>("limitNavigation"); }
		}

		///<summary>
		/// Page title: IMPORTANT! This must be a unique name.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// Add a see also section?: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return SeeAlsoSection.GetAddSeeAlsoSection(this); }
		}

		///<summary>
		/// Add the links here: Add links here to appear in a 'See also' section at the bottom of the page. IMPORTANT: these only show if you've ticked the box above.
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return SeeAlsoSection.GetSeeAlso(this); }
		}
	}

	/// <summary>Team member</summary>
	[PublishedContentModel("teamMember")]
	public partial class TeamMember : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "teamMember";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public TeamMember(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<TeamMember, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Team member details link
		///</summary>
		[ImplementPropertyType("teamMemberDetailsLink")]
		public string TeamMemberDetailsLink
		{
			get { return this.GetPropertyValue<string>("teamMemberDetailsLink"); }
		}

		///<summary>
		/// Team member job title or description: Add the job title for individuals, or a description for team/generic contacts
		///</summary>
		[ImplementPropertyType("teamMemberJobTitle")]
		public string TeamMemberJobTitle
		{
			get { return this.GetPropertyValue<string>("teamMemberJobTitle"); }
		}

		///<summary>
		/// Team member name
		///</summary>
		[ImplementPropertyType("teamMemberName")]
		public string TeamMemberName
		{
			get { return this.GetPropertyValue<string>("teamMemberName"); }
		}

		///<summary>
		/// Team member photo
		///</summary>
		[ImplementPropertyType("teamMemberPhoto")]
		public string TeamMemberPhoto
		{
			get { return this.GetPropertyValue<string>("teamMemberPhoto"); }
		}
	}

	/// <summary>Useful link</summary>
	[PublishedContentModel("usefulLink")]
	public partial class UsefulLink : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "usefulLink";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsefulLink(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsefulLink, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Optional description
		///</summary>
		[ImplementPropertyType("linkDescription")]
		public string LinkDescription
		{
			get { return this.GetPropertyValue<string>("linkDescription"); }
		}

		///<summary>
		/// Link text: Type here the words that you want to be shown on the button
		///</summary>
		[ImplementPropertyType("linkText")]
		public string LinkText
		{
			get { return this.GetPropertyValue<string>("linkText"); }
		}

		///<summary>
		/// Link URL: The URL (website address) of the external link.
		///</summary>
		[ImplementPropertyType("linkURL")]
		public string LinkUrl
		{
			get { return this.GetPropertyValue<string>("linkURL"); }
		}
	}

	/// <summary>Documents listing page</summary>
	[PublishedContentModel("documentsListingPage")]
	public partial class DocumentsListingPage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "documentsListingPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public DocumentsListingPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<DocumentsListingPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add an introduction: Tick this box and add content below if you need the page to have an introduction.
		///</summary>
		[ImplementPropertyType("addDocumentsIntroduction")]
		public bool AddDocumentsIntroduction
		{
			get { return this.GetPropertyValue<bool>("addDocumentsIntroduction"); }
		}

		///<summary>
		/// Add a 'See also' section: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return this.GetPropertyValue<bool>("addSeeAlsoSection"); }
		}

		///<summary>
		/// Introduction: Enter your introductory text here. IMPORTANT: this will be visible only if the box above is ticked.
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Limit navigation: Tick this box to restrict the left-hand navigation. This was set up for the Cancer Services section, because it wasn't necessary to have navigation to sibling pages once the user had chosen their path from 'Tumour site-specific information'. It can be used for other departments, but check that it works as intended on lower level pages!
		///</summary>
		[ImplementPropertyType("limitNavigation")]
		public bool LimitNavigation
		{
			get { return this.GetPropertyValue<bool>("limitNavigation"); }
		}

		///<summary>
		/// Page title: This is what shows as the heading in the actual page.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// See also: Add links here to appear in a 'See also' section at the bottom of the page.
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.MultiUrls>("seeAlso"); }
		}
	}

	/// <summary>Document item</summary>
	[PublishedContentModel("documentItem")]
	public partial class DocumentItem : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "documentItem";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public DocumentItem(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<DocumentItem, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Choose document
		///</summary>
		[ImplementPropertyType("documentAddress")]
		public string DocumentAddress
		{
			get { return this.GetPropertyValue<string>("documentAddress"); }
		}

		///<summary>
		/// Document description: (Optional) description of the document
		///</summary>
		[ImplementPropertyType("documentDescription")]
		public string DocumentDescription
		{
			get { return this.GetPropertyValue<string>("documentDescription"); }
		}

		///<summary>
		/// Document name: This is what is shown on the button/link
		///</summary>
		[ImplementPropertyType("documentName")]
		public string DocumentName
		{
			get { return this.GetPropertyValue<string>("documentName"); }
		}
	}

	/// <summary>Department FAQ page</summary>
	[PublishedContentModel("departmentFAQPage")]
	public partial class DepartmentFaqpage : PublishedContentModel, ISeeAlsoSection
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "departmentFAQPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public DepartmentFaqpage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<DepartmentFaqpage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add an introduction: Tick this box and add content below if you need the page to have an introduction.
		///</summary>
		[ImplementPropertyType("addFAQIntroduction")]
		public bool AddFaqintroduction
		{
			get { return this.GetPropertyValue<bool>("addFAQIntroduction"); }
		}

		///<summary>
		/// FAQ introduction: Enter your introductory text here. IMPORTANT: this will be visible only if the box above is ticked.
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Limit navigation: Tick this box to restrict the left-hand navigation. This was set up for the Cancer Services section, because it wasn't necessary to have navigation to sibling pages once the user had chosen their path from 'Tumour site-specific information'. It can be used for other departments, but check that it works as intended on lower level pages!
		///</summary>
		[ImplementPropertyType("limitNavigation")]
		public bool LimitNavigation
		{
			get { return this.GetPropertyValue<bool>("limitNavigation"); }
		}

		///<summary>
		/// Page title: This is what shows as the heading in the actual page.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// Add a see also section?: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return SeeAlsoSection.GetAddSeeAlsoSection(this); }
		}

		///<summary>
		/// Add the links here: Add links here to appear in a 'See also' section at the bottom of the page. IMPORTANT: these only show if you've ticked the box above.
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return SeeAlsoSection.GetSeeAlso(this); }
		}
	}

	/// <summary>Five Hundred Lives useful links</summary>
	[PublishedContentModel("fiveHundredLivesUsefulLinks")]
	public partial class FiveHundredLivesUsefulLinks : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "fiveHundredLivesUsefulLinks";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public FiveHundredLivesUsefulLinks(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<FiveHundredLivesUsefulLinks, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add a 'See also' section: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return this.GetPropertyValue<bool>("addSeeAlsoSection"); }
		}

		///<summary>
		/// Add an introduction: Tick this box and add content below if you need the page to have an introduction.
		///</summary>
		[ImplementPropertyType("addUsefulLinksIntroduction")]
		public bool AddUsefulLinksIntroduction
		{
			get { return this.GetPropertyValue<bool>("addUsefulLinksIntroduction"); }
		}

		///<summary>
		/// Introduction: Enter your introductory text here. IMPORTANT: this will be visible only if the box above is ticked.
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Page title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// See also: Add links here to appear in a 'See also' section at the bottom of the page.
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.MultiUrls>("seeAlso"); }
		}
	}

	/// <summary>Five Hundred Lives document listing</summary>
	[PublishedContentModel("fiveHundredLivesDocumentListing")]
	public partial class FiveHundredLivesDocumentListing : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "fiveHundredLivesDocumentListing";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public FiveHundredLivesDocumentListing(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<FiveHundredLivesDocumentListing, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add an introduction: Tick this box and add content below if you need the page to have an introduction.
		///</summary>
		[ImplementPropertyType("addDocumentsIntroduction")]
		public bool AddDocumentsIntroduction
		{
			get { return this.GetPropertyValue<bool>("addDocumentsIntroduction"); }
		}

		///<summary>
		/// Add a 'See also' section: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return this.GetPropertyValue<bool>("addSeeAlsoSection"); }
		}

		///<summary>
		/// Introduction: Enter your introductory text here. IMPORTANT: this will be visible only if the box above is ticked.
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Page title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// See also: Add links here to appear in a 'See also' section at the bottom of the page.
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.MultiUrls>("seeAlso"); }
		}
	}

	/// <summary>Five Hundred Lives contents grid page</summary>
	[PublishedContentModel("fiveHundredLivesContentsGridPage")]
	public partial class FiveHundredLivesContentsGridPage : PublishedContentModel, ISeeAlsoSection
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "fiveHundredLivesContentsGridPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public FiveHundredLivesContentsGridPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<FiveHundredLivesContentsGridPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Page title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// Add a see also section?: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return SeeAlsoSection.GetAddSeeAlsoSection(this); }
		}

		///<summary>
		/// Add the links here: Add links here to appear in a 'See also' section at the bottom of the page. IMPORTANT: these only show if you've ticked the box above.
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return SeeAlsoSection.GetSeeAlso(this); }
		}
	}

	/// <summary>Five hundred lives contact page</summary>
	[PublishedContentModel("fiveHundredLivesContactPage")]
	public partial class FiveHundredLivesContactPage : PublishedContentModel, ISeeAlsoSection
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "fiveHundredLivesContactPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public FiveHundredLivesContactPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<FiveHundredLivesContactPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Page title: IMPORTANT! This must be a unique name.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// Add a see also section?: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return SeeAlsoSection.GetAddSeeAlsoSection(this); }
		}

		///<summary>
		/// Add the links here: Add links here to appear in a 'See also' section at the bottom of the page. IMPORTANT: these only show if you've ticked the box above.
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return SeeAlsoSection.GetSeeAlso(this); }
		}
	}

	/// <summary>Search results</summary>
	[PublishedContentModel("searchResults")]
	public partial class SearchResults : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "searchResults";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public SearchResults(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<SearchResults, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Search results per page
		///</summary>
		[ImplementPropertyType("searchResultsPageSize")]
		public int SearchResultsPageSize
		{
			get { return this.GetPropertyValue<int>("searchResultsPageSize"); }
		}
	}

	/// <summary>Standard Page Blog Post (copy)</summary>
	[PublishedContentModel("USNStandardPageBlogPost1")]
	public partial class UsnstandardPageBlogPost1 : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNStandardPageBlogPost1";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnstandardPageBlogPost1(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnstandardPageBlogPost1, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Breadcrumb link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("breadcrumbLinkText")]
		public string BreadcrumbLinkText
		{
			get { return this.GetPropertyValue<string>("breadcrumbLinkText"); }
		}

		///<summary>
		/// Disable comments: Tick this box to disable commenting for this post. This is only relevant if you have entered a "Disqus username" on your "Blog Landing Page".
		///</summary>
		[ImplementPropertyType("disableComments")]
		public bool DisableComments
		{
			get { return this.GetPropertyValue<bool>("disableComments"); }
		}

		///<summary>
		/// Hide breadcrumb
		///</summary>
		[ImplementPropertyType("hideBreadcrumb")]
		public object HideBreadcrumb
		{
			get { return this.GetPropertyValue("hideBreadcrumb"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Standard Page Blog Post{i class="icon umb-tree-icon sprTree icon-article pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The majority of your content will be added to this page via the "Content" tab.{/p} {p}Additional layout options are available which can be added via the "Page Components" folder directly below this page.{/p} {p}By adding new components you will be able to add more advanced layout options to this page.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Page layout: Default page layout will be displayed if nothing is selected. If 'Content full width' is selected sub navigation will be hidden.
		///</summary>
		[ImplementPropertyType("pageLayout")]
		public object PageLayout
		{
			get { return this.GetPropertyValue("pageLayout"); }
		}

		///<summary>
		/// Listing image: Image will be cropped to 1140px x 550px.  {br}{br}  Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("pageListingImage")]
		public string PageListingImage
		{
			get { return this.GetPropertyValue<string>("pageListingImage"); }
		}

		///<summary>
		/// Listing image alt text
		///</summary>
		[ImplementPropertyType("pageListingImageAltText")]
		public string PageListingImageAltText
		{
			get { return this.GetPropertyValue<string>("pageListingImageAltText"); }
		}

		///<summary>
		/// Post summary: If nothing is entered here the summary will be extracted from the beginning of the "Main Content" of your post and the character count will be based on the settings defined on your "Blog Landing Page".
		///</summary>
		[ImplementPropertyType("pageSummary")]
		public IHtmlString PageSummary
		{
			get { return this.GetPropertyValue<IHtmlString>("pageSummary"); }
		}

		///<summary>
		/// Author
		///</summary>
		[ImplementPropertyType("postAuthor")]
		public string PostAuthor
		{
			get { return this.GetPropertyValue<string>("postAuthor"); }
		}

		///<summary>
		/// Categories: If selecting a child category make sure you also select the parent categories.
		///</summary>
		[ImplementPropertyType("postCategories")]
		public string PostCategories
		{
			get { return this.GetPropertyValue<string>("postCategories"); }
		}

		///<summary>
		/// Post date
		///</summary>
		[ImplementPropertyType("postDate")]
		public DateTime PostDate
		{
			get { return this.GetPropertyValue<DateTime>("postDate"); }
		}
	}

	/// <summary>Service child page</summary>
	[PublishedContentModel("serviceChildPage")]
	public partial class ServiceChildPage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "serviceChildPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ServiceChildPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ServiceChildPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add a 'See also' section: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return this.GetPropertyValue<bool>("addSeeAlsoSection"); }
		}

		///<summary>
		/// Department child page content: Add the main content for the page here.
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Change to landing page: Tick this box If there is no proper content to display - i.e. the page's only function is to provide links to its children. The children will then be shown automatically in a grid display.
		///</summary>
		[ImplementPropertyType("changeToLandingPage")]
		public bool ChangeToLandingPage
		{
			get { return this.GetPropertyValue<bool>("changeToLandingPage"); }
		}

		///<summary>
		/// Page title: This is what shows as the heading in the actual page.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// See also: Add links here to appear in a 'See also' section at the bottom of the page.
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.MultiUrls>("seeAlso"); }
		}
	}

	/// <summary>Service FAQ page</summary>
	[PublishedContentModel("departmentFAQPage1")]
	public partial class DepartmentFaqpage1 : PublishedContentModel, ISeeAlsoSection
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "departmentFAQPage1";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public DepartmentFaqpage1(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<DepartmentFaqpage1, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add an introduction: Tick this box and add content below if you need the page to have an introduction.
		///</summary>
		[ImplementPropertyType("addFAQIntroduction")]
		public bool AddFaqintroduction
		{
			get { return this.GetPropertyValue<bool>("addFAQIntroduction"); }
		}

		///<summary>
		/// FAQ introduction: Enter your introductory text here. IMPORTANT: this will be visible only if the box above is ticked.
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Page title: This is what shows as the heading in the actual page.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// Add a see also section?: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return SeeAlsoSection.GetAddSeeAlsoSection(this); }
		}

		///<summary>
		/// Add the links here: Add links here to appear in a 'See also' section at the bottom of the page. IMPORTANT: these only show if you've ticked the box above.
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return SeeAlsoSection.GetSeeAlso(this); }
		}
	}

	/// <summary>Service home page</summary>
	[PublishedContentModel("serviceHomePage")]
	public partial class ServiceHomePage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "serviceHomePage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ServiceHomePage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ServiceHomePage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add a 'See also' section: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return this.GetPropertyValue<bool>("addSeeAlsoSection"); }
		}

		///<summary>
		/// bodyText
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Change to landing page: Tick this box If there is no proper content to display - i.e. the page's only function is to provide links to its children. The children will then be shown automatically in a grid display.
		///</summary>
		[ImplementPropertyType("changeToLandingPage")]
		public bool ChangeToLandingPage
		{
			get { return this.GetPropertyValue<bool>("changeToLandingPage"); }
		}

		///<summary>
		/// Page owner: The person ultimately responsible for the content on this page.
		///</summary>
		[ImplementPropertyType("pageOwner")]
		public string PageOwner
		{
			get { return this.GetPropertyValue<string>("pageOwner"); }
		}

		///<summary>
		/// Page owner's position
		///</summary>
		[ImplementPropertyType("pageOwnersPosition")]
		public string PageOwnersPosition
		{
			get { return this.GetPropertyValue<string>("pageOwnersPosition"); }
		}

		///<summary>
		/// Page title: This is what shows as the heading for the page.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// See also
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.MultiUrls>("seeAlso"); }
		}

		///<summary>
		/// Sub-editor: Sub-editor's email address
		///</summary>
		[ImplementPropertyType("subEditor")]
		public string SubEditor
		{
			get { return this.GetPropertyValue<string>("subEditor"); }
		}
	}

	/// <summary>Service contact page</summary>
	[PublishedContentModel("serviceContactPage")]
	public partial class ServiceContactPage : PublishedContentModel, ISeeAlsoSection
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "serviceContactPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ServiceContactPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ServiceContactPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Page title: IMPORTANT! This must be a unique name. This is what shows as the heading in the actual page.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// Add a see also section?: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return SeeAlsoSection.GetAddSeeAlsoSection(this); }
		}

		///<summary>
		/// Add the links here: Add links here to appear in a 'See also' section at the bottom of the page. IMPORTANT: these only show if you've ticked the box above.
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return SeeAlsoSection.GetSeeAlso(this); }
		}
	}

	/// <summary>Service documents listing page</summary>
	[PublishedContentModel("serviceDocumentsListingPage")]
	public partial class ServiceDocumentsListingPage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "serviceDocumentsListingPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ServiceDocumentsListingPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ServiceDocumentsListingPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add an introduction: Tick this box and add content below if you need the page to have an introduction.
		///</summary>
		[ImplementPropertyType("addDocumentsIntroduction")]
		public bool AddDocumentsIntroduction
		{
			get { return this.GetPropertyValue<bool>("addDocumentsIntroduction"); }
		}

		///<summary>
		/// Add a 'See also' section: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return this.GetPropertyValue<bool>("addSeeAlsoSection"); }
		}

		///<summary>
		/// Introduction: Enter your introductory text here. IMPORTANT: this will be visible only if the box above is ticked.
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Page title: This is what shows as the heading in the actual page.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// See also: Add links here to appear in a 'See also' section at the bottom of the page.
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.MultiUrls>("seeAlso"); }
		}
	}

	/// <summary>Service useful links list</summary>
	[PublishedContentModel("serviceUsefulLinksList")]
	public partial class ServiceUsefulLinksList : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "serviceUsefulLinksList";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ServiceUsefulLinksList(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ServiceUsefulLinksList, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add a 'See also' section: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return this.GetPropertyValue<bool>("addSeeAlsoSection"); }
		}

		///<summary>
		/// Add an Introduction: Tick this box and add content below if you need the page to have an introduction.
		///</summary>
		[ImplementPropertyType("addUsefulLinksIntroduction")]
		public bool AddUsefulLinksIntroduction
		{
			get { return this.GetPropertyValue<bool>("addUsefulLinksIntroduction"); }
		}

		///<summary>
		/// Introduction: Enter your introductory text here. IMPORTANT: this will be visible only if the box above is ticked.
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Page title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// See also: Add links here to appear in a 'See also' section at the bottom of the page.
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.MultiUrls>("seeAlso"); }
		}
	}

	/// <summary>Trust-wide documents child page</summary>
	[PublishedContentModel("trustWideDocumentsChildPage")]
	public partial class TrustWideDocumentsChildPage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "trustWideDocumentsChildPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public TrustWideDocumentsChildPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<TrustWideDocumentsChildPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add a 'See also' section: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return this.GetPropertyValue<bool>("addSeeAlsoSection"); }
		}

		///<summary>
		/// Department child page content: Add the main content for the page here.
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Page title: This is what shows as the heading in the actual page.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// See also: Add links here to appear in a 'See also' section at the bottom of the page.
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.MultiUrls>("seeAlso"); }
		}
	}

	/// <summary>Trust-wide documents section home page</summary>
	[PublishedContentModel("trustWideDocumentsSectionHomePage")]
	public partial class TrustWideDocumentsSectionHomePage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "trustWideDocumentsSectionHomePage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public TrustWideDocumentsSectionHomePage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<TrustWideDocumentsSectionHomePage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add a 'See also' section: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return this.GetPropertyValue<bool>("addSeeAlsoSection"); }
		}

		///<summary>
		/// bodyText
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Page owner: The person ultimately responsible for the content on this page.
		///</summary>
		[ImplementPropertyType("pageOwner")]
		public string PageOwner
		{
			get { return this.GetPropertyValue<string>("pageOwner"); }
		}

		///<summary>
		/// Page owner's position
		///</summary>
		[ImplementPropertyType("pageOwnersPosition")]
		public string PageOwnersPosition
		{
			get { return this.GetPropertyValue<string>("pageOwnersPosition"); }
		}

		///<summary>
		/// Page title: This is what shows as the heading for the page.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// See also
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.MultiUrls>("seeAlso"); }
		}

		///<summary>
		/// Sub-editor: Sub-editor's email address
		///</summary>
		[ImplementPropertyType("subEditor")]
		public string SubEditor
		{
			get { return this.GetPropertyValue<string>("subEditor"); }
		}
	}

	/// <summary>Careers subject home page</summary>
	[PublishedContentModel("careersSubjectHomePage")]
	public partial class CareersSubjectHomePage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "careersSubjectHomePage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public CareersSubjectHomePage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<CareersSubjectHomePage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add a 'See also' section: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return this.GetPropertyValue<bool>("addSeeAlsoSection"); }
		}

		///<summary>
		/// bodyText
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Page owner: The person ultimately responsible for the content on this page.
		///</summary>
		[ImplementPropertyType("pageOwner")]
		public string PageOwner
		{
			get { return this.GetPropertyValue<string>("pageOwner"); }
		}

		///<summary>
		/// Page owner's position
		///</summary>
		[ImplementPropertyType("pageOwnersPosition")]
		public string PageOwnersPosition
		{
			get { return this.GetPropertyValue<string>("pageOwnersPosition"); }
		}

		///<summary>
		/// Page title: This is what shows as the heading for the page.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// See also
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.MultiUrls>("seeAlso"); }
		}

		///<summary>
		/// Sub-editor: Sub-editor's email address
		///</summary>
		[ImplementPropertyType("subEditor")]
		public string SubEditor
		{
			get { return this.GetPropertyValue<string>("subEditor"); }
		}
	}

	/// <summary>Careers child page</summary>
	[PublishedContentModel("careersChildPage")]
	public partial class CareersChildPage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "careersChildPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public CareersChildPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<CareersChildPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add a 'See also' section: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return this.GetPropertyValue<bool>("addSeeAlsoSection"); }
		}

		///<summary>
		/// Department child page content: Add the main content for the page here.
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Page title: This is what shows as the heading in the actual page.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// See also: Add links here to appear in a 'See also' section at the bottom of the page.
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.MultiUrls>("seeAlso"); }
		}
	}

	/// <summary>Careers FAQ page</summary>
	[PublishedContentModel("careersFAQPage1")]
	public partial class CareersFaqpage1 : PublishedContentModel, ISeeAlsoSection
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "careersFAQPage1";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public CareersFaqpage1(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<CareersFaqpage1, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add an introduction: Tick this box and add content below if you need the page to have an introduction.
		///</summary>
		[ImplementPropertyType("addFAQIntroduction")]
		public bool AddFaqintroduction
		{
			get { return this.GetPropertyValue<bool>("addFAQIntroduction"); }
		}

		///<summary>
		/// FAQ introduction: Enter your introductory text here. IMPORTANT: this will be visible only if the box above is ticked.
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Page title: This is what shows as the heading in the actual page.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// Add a see also section?: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return SeeAlsoSection.GetAddSeeAlsoSection(this); }
		}

		///<summary>
		/// Add the links here: Add links here to appear in a 'See also' section at the bottom of the page. IMPORTANT: these only show if you've ticked the box above.
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return SeeAlsoSection.GetSeeAlso(this); }
		}
	}

	/// <summary>Careers documents listing page</summary>
	[PublishedContentModel("careersDocumentsListingPage")]
	public partial class CareersDocumentsListingPage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "careersDocumentsListingPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public CareersDocumentsListingPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<CareersDocumentsListingPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add an introduction: Tick this box and add content below if you need the page to have an introduction.
		///</summary>
		[ImplementPropertyType("addDocumentsIntroduction")]
		public bool AddDocumentsIntroduction
		{
			get { return this.GetPropertyValue<bool>("addDocumentsIntroduction"); }
		}

		///<summary>
		/// Add a 'See also' section: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return this.GetPropertyValue<bool>("addSeeAlsoSection"); }
		}

		///<summary>
		/// Introduction: Enter your introductory text here. IMPORTANT: this will be visible only if the box above is ticked.
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Page title: This is what shows as the heading in the actual page.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// See also: Add links here to appear in a 'See also' section at the bottom of the page.
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.MultiUrls>("seeAlso"); }
		}
	}

	/// <summary>Careers contact page</summary>
	[PublishedContentModel("careersContactPage")]
	public partial class CareersContactPage : PublishedContentModel, ISeeAlsoSection
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "careersContactPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public CareersContactPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<CareersContactPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Page title: IMPORTANT! This must be a unique name. This is what shows as the heading in the actual page.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// Add a see also section?: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return SeeAlsoSection.GetAddSeeAlsoSection(this); }
		}

		///<summary>
		/// Add the links here: Add links here to appear in a 'See also' section at the bottom of the page. IMPORTANT: these only show if you've ticked the box above.
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return SeeAlsoSection.GetSeeAlso(this); }
		}
	}

	/// <summary>Careers useful links list</summary>
	[PublishedContentModel("careersUsefulLinksList")]
	public partial class CareersUsefulLinksList : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "careersUsefulLinksList";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public CareersUsefulLinksList(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<CareersUsefulLinksList, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add a 'See also' section: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return this.GetPropertyValue<bool>("addSeeAlsoSection"); }
		}

		///<summary>
		/// Add an Introduction: Tick this box and add content below if you need the page to have an introduction.
		///</summary>
		[ImplementPropertyType("addUsefulLinksIntroduction")]
		public bool AddUsefulLinksIntroduction
		{
			get { return this.GetPropertyValue<bool>("addUsefulLinksIntroduction"); }
		}

		///<summary>
		/// Body text: Enter your introductory text here. IMPORTANT: this will be visible only if the box above is ticked.
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Page title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// See also: Add links here to appear in a 'See also' section at the bottom of the page.
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.MultiUrls>("seeAlso"); }
		}
	}

	/// <summary>StaffRoom subject home page</summary>
	[PublishedContentModel("staffRoomSubjectHomePage")]
	public partial class StaffRoomSubjectHomePage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "staffRoomSubjectHomePage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public StaffRoomSubjectHomePage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<StaffRoomSubjectHomePage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add a 'See also' section: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return this.GetPropertyValue<bool>("addSeeAlsoSection"); }
		}

		///<summary>
		/// bodyText
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Change to landing page: Tick this box If there is no proper content to display - i.e. the page's only function is to provide links to its children. The children will then be shown automatically in a grid display.
		///</summary>
		[ImplementPropertyType("changeToLandingPage")]
		public bool ChangeToLandingPage
		{
			get { return this.GetPropertyValue<bool>("changeToLandingPage"); }
		}

		///<summary>
		/// Page owner: The person ultimately responsible for the content on this page.
		///</summary>
		[ImplementPropertyType("pageOwner")]
		public string PageOwner
		{
			get { return this.GetPropertyValue<string>("pageOwner"); }
		}

		///<summary>
		/// Page owner's position
		///</summary>
		[ImplementPropertyType("pageOwnersPosition")]
		public string PageOwnersPosition
		{
			get { return this.GetPropertyValue<string>("pageOwnersPosition"); }
		}

		///<summary>
		/// Page title: This is what shows as the heading for the page.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// See also
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.MultiUrls>("seeAlso"); }
		}

		///<summary>
		/// Sub-editor: Sub-editor's email address
		///</summary>
		[ImplementPropertyType("subEditor")]
		public string SubEditor
		{
			get { return this.GetPropertyValue<string>("subEditor"); }
		}
	}

	/// <summary>StaffRoom child page</summary>
	[PublishedContentModel("staffRoomChildPage")]
	public partial class StaffRoomChildPage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "staffRoomChildPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public StaffRoomChildPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<StaffRoomChildPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add a 'See also' section: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return this.GetPropertyValue<bool>("addSeeAlsoSection"); }
		}

		///<summary>
		/// Department child page content: Add the main content for the page here.
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Change to landing page: Tick this box If there is no proper content to display - i.e. the page's only function is to provide links to its children. The children will then be shown automatically in a grid display.
		///</summary>
		[ImplementPropertyType("changeToLandingPage")]
		public bool ChangeToLandingPage
		{
			get { return this.GetPropertyValue<bool>("changeToLandingPage"); }
		}

		///<summary>
		/// Page title: This is what shows as the heading in the actual page.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// See also: Add links here to appear in a 'See also' section at the bottom of the page.
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.MultiUrls>("seeAlso"); }
		}
	}

	/// <summary>StaffRoom FAQ page</summary>
	[PublishedContentModel("staffRoomFAQPage")]
	public partial class StaffRoomFaqpage : PublishedContentModel, ISeeAlsoSection
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "staffRoomFAQPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public StaffRoomFaqpage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<StaffRoomFaqpage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add an introduction: Tick this box and add content below if you need the page to have an introduction.
		///</summary>
		[ImplementPropertyType("addFAQIntroduction")]
		public bool AddFaqintroduction
		{
			get { return this.GetPropertyValue<bool>("addFAQIntroduction"); }
		}

		///<summary>
		/// FAQ introduction: Enter your introductory text here. IMPORTANT: this will be visible only if the box above is ticked.
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Page title: This is what shows as the heading in the actual page.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// Add a see also section?: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return SeeAlsoSection.GetAddSeeAlsoSection(this); }
		}

		///<summary>
		/// Add the links here: Add links here to appear in a 'See also' section at the bottom of the page. IMPORTANT: these only show if you've ticked the box above.
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return SeeAlsoSection.GetSeeAlso(this); }
		}
	}

	/// <summary>StaffRoom documents listing page</summary>
	[PublishedContentModel("staffRoomDocumentsListingPage")]
	public partial class StaffRoomDocumentsListingPage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "staffRoomDocumentsListingPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public StaffRoomDocumentsListingPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<StaffRoomDocumentsListingPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add an introduction: Tick this box and add content below if you need the page to have an introduction.
		///</summary>
		[ImplementPropertyType("addDocumentsIntroduction")]
		public bool AddDocumentsIntroduction
		{
			get { return this.GetPropertyValue<bool>("addDocumentsIntroduction"); }
		}

		///<summary>
		/// Add a 'See also' section: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return this.GetPropertyValue<bool>("addSeeAlsoSection"); }
		}

		///<summary>
		/// Introduction: Enter your introductory text here. IMPORTANT: this will be visible only if the box above is ticked.
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Introduction: Enter your introductory text here. IMPORTANT: this will be visible only if the box above is ticked.
		///</summary>
		[ImplementPropertyType("documentsIntroduction")]
		public IHtmlString DocumentsIntroduction
		{
			get { return this.GetPropertyValue<IHtmlString>("documentsIntroduction"); }
		}

		///<summary>
		/// Page title: This is what shows as the heading in the actual page.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// See also: Add links here to appear in a 'See also' section at the bottom of the page.
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.MultiUrls>("seeAlso"); }
		}
	}

	/// <summary>StaffRoom contact page</summary>
	[PublishedContentModel("staffRoomContactPage")]
	public partial class StaffRoomContactPage : PublishedContentModel, ISeeAlsoSection
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "staffRoomContactPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public StaffRoomContactPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<StaffRoomContactPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Page title: IMPORTANT! This must be a unique name. This is what shows as the heading in the actual page.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// Add a see also section?: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return SeeAlsoSection.GetAddSeeAlsoSection(this); }
		}

		///<summary>
		/// Add the links here: Add links here to appear in a 'See also' section at the bottom of the page. IMPORTANT: these only show if you've ticked the box above.
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return SeeAlsoSection.GetSeeAlso(this); }
		}
	}

	/// <summary>StaffRoom useful links list</summary>
	[PublishedContentModel("staffRoomUsefulLinksList")]
	public partial class StaffRoomUsefulLinksList : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "staffRoomUsefulLinksList";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public StaffRoomUsefulLinksList(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<StaffRoomUsefulLinksList, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add a 'See also' section: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return this.GetPropertyValue<bool>("addSeeAlsoSection"); }
		}

		///<summary>
		/// Add an Introduction: Tick this box and add content below if you need the page to have an introduction.
		///</summary>
		[ImplementPropertyType("addUsefulLinksIntroduction")]
		public bool AddUsefulLinksIntroduction
		{
			get { return this.GetPropertyValue<bool>("addUsefulLinksIntroduction"); }
		}

		///<summary>
		/// Introduction: Enter your introductory text here. IMPORTANT: this will be visible only if the box above is ticked.
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Page title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// See also: Add links here to appear in a 'See also' section at the bottom of the page.
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.MultiUrls>("seeAlso"); }
		}
	}

	/// <summary>Clinical resources list</summary>
	[PublishedContentModel("clinicalResourcesList")]
	public partial class ClinicalResourcesList : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "clinicalResourcesList";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ClinicalResourcesList(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ClinicalResourcesList, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Page title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}
	}

	/// <summary>Clinical resource item</summary>
	[PublishedContentModel("clinicalResourceItem")]
	public partial class ClinicalResourceItem : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "clinicalResourceItem";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ClinicalResourceItem(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ClinicalResourceItem, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Icon: Choose an icon from the media library (must be 40x40 pixels)
		///</summary>
		[ImplementPropertyType("icon")]
		public string Icon
		{
			get { return this.GetPropertyValue<string>("icon"); }
		}

		///<summary>
		/// Link text: Choose the text to be displayed in the link
		///</summary>
		[ImplementPropertyType("linkText")]
		public string LinkText
		{
			get { return this.GetPropertyValue<string>("linkText"); }
		}

		///<summary>
		/// URL: The URL (website address) of the clinical resource
		///</summary>
		[ImplementPropertyType("linkURL")]
		public string LinkUrl
		{
			get { return this.GetPropertyValue<string>("linkURL"); }
		}
	}

	/// <summary>Careers course page</summary>
	[PublishedContentModel("careersCoursePage")]
	public partial class CareersCoursePage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "careersCoursePage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public CareersCoursePage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<CareersCoursePage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add a 'See also' section?
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return this.GetPropertyValue<bool>("addSeeAlsoSection"); }
		}

		///<summary>
		/// Who it's for: Explain who the course is for
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Content and structure: Describe the content and structure of the course
		///</summary>
		[ImplementPropertyType("contentAndStructure")]
		public IHtmlString ContentAndStructure
		{
			get { return this.GetPropertyValue<IHtmlString>("contentAndStructure"); }
		}

		///<summary>
		/// Course aim: Describe the aim/purpose of the course
		///</summary>
		[ImplementPropertyType("courseAim")]
		public IHtmlString CourseAim
		{
			get { return this.GetPropertyValue<IHtmlString>("courseAim"); }
		}

		///<summary>
		/// Hide other information: Click here to hide the Other information section
		///</summary>
		[ImplementPropertyType("hideOtherInformation")]
		public bool HideOtherInformation
		{
			get { return this.GetPropertyValue<bool>("hideOtherInformation"); }
		}

		///<summary>
		/// How to apply: Explain the enrolment process (add a link to Contact page).
		///</summary>
		[ImplementPropertyType("howToApply")]
		public IHtmlString HowToApply
		{
			get { return this.GetPropertyValue<IHtmlString>("howToApply"); }
		}

		///<summary>
		/// Other information: Additional information not covered above
		///</summary>
		[ImplementPropertyType("otherInformation")]
		public IHtmlString OtherInformation
		{
			get { return this.GetPropertyValue<IHtmlString>("otherInformation"); }
		}

		///<summary>
		/// Page title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// See also
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.MultiUrls>("seeAlso"); }
		}
	}

	/// <summary>Careers course categories index</summary>
	[PublishedContentModel("careersCourseCategoriesIndex")]
	public partial class CareersCourseCategoriesIndex : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "careersCourseCategoriesIndex";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public CareersCourseCategoriesIndex(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<CareersCourseCategoriesIndex, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Page Owner
		///</summary>
		[ImplementPropertyType("pageOwner")]
		public string PageOwner
		{
			get { return this.GetPropertyValue<string>("pageOwner"); }
		}

		///<summary>
		/// Page owners position
		///</summary>
		[ImplementPropertyType("pageOwnersPosition")]
		public string PageOwnersPosition
		{
			get { return this.GetPropertyValue<string>("pageOwnersPosition"); }
		}

		///<summary>
		/// Page title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// Sub-editor
		///</summary>
		[ImplementPropertyType("subEditor")]
		public string SubEditor
		{
			get { return this.GetPropertyValue<string>("subEditor"); }
		}
	}

	/// <summary>Careers course category</summary>
	[PublishedContentModel("careersCourseCategory")]
	public partial class CareersCourseCategory : PublishedContentModel, ISeeAlsoSection
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "careersCourseCategory";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public CareersCourseCategory(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<CareersCourseCategory, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// pageOwner
		///</summary>
		[ImplementPropertyType("pageOwner")]
		public string PageOwner
		{
			get { return this.GetPropertyValue<string>("pageOwner"); }
		}

		///<summary>
		/// Page owner's position
		///</summary>
		[ImplementPropertyType("pageOwnersPosition")]
		public string PageOwnersPosition
		{
			get { return this.GetPropertyValue<string>("pageOwnersPosition"); }
		}

		///<summary>
		/// Page title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// Sub-editor
		///</summary>
		[ImplementPropertyType("subEditor")]
		public string SubEditor
		{
			get { return this.GetPropertyValue<string>("subEditor"); }
		}

		///<summary>
		/// Add a see also section?: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return SeeAlsoSection.GetAddSeeAlsoSection(this); }
		}

		///<summary>
		/// Add the links here: Add links here to appear in a 'See also' section at the bottom of the page. IMPORTANT: these only show if you've ticked the box above.
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return SeeAlsoSection.GetSeeAlso(this); }
		}
	}

	/// <summary>Careers course event</summary>
	[PublishedContentModel("careersCourseEvent")]
	public partial class CareersCourseEvent : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "careersCourseEvent";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public CareersCourseEvent(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<CareersCourseEvent, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Finish time: Enter the finish time (no need to set the date)
		///</summary>
		[ImplementPropertyType("courseFinish")]
		public DateTime CourseFinish
		{
			get { return this.GetPropertyValue<DateTime>("courseFinish"); }
		}

		///<summary>
		/// Date and start time: Enter the date and the start time
		///</summary>
		[ImplementPropertyType("courseStart")]
		public DateTime CourseStart
		{
			get { return this.GetPropertyValue<DateTime>("courseStart"); }
		}

		///<summary>
		/// Venue
		///</summary>
		[ImplementPropertyType("courseVenue")]
		public object CourseVenue
		{
			get { return this.GetPropertyValue("courseVenue"); }
		}
	}

	/// <summary>Careers top level contact page</summary>
	[PublishedContentModel("careersContactPage1")]
	public partial class CareersContactPage1 : PublishedContentModel, ISeeAlsoSection
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "careersContactPage1";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public CareersContactPage1(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<CareersContactPage1, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Page owner: The person ultimately responsible for the content in this section
		///</summary>
		[ImplementPropertyType("pageOwner")]
		public string PageOwner
		{
			get { return this.GetPropertyValue<string>("pageOwner"); }
		}

		///<summary>
		/// Page owner's position
		///</summary>
		[ImplementPropertyType("pageOwnersPosition")]
		public string PageOwnersPosition
		{
			get { return this.GetPropertyValue<string>("pageOwnersPosition"); }
		}

		///<summary>
		/// Page title: IMPORTANT! This must be a unique name. This is what shows as the heading in the actual page.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// Sub-editor
		///</summary>
		[ImplementPropertyType("subEditor")]
		public string SubEditor
		{
			get { return this.GetPropertyValue<string>("subEditor"); }
		}

		///<summary>
		/// Add a see also section?: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return SeeAlsoSection.GetAddSeeAlsoSection(this); }
		}

		///<summary>
		/// Add the links here: Add links here to appear in a 'See also' section at the bottom of the page. IMPORTANT: these only show if you've ticked the box above.
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return SeeAlsoSection.GetSeeAlso(this); }
		}
	}

	/// <summary>Internal link</summary>
	[PublishedContentModel("internalLink")]
	public partial class InternalLink : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "internalLink";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public InternalLink(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<InternalLink, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Page to link to
		///</summary>
		[ImplementPropertyType("umbracoRedirect")]
		public object UmbracoRedirect
		{
			get { return this.GetPropertyValue("umbracoRedirect"); }
		}
	}

	/// <summary>Careers course child page</summary>
	[PublishedContentModel("careersCourseChildPage")]
	public partial class CareersCourseChildPage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "careersCourseChildPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public CareersCourseChildPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<CareersCourseChildPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add a See Also section: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return this.GetPropertyValue<bool>("addSeeAlsoSection"); }
		}

		///<summary>
		/// Child page content: Add the main content for the page here
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Page title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// See also: Add links here to appear in a 'See also' section at the bottom of the page.
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.MultiUrls>("seeAlso"); }
		}
	}

	/// <summary>Careers course special page</summary>
	[PublishedContentModel("careersCourseSpecialPage")]
	public partial class CareersCourseSpecialPage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "careersCourseSpecialPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public CareersCourseSpecialPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<CareersCourseSpecialPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add a 'See also' section?
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return this.GetPropertyValue<bool>("addSeeAlsoSection"); }
		}

		///<summary>
		/// Content and structure: Describe the content and structure of the course
		///</summary>
		[ImplementPropertyType("contentAndStructure")]
		public IHtmlString ContentAndStructure
		{
			get { return this.GetPropertyValue<IHtmlString>("contentAndStructure"); }
		}

		///<summary>
		/// Course aim: Describe the aim/purpose of the course
		///</summary>
		[ImplementPropertyType("courseAim")]
		public IHtmlString CourseAim
		{
			get { return this.GetPropertyValue<IHtmlString>("courseAim"); }
		}

		///<summary>
		/// Course finish time: Please ignore the date here
		///</summary>
		[ImplementPropertyType("courseFinish")]
		public DateTime CourseFinish
		{
			get { return this.GetPropertyValue<DateTime>("courseFinish"); }
		}

		///<summary>
		/// Course start time: Please ignore the date here
		///</summary>
		[ImplementPropertyType("courseStartTime")]
		public DateTime CourseStartTime
		{
			get { return this.GetPropertyValue<DateTime>("courseStartTime"); }
		}

		///<summary>
		/// Course venue
		///</summary>
		[ImplementPropertyType("courseVenue")]
		public object CourseVenue
		{
			get { return this.GetPropertyValue("courseVenue"); }
		}

		///<summary>
		/// Hide other information: Click here to hide the Other information section
		///</summary>
		[ImplementPropertyType("hideOtherInformation")]
		public bool HideOtherInformation
		{
			get { return this.GetPropertyValue<bool>("hideOtherInformation"); }
		}

		///<summary>
		/// How to apply: Explain the enrolment process (add a link to Contact page).
		///</summary>
		[ImplementPropertyType("howToApply")]
		public IHtmlString HowToApply
		{
			get { return this.GetPropertyValue<IHtmlString>("howToApply"); }
		}

		///<summary>
		/// Other information: Additional information not covered above
		///</summary>
		[ImplementPropertyType("otherInformation")]
		public IHtmlString OtherInformation
		{
			get { return this.GetPropertyValue<IHtmlString>("otherInformation"); }
		}

		///<summary>
		/// Page title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// See also
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.MultiUrls>("seeAlso"); }
		}

		///<summary>
		/// Who it's for: Explain who the course is for
		///</summary>
		[ImplementPropertyType("whoItsFor")]
		public IHtmlString WhoItsFor
		{
			get { return this.GetPropertyValue<IHtmlString>("whoItsFor"); }
		}
	}

	/// <summary>Careers course special event</summary>
	[PublishedContentModel("careersCourseEvent1")]
	public partial class CareersCourseEvent1 : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "careersCourseEvent1";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public CareersCourseEvent1(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<CareersCourseEvent1, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Course date: Enter the date
		///</summary>
		[ImplementPropertyType("courseDate")]
		public DateTime CourseDate
		{
			get { return this.GetPropertyValue<DateTime>("courseDate"); }
		}
	}

	/// <summary>Department landing page</summary>
	[PublishedContentModel("departmentLandingPage")]
	public partial class DepartmentLandingPage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "departmentLandingPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public DepartmentLandingPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<DepartmentLandingPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Page Owner: The person ultimately responsible for the content on this page.
		///</summary>
		[ImplementPropertyType("pageOwner")]
		public string PageOwner
		{
			get { return this.GetPropertyValue<string>("pageOwner"); }
		}

		///<summary>
		/// Page owner's position
		///</summary>
		[ImplementPropertyType("pageOwnersPosition")]
		public string PageOwnersPosition
		{
			get { return this.GetPropertyValue<string>("pageOwnersPosition"); }
		}

		///<summary>
		/// Page title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// Sub-editor: The sub-editor's email address
		///</summary>
		[ImplementPropertyType("subEditor")]
		public string SubEditor
		{
			get { return this.GetPropertyValue<string>("subEditor"); }
		}
	}

	/// <summary>Division home page</summary>
	[PublishedContentModel("divisionHomePage")]
	public partial class DivisionHomePage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "divisionHomePage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public DivisionHomePage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<DivisionHomePage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add an intro: Add some content above the photos
		///</summary>
		[ImplementPropertyType("addIntro")]
		public bool AddIntro
		{
			get { return this.GetPropertyValue<bool>("addIntro"); }
		}

		///<summary>
		/// Add an outro: Add some content under the photos
		///</summary>
		[ImplementPropertyType("addOutro")]
		public bool AddOutro
		{
			get { return this.GetPropertyValue<bool>("addOutro"); }
		}

		///<summary>
		/// Add a 'See also' section: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return this.GetPropertyValue<bool>("addSeeAlsoSection"); }
		}

		///<summary>
		/// Intro
		///</summary>
		[ImplementPropertyType("intro")]
		public IHtmlString Intro
		{
			get { return this.GetPropertyValue<IHtmlString>("intro"); }
		}

		///<summary>
		/// Outro
		///</summary>
		[ImplementPropertyType("outro")]
		public IHtmlString Outro
		{
			get { return this.GetPropertyValue<IHtmlString>("outro"); }
		}

		///<summary>
		/// Owner
		///</summary>
		[ImplementPropertyType("pageOwner")]
		public string PageOwner
		{
			get { return this.GetPropertyValue<string>("pageOwner"); }
		}

		///<summary>
		/// Owner's position
		///</summary>
		[ImplementPropertyType("pageOwnersPosition")]
		public string PageOwnersPosition
		{
			get { return this.GetPropertyValue<string>("pageOwnersPosition"); }
		}

		///<summary>
		/// Page title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// Name
		///</summary>
		[ImplementPropertyType("person1Name")]
		public string Person1Name
		{
			get { return this.GetPropertyValue<string>("person1Name"); }
		}

		///<summary>
		/// Photo
		///</summary>
		[ImplementPropertyType("person1Photo")]
		public string Person1Photo
		{
			get { return this.GetPropertyValue<string>("person1Photo"); }
		}

		///<summary>
		/// Position
		///</summary>
		[ImplementPropertyType("person1Position")]
		public string Person1Position
		{
			get { return this.GetPropertyValue<string>("person1Position"); }
		}

		///<summary>
		/// Name
		///</summary>
		[ImplementPropertyType("person2Name")]
		public string Person2Name
		{
			get { return this.GetPropertyValue<string>("person2Name"); }
		}

		///<summary>
		/// Photo
		///</summary>
		[ImplementPropertyType("person2Photo")]
		public string Person2Photo
		{
			get { return this.GetPropertyValue<string>("person2Photo"); }
		}

		///<summary>
		/// Position
		///</summary>
		[ImplementPropertyType("person2Position")]
		public string Person2Position
		{
			get { return this.GetPropertyValue<string>("person2Position"); }
		}

		///<summary>
		/// Name
		///</summary>
		[ImplementPropertyType("person3Name")]
		public string Person3Name
		{
			get { return this.GetPropertyValue<string>("person3Name"); }
		}

		///<summary>
		/// Photo
		///</summary>
		[ImplementPropertyType("person3Photo")]
		public string Person3Photo
		{
			get { return this.GetPropertyValue<string>("person3Photo"); }
		}

		///<summary>
		/// Position
		///</summary>
		[ImplementPropertyType("person3Position")]
		public string Person3Position
		{
			get { return this.GetPropertyValue<string>("person3Position"); }
		}

		///<summary>
		/// Name
		///</summary>
		[ImplementPropertyType("person4Name")]
		public string Person4Name
		{
			get { return this.GetPropertyValue<string>("person4Name"); }
		}

		///<summary>
		/// Photo
		///</summary>
		[ImplementPropertyType("person4Photo")]
		public string Person4Photo
		{
			get { return this.GetPropertyValue<string>("person4Photo"); }
		}

		///<summary>
		/// Position
		///</summary>
		[ImplementPropertyType("person4Position")]
		public string Person4Position
		{
			get { return this.GetPropertyValue<string>("person4Position"); }
		}

		///<summary>
		/// Name
		///</summary>
		[ImplementPropertyType("person5Name")]
		public string Person5Name
		{
			get { return this.GetPropertyValue<string>("person5Name"); }
		}

		///<summary>
		/// Photo
		///</summary>
		[ImplementPropertyType("person5Photo")]
		public string Person5Photo
		{
			get { return this.GetPropertyValue<string>("person5Photo"); }
		}

		///<summary>
		/// Position
		///</summary>
		[ImplementPropertyType("person5Position")]
		public string Person5Position
		{
			get { return this.GetPropertyValue<string>("person5Position"); }
		}

		///<summary>
		/// Name
		///</summary>
		[ImplementPropertyType("person6Name")]
		public string Person6Name
		{
			get { return this.GetPropertyValue<string>("person6Name"); }
		}

		///<summary>
		/// Photo
		///</summary>
		[ImplementPropertyType("person6Photo")]
		public string Person6Photo
		{
			get { return this.GetPropertyValue<string>("person6Photo"); }
		}

		///<summary>
		/// Position
		///</summary>
		[ImplementPropertyType("person6Position")]
		public string Person6Position
		{
			get { return this.GetPropertyValue<string>("person6Position"); }
		}

		///<summary>
		/// Name
		///</summary>
		[ImplementPropertyType("person7Name")]
		public string Person7Name
		{
			get { return this.GetPropertyValue<string>("person7Name"); }
		}

		///<summary>
		/// Photo
		///</summary>
		[ImplementPropertyType("person7Photo")]
		public string Person7Photo
		{
			get { return this.GetPropertyValue<string>("person7Photo"); }
		}

		///<summary>
		/// Position
		///</summary>
		[ImplementPropertyType("person7Position")]
		public string Person7Position
		{
			get { return this.GetPropertyValue<string>("person7Position"); }
		}

		///<summary>
		/// See also: Add links here to appear in a 'See also' section at the bottom of the page.
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.MultiUrls>("seeAlso"); }
		}

		///<summary>
		/// Sub-editor
		///</summary>
		[ImplementPropertyType("subEditor")]
		public string SubEditor
		{
			get { return this.GetPropertyValue<string>("subEditor"); }
		}
	}

	/// <summary>ED guidance sheet</summary>
	[PublishedContentModel("eDGuidanceSheet")]
	public partial class EDguidanceSheet : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "eDGuidanceSheet";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public EDguidanceSheet(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<EDguidanceSheet, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add an introduction: Tick here to add an introduction to the page (i.e. BEFORE the guidance section)
		///</summary>
		[ImplementPropertyType("addEdGuidanceIntro")]
		public bool AddEdGuidanceIntro
		{
			get { return this.GetPropertyValue<bool>("addEdGuidanceIntro"); }
		}

		///<summary>
		/// Add 'See also' link(s): Click here if you need to add 'See also' cross-reference links to other pages
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return this.GetPropertyValue<bool>("addSeeAlsoSection"); }
		}

		///<summary>
		/// bodyText
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Introduction
		///</summary>
		[ImplementPropertyType("edGuidanceIntro")]
		public IHtmlString EdGuidanceIntro
		{
			get { return this.GetPropertyValue<IHtmlString>("edGuidanceIntro"); }
		}

		///<summary>
		/// Page title: This is what appears in the actual page - it MUST be unique.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// Choose link(s): Add each link individually by clicking on the '+' below
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.MultiUrls>("seeAlso"); }
		}
	}

	/// <summary>ED guidance item</summary>
	[PublishedContentModel("eDRepositoryItem")]
	public partial class EDrepositoryItem : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "eDRepositoryItem";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public EDrepositoryItem(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<EDrepositoryItem, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Choose document: Click on the '+' below
		///</summary>
		[ImplementPropertyType("documentAddress")]
		public string DocumentAddress
		{
			get { return this.GetPropertyValue<string>("documentAddress"); }
		}

		///<summary>
		/// Document description: An (optional) short description of the document - displayed beside the  link 'button'
		///</summary>
		[ImplementPropertyType("documentDescription")]
		public string DocumentDescription
		{
			get { return this.GetPropertyValue<string>("documentDescription"); }
		}

		///<summary>
		/// Document name: The precise name of the document - this will appear on the link 'button'
		///</summary>
		[ImplementPropertyType("documentName")]
		public string DocumentName
		{
			get { return this.GetPropertyValue<string>("documentName"); }
		}

		///<summary>
		/// Link description: An (optional) short description of what the link is for - displayed beside the  link 'button'
		///</summary>
		[ImplementPropertyType("linkDescription")]
		public string LinkDescription
		{
			get { return this.GetPropertyValue<string>("linkDescription"); }
		}

		///<summary>
		/// Link text: A clear description of the link - this will appear on the link 'button'
		///</summary>
		[ImplementPropertyType("linkText")]
		public string LinkText
		{
			get { return this.GetPropertyValue<string>("linkText"); }
		}

		///<summary>
		/// linkURL: Copy the URL (website address) you want to link to, and paste it here
		///</summary>
		[ImplementPropertyType("linkURL")]
		public string LinkUrl
		{
			get { return this.GetPropertyValue<string>("linkURL"); }
		}
	}

	/// <summary>ED guidance list</summary>
	[PublishedContentModel("eDRespositoryList")]
	public partial class EDrespositoryList : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "eDRespositoryList";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public EDrespositoryList(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<EDrespositoryList, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add an introduction: Tick here to add an introduction before the list of documents/links
		///</summary>
		[ImplementPropertyType("addEdGuidanceIntro")]
		public bool AddEdGuidanceIntro
		{
			get { return this.GetPropertyValue<bool>("addEdGuidanceIntro"); }
		}

		///<summary>
		/// Add a see also section: Click here if you need to add 'See also' cross-reference links to other pages
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return this.GetPropertyValue<bool>("addSeeAlsoSection"); }
		}

		///<summary>
		/// Introduction content
		///</summary>
		[ImplementPropertyType("edGuidanceIntro")]
		public IHtmlString EdGuidanceIntro
		{
			get { return this.GetPropertyValue<IHtmlString>("edGuidanceIntro"); }
		}

		///<summary>
		/// Page title: This is what is shown in the page - it MUST be unique
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// Choose the links: Add each link individually by clicking on the '+' below
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.MultiUrls>("seeAlso"); }
		}
	}

	/// <summary>Wiltshire Health and Care home page</summary>
	[PublishedContentModel("wiltshireHealthAndCareHomePage")]
	public partial class WiltshireHealthAndCareHomePage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "wiltshireHealthAndCareHomePage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public WiltshireHealthAndCareHomePage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<WiltshireHealthAndCareHomePage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Content
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Page owner
		///</summary>
		[ImplementPropertyType("pageOwner")]
		public string PageOwner
		{
			get { return this.GetPropertyValue<string>("pageOwner"); }
		}

		///<summary>
		/// Page owner's position
		///</summary>
		[ImplementPropertyType("pageOwnersPosition")]
		public string PageOwnersPosition
		{
			get { return this.GetPropertyValue<string>("pageOwnersPosition"); }
		}

		///<summary>
		/// Page title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// Sub-editor
		///</summary>
		[ImplementPropertyType("subEditor")]
		public string SubEditor
		{
			get { return this.GetPropertyValue<string>("subEditor"); }
		}
	}

	/// <summary>Equipment Category</summary>
	[PublishedContentModel("equipmentCategory")]
	public partial class EquipmentCategory : PublishedContentModel, ISeeAlsoSection
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "equipmentCategory";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public EquipmentCategory(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<EquipmentCategory, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Page title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// Add a see also section?: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return SeeAlsoSection.GetAddSeeAlsoSection(this); }
		}

		///<summary>
		/// Add the links here: Add links here to appear in a 'See also' section at the bottom of the page. IMPORTANT: these only show if you've ticked the box above.
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return SeeAlsoSection.GetSeeAlso(this); }
		}
	}

	/// <summary>Equipment item</summary>
	[PublishedContentModel("equipmentItem")]
	public partial class EquipmentItem : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "equipmentItem";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public EquipmentItem(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<EquipmentItem, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Cost
		///</summary>
		[ImplementPropertyType("equipmentCost")]
		public string EquipmentCost
		{
			get { return this.GetPropertyValue<string>("equipmentCost"); }
		}

		///<summary>
		/// Minor equipment form required?
		///</summary>
		[ImplementPropertyType("equipmentForm")]
		public object EquipmentForm
		{
			get { return this.GetPropertyValue("equipmentForm"); }
		}

		///<summary>
		/// equipmentImage: MAXIMUM WIDTH: 300 pixels
		///</summary>
		[ImplementPropertyType("equipmentImage")]
		public string EquipmentImage
		{
			get { return this.GetPropertyValue<string>("equipmentImage"); }
		}

		///<summary>
		/// Web link address: Copy the URL and paste it here.
		///</summary>
		[ImplementPropertyType("equipmentLinkURL")]
		public string EquipmentLinkUrl
		{
			get { return this.GetPropertyValue<string>("equipmentLinkURL"); }
		}

		///<summary>
		/// Manufacturer
		///</summary>
		[ImplementPropertyType("equipmentManufacturer")]
		public string EquipmentManufacturer
		{
			get { return this.GetPropertyValue<string>("equipmentManufacturer"); }
		}

		///<summary>
		/// Model
		///</summary>
		[ImplementPropertyType("equipmentModel")]
		public string EquipmentModel
		{
			get { return this.GetPropertyValue<string>("equipmentModel"); }
		}

		///<summary>
		/// Notes
		///</summary>
		[ImplementPropertyType("equipmentNotes")]
		public string EquipmentNotes
		{
			get { return this.GetPropertyValue<string>("equipmentNotes"); }
		}

		///<summary>
		/// Supplier
		///</summary>
		[ImplementPropertyType("equipmentSupplier")]
		public string EquipmentSupplier
		{
			get { return this.GetPropertyValue<string>("equipmentSupplier"); }
		}

		///<summary>
		/// Link text: The text to appear on the link button.
		///</summary>
		[ImplementPropertyType("linkText")]
		public string LinkText
		{
			get { return this.GetPropertyValue<string>("linkText"); }
		}
	}

	/// <summary>Wiltshire Health and Care child page</summary>
	[PublishedContentModel("wiltshireHealthAndCareChildPage")]
	public partial class WiltshireHealthAndCareChildPage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "wiltshireHealthAndCareChildPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public WiltshireHealthAndCareChildPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<WiltshireHealthAndCareChildPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Adda 'See also' section: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return this.GetPropertyValue<bool>("addSeeAlsoSection"); }
		}

		///<summary>
		/// Content: Add the main content for the page here.
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Change to landing page: Tick this box If there is no proper content to display - i.e. the page's only function is to provide links to its children. The children will then be shown automatically in a grid display.
		///</summary>
		[ImplementPropertyType("changeToLandingPage")]
		public bool ChangeToLandingPage
		{
			get { return this.GetPropertyValue<bool>("changeToLandingPage"); }
		}

		///<summary>
		/// Page title: This is what shows as the heading in the actual page.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// See also: Add links here to appear in a 'See also' section at the bottom of the page.
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.MultiUrls>("seeAlso"); }
		}
	}

	/// <summary>Wiltshire Health and Care documents listing page</summary>
	[PublishedContentModel("wiltshireHealthAndCareDocumentsListingPage")]
	public partial class WiltshireHealthAndCareDocumentsListingPage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "wiltshireHealthAndCareDocumentsListingPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public WiltshireHealthAndCareDocumentsListingPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<WiltshireHealthAndCareDocumentsListingPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add an introduction: Tick this box and add content below if you need the page to have an introduction.
		///</summary>
		[ImplementPropertyType("addDocumentsIntroduction")]
		public bool AddDocumentsIntroduction
		{
			get { return this.GetPropertyValue<bool>("addDocumentsIntroduction"); }
		}

		///<summary>
		/// Add a 'See also' section: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return this.GetPropertyValue<bool>("addSeeAlsoSection"); }
		}

		///<summary>
		/// Introduction: Enter your introductory text here. IMPORTANT: this will be visible only if the box above is ticked.
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Page title: This is what shows as the heading in the actual page.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// See also: Add links here to appear in a 'See also' section at the bottom of the page.
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.MultiUrls>("seeAlso"); }
		}
	}

	/// <summary>Wiltshire Health and Care FAQ page</summary>
	[PublishedContentModel("wiltshireHealthAndCareFAQPage")]
	public partial class WiltshireHealthAndCareFaqpage : PublishedContentModel, ISeeAlsoSection
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "wiltshireHealthAndCareFAQPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public WiltshireHealthAndCareFaqpage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<WiltshireHealthAndCareFaqpage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// addFAQintroduction: Tick this box and add content below if you need the page to have an introduction.
		///</summary>
		[ImplementPropertyType("addFAQintroduction")]
		public bool AddFaqintroduction
		{
			get { return this.GetPropertyValue<bool>("addFAQintroduction"); }
		}

		///<summary>
		/// fAQIntroduction: Enter your introductory text here. IMPORTANT: this will be visible only if the box above is ticked.
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// pageTitle: This is what shows as the heading in the actual page.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// Add a see also section?: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return SeeAlsoSection.GetAddSeeAlsoSection(this); }
		}

		///<summary>
		/// Add the links here: Add links here to appear in a 'See also' section at the bottom of the page. IMPORTANT: these only show if you've ticked the box above.
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return SeeAlsoSection.GetSeeAlso(this); }
		}
	}

	/// <summary>IRE Home Page</summary>
	[PublishedContentModel("iREHomePage")]
	public partial class IRehomePage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "iREHomePage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public IRehomePage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<IRehomePage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Page title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}
	}

	/// <summary>IRE section home page</summary>
	[PublishedContentModel("iRESectionHomePage")]
	public partial class IResectionHomePage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "iRESectionHomePage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public IResectionHomePage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<IResectionHomePage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add a see also section: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return this.GetPropertyValue<bool>("addSeeAlsoSection"); }
		}

		///<summary>
		/// bodyText
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Page Owner: The person ultimately responsible for the content on this page.
		///</summary>
		[ImplementPropertyType("pageOwner")]
		public string PageOwner
		{
			get { return this.GetPropertyValue<string>("pageOwner"); }
		}

		///<summary>
		/// Page owner's position
		///</summary>
		[ImplementPropertyType("pageOwnersPosition")]
		public string PageOwnersPosition
		{
			get { return this.GetPropertyValue<string>("pageOwnersPosition"); }
		}

		///<summary>
		/// Page title: This is what shows as the heading for the page.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// See also
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.MultiUrls>("seeAlso"); }
		}

		///<summary>
		/// Sub editor
		///</summary>
		[ImplementPropertyType("subEditor")]
		public string SubEditor
		{
			get { return this.GetPropertyValue<string>("subEditor"); }
		}
	}

	/// <summary>IRE child page</summary>
	[PublishedContentModel("iREChildPage")]
	public partial class IRechildPage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "iREChildPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public IRechildPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<IRechildPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add a see also section
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return this.GetPropertyValue<bool>("addSeeAlsoSection"); }
		}

		///<summary>
		/// Body text
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Page title: This is what shows as the heading for the page.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// See also
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.MultiUrls>("seeAlso"); }
		}
	}

	/// <summary>Discount listing</summary>
	[PublishedContentModel("discountListing")]
	public partial class DiscountListing : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "discountListing";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public DiscountListing(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<DiscountListing, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Page title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}
	}

	/// <summary>Discount item</summary>
	[PublishedContentModel("discountItem")]
	public partial class DiscountItem : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "discountItem";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public DiscountItem(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<DiscountItem, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Discount details
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// URL: The website address
		///</summary>
		[ImplementPropertyType("discountLinkURL")]
		public string DiscountLinkUrl
		{
			get { return this.GetPropertyValue<string>("discountLinkURL"); }
		}

		///<summary>
		/// Logo image: Maximum 150 pixels width or height
		///</summary>
		[ImplementPropertyType("discountLogo")]
		public string DiscountLogo
		{
			get { return this.GetPropertyValue<string>("discountLogo"); }
		}

		///<summary>
		/// Discount name: The name of the company or organisation offering the discount.
		///</summary>
		[ImplementPropertyType("discountName")]
		public string DiscountName
		{
			get { return this.GetPropertyValue<string>("discountName"); }
		}

		///<summary>
		/// Discount offer: A brief description of the offer (% discount and on what, etc)
		///</summary>
		[ImplementPropertyType("discountOffer")]
		public string DiscountOffer
		{
			get { return this.GetPropertyValue<string>("discountOffer"); }
		}

		///<summary>
		/// Link text: The text to be shown on the link button.
		///</summary>
		[ImplementPropertyType("linkText")]
		public string LinkText
		{
			get { return this.GetPropertyValue<string>("linkText"); }
		}
	}

	/// <summary>Doc Repository Landing Page</summary>
	[PublishedContentModel("docRepositoryLandingPage")]
	public partial class DocRepositoryLandingPage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "docRepositoryLandingPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public DocRepositoryLandingPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<DocRepositoryLandingPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// bodyText
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Document Repository{i class="icon umb-tree-icon sprTree icon-newspaper pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}This page will list your documents.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public string Instructions
		{
			get { return this.GetPropertyValue<string>("instructions"); }
		}
	}

	/// <summary>Doc Repository Master</summary>
	[PublishedContentModel("docRepositoryMaster")]
	public partial class DocRepositoryMaster : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "docRepositoryMaster";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public DocRepositoryMaster(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<DocRepositoryMaster, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public string DisableDelete
		{
			get { return this.GetPropertyValue<string>("disableDelete"); }
		}
	}

	/// <summary>Document Folder</summary>
	[PublishedContentModel("documentFolder")]
	public partial class DocumentFolder : DocRepositoryMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "documentFolder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public DocumentFolder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<DocumentFolder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Documents Folder{i class="icon sprTree icon-folder-outline color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}{strong}DO NOT{/strong} delete or rename this folder.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public string Instructions
		{
			get { return this.GetPropertyValue<string>("instructions"); }
		}
	}

	/// <summary>Document Item</summary>
	[PublishedContentModel("WTDocRepItem")]
	public partial class WtdocRepItem : DocRepositoryMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "WTDocRepItem";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public WtdocRepItem(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<WtdocRepItem, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Document File Key: This represents the filename of the original upload. It is used to try and match replacement uploads automatically.
		///</summary>
		[ImplementPropertyType("documentFileKey")]
		public string DocumentFileKey
		{
			get { return this.GetPropertyValue<string>("documentFileKey"); }
		}

		///<summary>
		/// Document Path: Use this to enter the path to the document on your shared drive
		///</summary>
		[ImplementPropertyType("documentPath")]
		public string DocumentPath
		{
			get { return this.GetPropertyValue<string>("documentPath"); }
		}

		///<summary>
		/// Document Summary
		///</summary>
		[ImplementPropertyType("documentSummary")]
		public IHtmlString DocumentSummary
		{
			get { return this.GetPropertyValue<IHtmlString>("documentSummary"); }
		}

		///<summary>
		/// Expiry Date
		///</summary>
		[ImplementPropertyType("expiryDate")]
		public DateTime ExpiryDate
		{
			get { return this.GetPropertyValue<DateTime>("expiryDate"); }
		}

		///<summary>
		/// Document meta data: Use this field to enter a description for your webpage. This is the information that is displayed by search engines when your website appears in a search listing. Try and keep this below 155 characters.
		///</summary>
		[ImplementPropertyType("metaDescription")]
		public string MetaDescription
		{
			get { return this.GetPropertyValue<string>("metaDescription"); }
		}

		///<summary>
		/// Owner: The primary owner of this document. They will be notified when this document needs to be reviewed or if it expires.
		///</summary>
		[ImplementPropertyType("owner")]
		public object Owner
		{
			get { return this.GetPropertyValue("owner"); }
		}

		///<summary>
		/// Publish Date
		///</summary>
		[ImplementPropertyType("publishDate")]
		public DateTime PublishDate
		{
			get { return this.GetPropertyValue<DateTime>("publishDate"); }
		}

		///<summary>
		/// Review Date
		///</summary>
		[ImplementPropertyType("reviewDate")]
		public DateTime ReviewDate
		{
			get { return this.GetPropertyValue<DateTime>("reviewDate"); }
		}

		///<summary>
		/// Secondary Owner: The secondary owner is also notified, as with the primary owner. This is an optional field that acts as a backup if the primary owner is not available.
		///</summary>
		[ImplementPropertyType("secondaryOwner")]
		public object SecondaryOwner
		{
			get { return this.GetPropertyValue("secondaryOwner"); }
		}

		///<summary>
		/// Self Referral
		///</summary>
		[ImplementPropertyType("selfReferral")]
		public object SelfReferral
		{
			get { return this.GetPropertyValue("selfReferral"); }
		}

		///<summary>
		/// Service Age Group
		///</summary>
		[ImplementPropertyType("serviceAgeGroup")]
		public object ServiceAgeGroup
		{
			get { return this.GetPropertyValue("serviceAgeGroup"); }
		}

		///<summary>
		/// Service Category
		///</summary>
		[ImplementPropertyType("serviceCategory")]
		public object ServiceCategory
		{
			get { return this.GetPropertyValue("serviceCategory"); }
		}

		///<summary>
		/// Service Location
		///</summary>
		[ImplementPropertyType("serviceLocation")]
		public object ServiceLocation
		{
			get { return this.GetPropertyValue("serviceLocation"); }
		}

		///<summary>
		/// Additional Tags
		///</summary>
		[ImplementPropertyType("tags")]
		public string Tags
		{
			get { return this.GetPropertyValue<string>("tags"); }
		}
	}

	/// <summary>Service display blocks page</summary>
	[PublishedContentModel("serviceDisplayBlocksPage")]
	public partial class ServiceDisplayBlocksPage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "serviceDisplayBlocksPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ServiceDisplayBlocksPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ServiceDisplayBlocksPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Page title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}
	}

	// Mixin content Type 5689 with alias "seeAlsoSection"
	/// <summary>See also section</summary>
	public partial interface ISeeAlsoSection : IPublishedContent
	{
		/// <summary>Add a see also section?</summary>
		bool AddSeeAlsoSection { get; }

		/// <summary>Add the links here</summary>
		RJP.MultiUrlPicker.Models.MultiUrls SeeAlso { get; }
	}

	/// <summary>See also section</summary>
	[PublishedContentModel("seeAlsoSection")]
	public partial class SeeAlsoSection : PublishedContentModel, ISeeAlsoSection
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "seeAlsoSection";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public SeeAlsoSection(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<SeeAlsoSection, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add a see also section?: To add a 'See also' list (links to other sections), tick this box and then add links below. To hide the list, untick the box.
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return GetAddSeeAlsoSection(this); }
		}

		/// <summary>Static getter for Add a see also section?</summary>
		public static bool GetAddSeeAlsoSection(ISeeAlsoSection that) { return that.GetPropertyValue<bool>("addSeeAlsoSection"); }

		///<summary>
		/// Add the links here: Add links here to appear in a 'See also' section at the bottom of the page. IMPORTANT: these only show if you've ticked the box above.
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return GetSeeAlso(this); }
		}

		/// <summary>Static getter for Add the links here</summary>
		public static RJP.MultiUrlPicker.Models.MultiUrls GetSeeAlso(ISeeAlsoSection that) { return that.GetPropertyValue<RJP.MultiUrlPicker.Models.MultiUrls>("seeAlso"); }
	}

	/// <summary>news listing test page</summary>
	[PublishedContentModel("newsListingTestPage")]
	public partial class NewsListingTestPage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "newsListingTestPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public NewsListingTestPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<NewsListingTestPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Page title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}
	}

	/// <summary>News section home page</summary>
	[PublishedContentModel("NewsSectionHomePage")]
	public partial class NewsSectionHomePage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "NewsSectionHomePage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public NewsSectionHomePage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<NewsSectionHomePage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Blog listing page size: Enter the number of articles you would like to appear per page.
		///</summary>
		[ImplementPropertyType("blogListingPageSize")]
		public string BlogListingPageSize
		{
			get { return this.GetPropertyValue<string>("blogListingPageSize"); }
		}

		///<summary>
		/// Summary text character count: Enter the number of characters of text you would like displayed from the beginning of each blog article. If nothing is entered, no summary text will be displayed.
		///</summary>
		[ImplementPropertyType("blogSummaryTextCharacterCount")]
		public string BlogSummaryTextCharacterCount
		{
			get { return this.GetPropertyValue<string>("blogSummaryTextCharacterCount"); }
		}

		///<summary>
		/// Breadcrumb link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("breadcrumbLinkText")]
		public string BreadcrumbLinkText
		{
			get { return this.GetPropertyValue<string>("breadcrumbLinkText"); }
		}

		///<summary>
		/// Default author: Select the default author that will be applied to all blog posts.
		///</summary>
		[ImplementPropertyType("defaultAuthor")]
		public string DefaultAuthor
		{
			get { return this.GetPropertyValue<string>("defaultAuthor"); }
		}

		///<summary>
		/// Disqus username: If nothing is entered, blog commenting will be disabled.
		///</summary>
		[ImplementPropertyType("disqusUsername")]
		public string DisqusUsername
		{
			get { return this.GetPropertyValue<string>("disqusUsername"); }
		}

		///<summary>
		/// Hide breadcrumb
		///</summary>
		[ImplementPropertyType("hideBreadcrumb")]
		public object HideBreadcrumb
		{
			get { return this.GetPropertyValue("hideBreadcrumb"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Blog Landing Page{i class="icon umb-tree-icon sprTree icon-newspaper pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}This page will list your blog posts. Blog posts are added to this section via the "Posts" folder directly below this page.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Page layout: Default page layout will be displayed if nothing is selected. If 'Content full width' is selected sub navigation will be hidden.
		///</summary>
		[ImplementPropertyType("pageLayout")]
		public object PageLayout
		{
			get { return this.GetPropertyValue("pageLayout"); }
		}

		///<summary>
		/// Sitemap link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("sitemapLinkText")]
		public string SitemapLinkText
		{
			get { return this.GetPropertyValue<string>("sitemapLinkText"); }
		}
	}

	/// <summary>Blog Landing Page NEW</summary>
	[PublishedContentModel("USNBlogLandingPageNEW")]
	public partial class UsnblogLandingPageNew : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNBlogLandingPageNEW";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnblogLandingPageNew(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnblogLandingPageNew, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Blog listing page size: Enter the number of articles you would like to appear per page.
		///</summary>
		[ImplementPropertyType("blogListingPageSize")]
		public string BlogListingPageSize
		{
			get { return this.GetPropertyValue<string>("blogListingPageSize"); }
		}

		///<summary>
		/// Summary text character count: Enter the number of characters of text you would like displayed from the beginning of each blog article. If nothing is entered, no summary text will be displayed.
		///</summary>
		[ImplementPropertyType("blogSummaryTextCharacterCount")]
		public string BlogSummaryTextCharacterCount
		{
			get { return this.GetPropertyValue<string>("blogSummaryTextCharacterCount"); }
		}

		///<summary>
		/// Breadcrumb link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("breadcrumbLinkText")]
		public string BreadcrumbLinkText
		{
			get { return this.GetPropertyValue<string>("breadcrumbLinkText"); }
		}

		///<summary>
		/// Default author: Select the default author that will be applied to all blog posts.
		///</summary>
		[ImplementPropertyType("defaultAuthor")]
		public string DefaultAuthor
		{
			get { return this.GetPropertyValue<string>("defaultAuthor"); }
		}

		///<summary>
		/// Disqus username: If nothing is entered, blog commenting will be disabled.
		///</summary>
		[ImplementPropertyType("disqusUsername")]
		public string DisqusUsername
		{
			get { return this.GetPropertyValue<string>("disqusUsername"); }
		}

		///<summary>
		/// Hide breadcrumb
		///</summary>
		[ImplementPropertyType("hideBreadcrumb")]
		public object HideBreadcrumb
		{
			get { return this.GetPropertyValue("hideBreadcrumb"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Blog Landing Page{i class="icon umb-tree-icon sprTree icon-newspaper pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}This page will list your blog posts. Blog posts are added to this section via the "Posts" folder directly below this page.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Page layout: Default page layout will be displayed if nothing is selected. If 'Content full width' is selected sub navigation will be hidden.
		///</summary>
		[ImplementPropertyType("pageLayout")]
		public object PageLayout
		{
			get { return this.GetPropertyValue("pageLayout"); }
		}

		///<summary>
		/// Sitemap link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("sitemapLinkText")]
		public string SitemapLinkText
		{
			get { return this.GetPropertyValue<string>("sitemapLinkText"); }
		}
	}

	/// <summary>News year folder</summary>
	[PublishedContentModel("newsYearFolder")]
	public partial class NewsYearFolder : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "newsYearFolder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public NewsYearFolder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<NewsYearFolder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>News month folder</summary>
	[PublishedContentModel("newsMonthFolder")]
	public partial class NewsMonthFolder : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "newsMonthFolder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public NewsMonthFolder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<NewsMonthFolder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>News article</summary>
	[PublishedContentModel("USNStandardPageBlogPost2")]
	public partial class UsnstandardPageBlogPost2 : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNStandardPageBlogPost2";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnstandardPageBlogPost2(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnstandardPageBlogPost2, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Content
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Listing image: This is the image that will be shown in the listing on the home page and News home page. It should be 260x150 pixels. When used for the top story (on the home page), it will be used in its original size, otherwise it will be automatically re-sized to 130x75 pixels.
		///</summary>
		[ImplementPropertyType("pageListingImage")]
		public string PageListingImage
		{
			get { return this.GetPropertyValue<string>("pageListingImage"); }
		}

		///<summary>
		/// Listing image alt text
		///</summary>
		[ImplementPropertyType("pageListingImageAltText")]
		public string PageListingImageAltText
		{
			get { return this.GetPropertyValue<string>("pageListingImageAltText"); }
		}

		///<summary>
		/// Page title: This is what will appear as the headline in the article page. If you need a shorter headline for the news listing on the front page, leave this as it is, and shorten the file name above.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// Post date
		///</summary>
		[ImplementPropertyType("postDate")]
		public DateTime PostDate
		{
			get { return this.GetPropertyValue<DateTime>("postDate"); }
		}
	}

	/// <summary>Mixed resource item</summary>
	[PublishedContentModel("mixedResourceItem")]
	public partial class MixedResourceItem : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "mixedResourceItem";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public MixedResourceItem(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<MixedResourceItem, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Choose document: Click on the '+' below
		///</summary>
		[ImplementPropertyType("documentAddress")]
		public string DocumentAddress
		{
			get { return this.GetPropertyValue<string>("documentAddress"); }
		}

		///<summary>
		/// Document description: An (optional) short description of the document - displayed beside the  link 'button'
		///</summary>
		[ImplementPropertyType("documentDescription")]
		public string DocumentDescription
		{
			get { return this.GetPropertyValue<string>("documentDescription"); }
		}

		///<summary>
		/// Document name: The precise name of the document - this will appear on the link 'button'
		///</summary>
		[ImplementPropertyType("documentName")]
		public string DocumentName
		{
			get { return this.GetPropertyValue<string>("documentName"); }
		}

		///<summary>
		/// Link description: An (optional) short description of what the link is for - displayed beside the  link 'button'
		///</summary>
		[ImplementPropertyType("linkDescription")]
		public string LinkDescription
		{
			get { return this.GetPropertyValue<string>("linkDescription"); }
		}

		///<summary>
		/// Link text: A clear description of the link - this will appear on the link 'button'
		///</summary>
		[ImplementPropertyType("linkText")]
		public string LinkText
		{
			get { return this.GetPropertyValue<string>("linkText"); }
		}

		///<summary>
		/// Link URL: Copy the URL (website address) you want to link to, and paste it here
		///</summary>
		[ImplementPropertyType("linkURL")]
		public RJP.MultiUrlPicker.Models.MultiUrls LinkUrl
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.MultiUrls>("linkURL"); }
		}
	}

	/// <summary>Mixed resource page</summary>
	[PublishedContentModel("mixedResourcePage")]
	public partial class MixedResourcePage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "mixedResourcePage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public MixedResourcePage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<MixedResourcePage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add an introduction: Tick here to add an introduction before the list of documents/links
		///</summary>
		[ImplementPropertyType("addMixedResourceIntro")]
		public bool AddMixedResourceIntro
		{
			get { return this.GetPropertyValue<bool>("addMixedResourceIntro"); }
		}

		///<summary>
		/// Add a see also section: Click here if you need to add 'See also' cross-reference links to other pages
		///</summary>
		[ImplementPropertyType("addSeeAlsoSection")]
		public bool AddSeeAlsoSection
		{
			get { return this.GetPropertyValue<bool>("addSeeAlsoSection"); }
		}

		///<summary>
		/// Introduction content
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Limit navigation: Tick this box to restrict the left-hand navigation. This was set up for the Cancer Services section, because it wasn't necessary to have navigation to sibling pages once the user had chosen their path from 'Tumour site-specific information'. It can be used for other departments, but check that it works as intended on lower level pages!
		///</summary>
		[ImplementPropertyType("limitNavigation")]
		public bool LimitNavigation
		{
			get { return this.GetPropertyValue<bool>("limitNavigation"); }
		}

		///<summary>
		/// Page title: This is what is shown in the page - it MUST be unique
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// Choose the links: Add each link individually by clicking on the '+' below
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public RJP.MultiUrlPicker.Models.MultiUrls SeeAlso
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.MultiUrls>("seeAlso"); }
		}
	}

	/// <summary>Grapevine home page</summary>
	[PublishedContentModel("grapevineHomePage")]
	public partial class GrapevineHomePage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "grapevineHomePage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public GrapevineHomePage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<GrapevineHomePage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Page owner: The person ultimately responsible for the content on this page.
		///</summary>
		[ImplementPropertyType("pageOwner")]
		public string PageOwner
		{
			get { return this.GetPropertyValue<string>("pageOwner"); }
		}

		///<summary>
		/// Page owner's position
		///</summary>
		[ImplementPropertyType("pageOwnersPosition")]
		public string PageOwnersPosition
		{
			get { return this.GetPropertyValue<string>("pageOwnersPosition"); }
		}

		///<summary>
		/// Page title: The title, which appears in the actual page.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// Start Node ID: The ID number for 'Grapevine items' - the FOLDER in which Grapevine items are stored (see the Content tree). This has been set to 5999 and only needs to be changed if a different folder is used.
		///</summary>
		[ImplementPropertyType("startNodeID")]
		public int StartNodeID
		{
			get { return this.GetPropertyValue<int>("startNodeID"); }
		}

		///<summary>
		/// Sub-editor: Sub-editor's email address
		///</summary>
		[ImplementPropertyType("subEditor")]
		public string SubEditor
		{
			get { return this.GetPropertyValue<string>("subEditor"); }
		}
	}

	/// <summary>Grapevine item</summary>
	[PublishedContentModel("grapevineItem")]
	public partial class GrapevineItem : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "grapevineItem";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public GrapevineItem(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<GrapevineItem, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Message: This is the full message, which appears in the dedicated page for each Grapevine item. It's possible to add only text and hyperlinks (not images). It's limited to 500 characters
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Headline: This is the short headline which appears on the home page.
		///</summary>
		[ImplementPropertyType("grapevineItemHeadline")]
		public string GrapevineItemHeadline
		{
			get { return this.GetPropertyValue<string>("grapevineItemHeadline"); }
		}

		///<summary>
		/// Posted by
		///</summary>
		[ImplementPropertyType("grapevinePostedBy")]
		public string GrapevinePostedBy
		{
			get { return this.GetPropertyValue<string>("grapevinePostedBy"); }
		}

		///<summary>
		/// Email: The email address of the person who posted the message.
		///</summary>
		[ImplementPropertyType("grapevinePostedEmail")]
		public string GrapevinePostedEmail
		{
			get { return this.GetPropertyValue<string>("grapevinePostedEmail"); }
		}

		///<summary>
		/// Tel: The phone number of the person who posted the message.
		///</summary>
		[ImplementPropertyType("grapevinePostedTel")]
		public string GrapevinePostedTel
		{
			get { return this.GetPropertyValue<string>("grapevinePostedTel"); }
		}

		///<summary>
		/// Site
		///</summary>
		[ImplementPropertyType("grapevineSite")]
		public string GrapevineSite
		{
			get { return this.GetPropertyValue<string>("grapevineSite"); }
		}

		///<summary>
		/// Ward
		///</summary>
		[ImplementPropertyType("grapevineWard")]
		public string GrapevineWard
		{
			get { return this.GetPropertyValue<string>("grapevineWard"); }
		}

		///<summary>
		/// Highlight (in red) as operational incident?: Tick this box if this is an important operational message. These are shown as yellow text on a red background.
		///</summary>
		[ImplementPropertyType("highlight")]
		public bool Highlight
		{
			get { return this.GetPropertyValue<bool>("highlight"); }
		}

		///<summary>
		/// Highlight 2
		///</summary>
		[ImplementPropertyType("highlight2")]
		public int Highlight2
		{
			get { return this.GetPropertyValue<int>("highlight2"); }
		}
	}

	/// <summary>Grapevine child page</summary>
	[PublishedContentModel("grapevineChildPage")]
	public partial class GrapevineChildPage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "grapevineChildPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public GrapevineChildPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<GrapevineChildPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Body text: Add the main content for the page here.
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Page title: This is what shows as the heading in the actual page.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}
	}

	/// <summary>Marketplace item</summary>
	[PublishedContentModel("marketplaceItem")]
	public partial class MarketplaceItem : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "marketplaceItem";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public MarketplaceItem(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<MarketplaceItem, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Description
		///</summary>
		[ImplementPropertyType("marketplaceDescription")]
		public string MarketplaceDescription
		{
			get { return this.GetPropertyValue<string>("marketplaceDescription"); }
		}

		///<summary>
		/// Email address: Enter your email address.
		///</summary>
		[ImplementPropertyType("marketplaceEmail")]
		public string MarketplaceEmail
		{
			get { return this.GetPropertyValue<string>("marketplaceEmail"); }
		}

		///<summary>
		/// Photo
		///</summary>
		[ImplementPropertyType("marketplacePhoto")]
		public string MarketplacePhoto
		{
			get { return this.GetPropertyValue<string>("marketplacePhoto"); }
		}

		///<summary>
		/// Posted by
		///</summary>
		[ImplementPropertyType("marketplacePostedBy")]
		public string MarketplacePostedBy
		{
			get { return this.GetPropertyValue<string>("marketplacePostedBy"); }
		}

		///<summary>
		/// Price: Enter price in pounds. If free, enter a zero.
		///</summary>
		[ImplementPropertyType("marketplacePrice")]
		public int MarketplacePrice
		{
			get { return this.GetPropertyValue<int>("marketplacePrice"); }
		}

		///<summary>
		/// Telephone no.: Enter phone number(s)
		///</summary>
		[ImplementPropertyType("marketplaceTel")]
		public string MarketplaceTel
		{
			get { return this.GetPropertyValue<string>("marketplaceTel"); }
		}

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("marketplaceTitle")]
		public string MarketplaceTitle
		{
			get { return this.GetPropertyValue<string>("marketplaceTitle"); }
		}

		///<summary>
		/// Category
		///</summary>
		[ImplementPropertyType("marketplaceType")]
		public object MarketplaceType
		{
			get { return this.GetPropertyValue("marketplaceType"); }
		}

		///<summary>
		/// For sale or wanted?: Please choose...
		///</summary>
		[ImplementPropertyType("saleWanted")]
		public object SaleWanted
		{
			get { return this.GetPropertyValue("saleWanted"); }
		}
	}

	/// <summary>Marketplace home page</summary>
	[PublishedContentModel("marketplaceHomePage")]
	public partial class MarketplaceHomePage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "marketplaceHomePage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public MarketplaceHomePage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<MarketplaceHomePage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Page owner: The person ultimately responsible for the content on this page.
		///</summary>
		[ImplementPropertyType("pageOwner")]
		public string PageOwner
		{
			get { return this.GetPropertyValue<string>("pageOwner"); }
		}

		///<summary>
		/// Page owners position
		///</summary>
		[ImplementPropertyType("pageOwnersPosition")]
		public string PageOwnersPosition
		{
			get { return this.GetPropertyValue<string>("pageOwnersPosition"); }
		}

		///<summary>
		/// Page title: The title, which appears in the actual page.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// Start node ID: The ID number for 'Marketplace items' - the FOLDER in which Marketplace items are stored (see the Content tree). This has been set to 6048 and only needs to be changed if a different folder is used.
		///</summary>
		[ImplementPropertyType("startNodeID")]
		public int StartNodeID
		{
			get { return this.GetPropertyValue<int>("startNodeID"); }
		}

		///<summary>
		/// Sub-Editor: Sub-editor's email address
		///</summary>
		[ImplementPropertyType("subEditor")]
		public string SubEditor
		{
			get { return this.GetPropertyValue<string>("subEditor"); }
		}
	}

	/// <summary>Folder</summary>
	[PublishedContentModel("Folder")]
	public partial class Folder : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Folder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Folder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Folder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Contents:
		///</summary>
		[ImplementPropertyType("contents")]
		public object Contents
		{
			get { return this.GetPropertyValue("contents"); }
		}
	}

	/// <summary>Image</summary>
	[PublishedContentModel("Image")]
	public partial class Image : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Image";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Image(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Image, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload image
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public Umbraco.Web.Models.ImageCropDataSet UmbracoFile
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.ImageCropDataSet>("umbracoFile"); }
		}

		///<summary>
		/// Height
		///</summary>
		[ImplementPropertyType("umbracoHeight")]
		public string UmbracoHeight
		{
			get { return this.GetPropertyValue<string>("umbracoHeight"); }
		}

		///<summary>
		/// Width
		///</summary>
		[ImplementPropertyType("umbracoWidth")]
		public string UmbracoWidth
		{
			get { return this.GetPropertyValue<string>("umbracoWidth"); }
		}
	}

	/// <summary>File</summary>
	[PublishedContentModel("File")]
	public partial class File : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "File";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public File(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<File, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload file
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public object UmbracoFile
		{
			get { return this.GetPropertyValue("umbracoFile"); }
		}
	}

	/// <summary>Member</summary>
	[PublishedContentModel("Member")]
	public partial class Member : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Member";
		public new const PublishedItemType ModelItemType = PublishedItemType.Member;
#pragma warning restore 0109

		public Member(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Member, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Is Approved
		///</summary>
		[ImplementPropertyType("umbracoMemberApproved")]
		public bool UmbracoMemberApproved
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberApproved"); }
		}

		///<summary>
		/// Comments
		///</summary>
		[ImplementPropertyType("umbracoMemberComments")]
		public string UmbracoMemberComments
		{
			get { return this.GetPropertyValue<string>("umbracoMemberComments"); }
		}

		///<summary>
		/// Failed Password Attempts
		///</summary>
		[ImplementPropertyType("umbracoMemberFailedPasswordAttempts")]
		public string UmbracoMemberFailedPasswordAttempts
		{
			get { return this.GetPropertyValue<string>("umbracoMemberFailedPasswordAttempts"); }
		}

		///<summary>
		/// Last Lockout Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLockoutDate")]
		public string UmbracoMemberLastLockoutDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLockoutDate"); }
		}

		///<summary>
		/// Last Login Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLogin")]
		public string UmbracoMemberLastLogin
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLogin"); }
		}

		///<summary>
		/// Last Password Change Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastPasswordChangeDate")]
		public string UmbracoMemberLastPasswordChangeDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastPasswordChangeDate"); }
		}

		///<summary>
		/// Is Locked Out
		///</summary>
		[ImplementPropertyType("umbracoMemberLockedOut")]
		public bool UmbracoMemberLockedOut
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberLockedOut"); }
		}

		///<summary>
		/// Password Answer
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalAnswer")]
		public string UmbracoMemberPasswordRetrievalAnswer
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalAnswer"); }
		}

		///<summary>
		/// Password Question
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalQuestion")]
		public string UmbracoMemberPasswordRetrievalQuestion
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalQuestion"); }
		}
	}

}
